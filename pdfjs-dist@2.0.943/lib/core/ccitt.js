"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.CCITTFaxDecoder=void 0;var _util=require("../shared/util"),CCITTFaxDecoder=function(){var i=-2,t=-1,s=0,o=1,e=2,h=3,n=4,d=5,r=6,l=7,c=8,a=[[-1,-1],[-1,-1],[7,c],[7,l],[6,r],[6,r],[6,d],[6,d],[4,s],[4,s],[4,s],[4,s],[4,s],[4,s],[4,s],[4,s],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,o],[3,n],[3,n],[3,n],[3,n],[3,n],[3,n],[3,n],[3,n],[3,n],[3,n],[3,n],[3,n],[3,n],[3,n],[3,n],[3,n],[3,h],[3,h],[3,h],[3,h],[3,h],[3,h],[3,h],[3,h],[3,h],[3,h],[3,h],[3,h],[3,h],[3,h],[3,h],[3,h],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e],[1,e]],u=[[-1,-1],[12,i],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[12,1984],[12,2048],[12,2112],[12,2176],[12,2240],[12,2304],[11,1856],[11,1856],[11,1920],[11,1920],[12,2368],[12,2432],[12,2496],[12,2560]],f=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[8,29],[8,29],[8,30],[8,30],[8,45],[8,45],[8,46],[8,46],[7,22],[7,22],[7,22],[7,22],[7,23],[7,23],[7,23],[7,23],[8,47],[8,47],[8,48],[8,48],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[7,20],[7,20],[7,20],[7,20],[8,33],[8,33],[8,34],[8,34],[8,35],[8,35],[8,36],[8,36],[8,37],[8,37],[8,38],[8,38],[7,19],[7,19],[7,19],[7,19],[8,31],[8,31],[8,32],[8,32],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[8,53],[8,53],[8,54],[8,54],[7,26],[7,26],[7,26],[7,26],[8,39],[8,39],[8,40],[8,40],[8,41],[8,41],[8,42],[8,42],[8,43],[8,43],[8,44],[8,44],[7,21],[7,21],[7,21],[7,21],[7,28],[7,28],[7,28],[7,28],[8,61],[8,61],[8,62],[8,62],[8,63],[8,63],[8,0],[8,0],[8,320],[8,320],[8,384],[8,384],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[7,27],[7,27],[7,27],[7,27],[8,59],[8,59],[8,60],[8,60],[9,1472],[9,1536],[9,1600],[9,1728],[7,18],[7,18],[7,18],[7,18],[7,24],[7,24],[7,24],[7,24],[8,49],[8,49],[8,50],[8,50],[8,51],[8,51],[8,52],[8,52],[7,25],[7,25],[7,25],[7,25],[8,55],[8,55],[8,56],[8,56],[8,57],[8,57],[8,58],[8,58],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[8,448],[8,448],[8,512],[8,512],[9,704],[9,768],[8,640],[8,640],[8,576],[8,576],[9,832],[9,896],[9,960],[9,1024],[9,1088],[9,1152],[9,1216],[9,1280],[9,1344],[9,1408],[7,256],[7,256],[7,256],[7,256],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7]],_=[[-1,-1],[-1,-1],[12,i],[12,i],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[11,1792],[11,1792],[12,1984],[12,1984],[12,2048],[12,2048],[12,2112],[12,2112],[12,2176],[12,2176],[12,2240],[12,2240],[12,2304],[12,2304],[11,1856],[11,1856],[11,1856],[11,1856],[11,1920],[11,1920],[11,1920],[11,1920],[12,2368],[12,2368],[12,2432],[12,2432],[12,2496],[12,2496],[12,2560],[12,2560],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[12,52],[12,52],[13,640],[13,704],[13,768],[13,832],[12,55],[12,55],[12,56],[12,56],[13,1280],[13,1344],[13,1408],[13,1472],[12,59],[12,59],[12,60],[12,60],[13,1536],[13,1600],[11,24],[11,24],[11,24],[11,24],[11,25],[11,25],[11,25],[11,25],[13,1664],[13,1728],[12,320],[12,320],[12,384],[12,384],[12,448],[12,448],[13,512],[13,576],[12,53],[12,53],[12,54],[12,54],[13,896],[13,960],[13,1024],[13,1088],[13,1152],[13,1216],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64]],g=[[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[11,23],[11,23],[12,50],[12,51],[12,44],[12,45],[12,46],[12,47],[12,57],[12,58],[12,61],[12,256],[10,16],[10,16],[10,16],[10,16],[10,17],[10,17],[10,17],[10,17],[12,48],[12,49],[12,62],[12,63],[12,30],[12,31],[12,32],[12,33],[12,40],[12,41],[11,22],[11,22],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[12,128],[12,192],[12,26],[12,27],[12,28],[12,29],[11,19],[11,19],[11,20],[11,20],[12,34],[12,35],[12,36],[12,37],[12,38],[12,39],[11,21],[11,21],[12,42],[12,43],[10,0],[10,0],[10,0],[10,0],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12]],B=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[6,9],[6,8],[5,7],[5,7],[4,6],[4,6],[4,6],[4,6],[4,5],[4,5],[4,5],[4,5],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2]];function P(i){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!i||"function"!==typeof i.next)throw new Error('CCITTFaxDecoder - invalid "source" parameter.');this.source=i,this.eof=!1,this.encoding=t["K"]||0,this.eoline=t["EndOfLine"]||!1,this.byteAlign=t["EncodedByteAlign"]||!1,this.columns=t["Columns"]||1728,this.rows=t["Rows"]||0;var s=t["EndOfBlock"];null!==s&&void 0!==s||(s=!0),this.eoblock=s,this.black=t["BlackIs1"]||!1,this.codingLine=new Uint32Array(this.columns+1),this.refLine=new Uint32Array(this.columns+2),this.codingLine[0]=this.columns,this.codingPos=0,this.row=0,this.nextLine2D=this.encoding<0,this.inputBits=0,this.inputBuf=0,this.outputBits=0,this.rowsDone=!1;var o=void 0;while(0===(o=this._lookBits(12)))this._eatBits(1);1===o&&this._eatBits(12),this.encoding>0&&(this.nextLine2D=!this._lookBits(1),this._eatBits(1))}return P.prototype={readNextChar:function(){if(this.eof)return-1;var i=this.refLine,a=this.codingLine,u=this.columns,f=void 0,_=void 0,g=void 0,B=void 0;if(0===this.outputBits){if(this.rowsDone&&(this.eof=!0),this.eof)return-1;this.err=!1;var P=void 0,w=void 0,k=void 0;if(this.nextLine2D){for(B=0;a[B]<u;++B)i[B]=a[B];i[B++]=u,i[B]=u,a[0]=0,this.codingPos=0,f=0,_=0;while(a[this.codingPos]<u)switch(P=this._getTwoDimCode(),P){case s:this._addPixels(i[f+1],_),i[f+1]<u&&(f+=2);break;case o:if(P=w=0,_){do{P+=k=this._getBlackCode()}while(k>=64);do{w+=k=this._getWhiteCode()}while(k>=64)}else{do{P+=k=this._getWhiteCode()}while(k>=64);do{w+=k=this._getBlackCode()}while(k>=64)}this._addPixels(a[this.codingPos]+P,_),a[this.codingPos]<u&&this._addPixels(a[this.codingPos]+w,1^_);while(i[f]<=a[this.codingPos]&&i[f]<u)f+=2;break;case l:if(this._addPixels(i[f]+3,_),_^=1,a[this.codingPos]<u){++f;while(i[f]<=a[this.codingPos]&&i[f]<u)f+=2}break;case d:if(this._addPixels(i[f]+2,_),_^=1,a[this.codingPos]<u){++f;while(i[f]<=a[this.codingPos]&&i[f]<u)f+=2}break;case h:if(this._addPixels(i[f]+1,_),_^=1,a[this.codingPos]<u){++f;while(i[f]<=a[this.codingPos]&&i[f]<u)f+=2}break;case e:if(this._addPixels(i[f],_),_^=1,a[this.codingPos]<u){++f;while(i[f]<=a[this.codingPos]&&i[f]<u)f+=2}break;case c:if(this._addPixelsNeg(i[f]-3,_),_^=1,a[this.codingPos]<u){f>0?--f:++f;while(i[f]<=a[this.codingPos]&&i[f]<u)f+=2}break;case r:if(this._addPixelsNeg(i[f]-2,_),_^=1,a[this.codingPos]<u){f>0?--f:++f;while(i[f]<=a[this.codingPos]&&i[f]<u)f+=2}break;case n:if(this._addPixelsNeg(i[f]-1,_),_^=1,a[this.codingPos]<u){f>0?--f:++f;while(i[f]<=a[this.codingPos]&&i[f]<u)f+=2}break;case t:this._addPixels(u,0),this.eof=!0;break;default:(0,_util.info)("bad 2d code"),this._addPixels(u,0),this.err=!0}}else{a[0]=0,this.codingPos=0,_=0;while(a[this.codingPos]<u){if(P=0,_)do{P+=k=this._getBlackCode()}while(k>=64);else do{P+=k=this._getWhiteCode()}while(k>=64);this._addPixels(a[this.codingPos]+P,_),_^=1}}var v=!1;if(this.byteAlign&&(this.inputBits&=-8),this.eoblock||this.row!==this.rows-1){if(P=this._lookBits(12),this.eoline)while(P!==t&&1!==P)this._eatBits(1),P=this._lookBits(12);else while(0===P)this._eatBits(1),P=this._lookBits(12);1===P?(this._eatBits(12),v=!0):P===t&&(this.eof=!0)}else this.rowsDone=!0;if(!this.eof&&this.encoding>0&&!this.rowsDone&&(this.nextLine2D=!this._lookBits(1),this._eatBits(1)),this.eoblock&&v&&this.byteAlign){if(P=this._lookBits(12),1===P){if(this._eatBits(12),this.encoding>0&&(this._lookBits(1),this._eatBits(1)),this.encoding>=0)for(B=0;B<4;++B)P=this._lookBits(12),1!==P&&(0,_util.info)("bad rtc code: "+P),this._eatBits(12),this.encoding>0&&(this._lookBits(1),this._eatBits(1));this.eof=!0}}else if(this.err&&this.eoline){while(1){if(P=this._lookBits(13),P===t)return this.eof=!0,-1;if(P>>1===1)break;this._eatBits(1)}this._eatBits(12),this.encoding>0&&(this._eatBits(1),this.nextLine2D=!(1&P))}a[0]>0?this.outputBits=a[this.codingPos=0]:this.outputBits=a[this.codingPos=1],this.row++}var p=void 0;if(this.outputBits>=8)p=1&this.codingPos?0:255,this.outputBits-=8,0===this.outputBits&&a[this.codingPos]<u&&(this.codingPos++,this.outputBits=a[this.codingPos]-a[this.codingPos-1]);else{g=8,p=0;do{this.outputBits>g?(p<<=g,1&this.codingPos||(p|=255>>8-g),this.outputBits-=g,g=0):(p<<=this.outputBits,1&this.codingPos||(p|=255>>8-this.outputBits),g-=this.outputBits,this.outputBits=0,a[this.codingPos]<u?(this.codingPos++,this.outputBits=a[this.codingPos]-a[this.codingPos-1]):g>0&&(p<<=g,g=0))}while(g)}return this.black&&(p^=255),p},_addPixels:function(i,t){var s=this.codingLine,o=this.codingPos;i>s[o]&&(i>this.columns&&((0,_util.info)("row is wrong length"),this.err=!0,i=this.columns),1&o^t&&++o,s[o]=i),this.codingPos=o},_addPixelsNeg:function(i,t){var s=this.codingLine,o=this.codingPos;if(i>s[o])i>this.columns&&((0,_util.info)("row is wrong length"),this.err=!0,i=this.columns),1&o^t&&++o,s[o]=i;else if(i<s[o]){i<0&&((0,_util.info)("invalid code"),this.err=!0,i=0);while(o>0&&i<s[o-1])--o;s[o]=i}this.codingPos=o},_findTableCode:function(i,s,o,e){for(var h=e||0,n=i;n<=s;++n){var d=this._lookBits(n);if(d===t)return[!0,1,!1];if(n<s&&(d<<=s-n),!h||d>=h){var r=o[d-h];if(r[0]===n)return this._eatBits(n),[!0,r[1],!0]}}return[!1,0,!1]},_getTwoDimCode:function(){var i=0,s=void 0;if(this.eoblock){if(i=this._lookBits(7),s=a[i],s&&s[0]>0)return this._eatBits(s[0]),s[1]}else{var o=this._findTableCode(1,7,a);if(o[0]&&o[2])return o[1]}return(0,_util.info)("Bad two dim code"),t},_getWhiteCode:function(){var i=0,s=void 0;if(this.eoblock){if(i=this._lookBits(12),i===t)return 1;if(s=i>>5===0?u[i]:f[i>>3],s[0]>0)return this._eatBits(s[0]),s[1]}else{var o=this._findTableCode(1,9,f);if(o[0])return o[1];if(o=this._findTableCode(11,12,u),o[0])return o[1]}return(0,_util.info)("bad white code"),this._eatBits(1),1},_getBlackCode:function(){var i=void 0,s=void 0;if(this.eoblock){if(i=this._lookBits(13),i===t)return 1;if(s=i>>7===0?_[i]:i>>9===0&&i>>7!==0?g[(i>>1)-64]:B[i>>7],s[0]>0)return this._eatBits(s[0]),s[1]}else{var o=this._findTableCode(2,6,B);if(o[0])return o[1];if(o=this._findTableCode(7,12,g,64),o[0])return o[1];if(o=this._findTableCode(10,13,_),o[0])return o[1]}return(0,_util.info)("bad black code"),this._eatBits(1),1},_lookBits:function(i){var s=void 0;while(this.inputBits<i){if(-1===(s=this.source.next()))return 0===this.inputBits?t:this.inputBuf<<i-this.inputBits&65535>>16-i;this.inputBuf=this.inputBuf<<8|s,this.inputBits+=8}return this.inputBuf>>this.inputBits-i&65535>>16-i},_eatBits:function(i){(this.inputBits-=i)<0&&(this.inputBits=0)}},P}();exports.CCITTFaxDecoder=CCITTFaxDecoder;