"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.OverlayManager=void 0;var _regenerator=require("babel-runtime/regenerator"),_regenerator2=_interopRequireDefault(_regenerator),_createClass=function(){function e(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(r,t,n){return t&&e(r.prototype,t),n&&e(r,n),r}}();function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _asyncToGenerator(e){return function(){var r=e.apply(this,arguments);return new Promise((function(e,t){function n(a,o){try{var i=r[a](o),s=i.value}catch(c){return void t(c)}if(!i.done)return Promise.resolve(s).then((function(e){n("next",e)}),(function(e){n("throw",e)}));e(s)}return n("next")}))}}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}var OverlayManager=function(){function e(){_classCallCheck(this,e),this._overlays={},this._active=null,this._keyDownBound=this._keyDown.bind(this)}return _createClass(e,[{key:"register",value:function(){var e=_asyncToGenerator(_regenerator2.default.mark((function e(r,t){var n,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return _regenerator2.default.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(n=void 0,r&&t&&(n=t.parentNode)){e.next=5;break}throw new Error("Not enough parameters.");case 5:if(!this._overlays[r]){e.next=7;break}throw new Error("The overlay is already registered.");case 7:this._overlays[r]={element:t,container:n,callerCloseMethod:a,canForceClose:o};case 8:case"end":return e.stop()}}),e,this)})));function r(r,t){return e.apply(this,arguments)}return r}()},{key:"unregister",value:function(){var e=_asyncToGenerator(_regenerator2.default.mark((function e(r){return _regenerator2.default.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(this._overlays[r]){e.next=4;break}throw new Error("The overlay does not exist.");case 4:if(this._active!==r){e.next=6;break}throw new Error("The overlay cannot be removed while it is active.");case 6:delete this._overlays[r];case 7:case"end":return e.stop()}}),e,this)})));function r(r){return e.apply(this,arguments)}return r}()},{key:"open",value:function(){var e=_asyncToGenerator(_regenerator2.default.mark((function e(r){return _regenerator2.default.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(this._overlays[r]){e.next=4;break}throw new Error("The overlay does not exist.");case 4:if(!this._active){e.next=14;break}if(!this._overlays[r].canForceClose){e.next=9;break}this._closeThroughCaller(),e.next=14;break;case 9:if(this._active!==r){e.next=13;break}throw new Error("The overlay is already active.");case 13:throw new Error("Another overlay is currently active.");case 14:this._active=r,this._overlays[this._active].element.classList.remove("hidden"),this._overlays[this._active].container.classList.remove("hidden"),window.addEventListener("keydown",this._keyDownBound);case 18:case"end":return e.stop()}}),e,this)})));function r(r){return e.apply(this,arguments)}return r}()},{key:"close",value:function(){var e=_asyncToGenerator(_regenerator2.default.mark((function e(r){return _regenerator2.default.wrap((function(e){while(1)switch(e.prev=e.next){case 0:if(this._overlays[r]){e.next=4;break}throw new Error("The overlay does not exist.");case 4:if(this._active){e.next=8;break}throw new Error("The overlay is currently not active.");case 8:if(this._active===r){e.next=10;break}throw new Error("Another overlay is currently active.");case 10:this._overlays[this._active].container.classList.add("hidden"),this._overlays[this._active].element.classList.add("hidden"),this._active=null,window.removeEventListener("keydown",this._keyDownBound);case 14:case"end":return e.stop()}}),e,this)})));function r(r){return e.apply(this,arguments)}return r}()},{key:"_keyDown",value:function(e){this._active&&27===e.keyCode&&(this._closeThroughCaller(),e.preventDefault())}},{key:"_closeThroughCaller",value:function(){this._overlays[this._active].callerCloseMethod&&this._overlays[this._active].callerCloseMethod(),this._active&&this.close(this._active)}},{key:"active",get:function(){return this._active}}]),e}();exports.OverlayManager=OverlayManager;