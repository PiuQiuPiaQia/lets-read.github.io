"use strict";var _murmurhash=require("../../core/murmurhash3");describe("MurmurHash3_64",(function(){it("instantiates without seed",(function(){var e=new _murmurhash.MurmurHash3_64;expect(e).toEqual(jasmine.any(_murmurhash.MurmurHash3_64))})),it("instantiates with seed",(function(){var e=new _murmurhash.MurmurHash3_64(1);expect(e).toEqual(jasmine.any(_murmurhash.MurmurHash3_64))}));var e="f61cfdbfdae0f65e",r="test",t=[116,101,115,116];it("correctly generates a hash from a string",(function(){var t=new _murmurhash.MurmurHash3_64;t.update(r),expect(t.hexdigest()).toEqual(e)})),it("correctly generates a hash from a Uint8Array",(function(){var r=new _murmurhash.MurmurHash3_64;r.update(new Uint8Array(t)),expect(r.hexdigest()).toEqual(e)})),it("correctly generates a hash from a Uint32Array",(function(){var r=new _murmurhash.MurmurHash3_64;r.update(new Uint32Array(new Uint8Array(t).buffer)),expect(r.hexdigest()).toEqual(e)})),it("changes the hash after update without seed",(function(){var e,t,a=new _murmurhash.MurmurHash3_64;a.update(r),e=a.hexdigest(),a.update(r),t=a.hexdigest(),expect(e).not.toEqual(t)})),it("changes the hash after update with seed",(function(){var e,t,a=new _murmurhash.MurmurHash3_64(1);a.update(r),e=a.hexdigest(),a.update(r),t=a.hexdigest(),expect(e).not.toEqual(t)}))}));