"use strict";var _typeof="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_util=require("../../shared/util"),_primitives=require("../../core/primitives"),_test_utils=require("./test_utils");describe("util",(function(){describe("bytesToString",(function(){it("handles non-array arguments",(function(){expect((function(){(0,_util.bytesToString)(null)})).toThrow(new Error("Invalid argument for bytesToString"))})),it("handles array arguments with a length not exceeding the maximum",(function(){expect((0,_util.bytesToString)(new Uint8Array([]))).toEqual(""),expect((0,_util.bytesToString)(new Uint8Array([102,111,111]))).toEqual("foo")})),it("handles array arguments with a length exceeding the maximum",(function(){for(var t=1e4,e=new Uint8Array(t),i=0;i<t;i++)e[i]="a".charCodeAt(0);var o=Array(t+1).join("a");expect((0,_util.bytesToString)(e)).toEqual(o)}))})),describe("getInheritableProperty",(function(){it("handles non-dictionary arguments",(function(){expect((0,_util.getInheritableProperty)({dict:null,key:"foo"})).toEqual(void 0),expect((0,_util.getInheritableProperty)({dict:void 0,key:"foo"})).toEqual(void 0)})),it("handles dictionaries that do not contain the property",(function(){var t=new _primitives.Dict;expect((0,_util.getInheritableProperty)({dict:t,key:"foo"})).toEqual(void 0);var e=new _primitives.Dict;e.set("bar","baz"),expect((0,_util.getInheritableProperty)({dict:e,key:"foo"})).toEqual(void 0)})),it("fetches the property if it is not inherited",(function(){var t=new _primitives.Ref(10,0),e=new _test_utils.XRefMock([{ref:t,data:"quux"}]),i=new _primitives.Dict(e);i.set("foo","bar"),expect((0,_util.getInheritableProperty)({dict:i,key:"foo"})).toEqual("bar"),i.set("baz",["qux",t]),expect((0,_util.getInheritableProperty)({dict:i,key:"baz",getArray:!0})).toEqual(["qux","quux"])})),it("fetches the property if it is inherited and present on one level",(function(){var t=new _primitives.Ref(10,0),e=new _test_utils.XRefMock([{ref:t,data:"quux"}]),i=new _primitives.Dict(e),o=new _primitives.Dict(e);i.set("Parent",o),o.set("foo","bar"),expect((0,_util.getInheritableProperty)({dict:i,key:"foo"})).toEqual("bar"),o.set("baz",["qux",t]),expect((0,_util.getInheritableProperty)({dict:i,key:"baz",getArray:!0})).toEqual(["qux","quux"])})),it("fetches the property if it is inherited and present on multiple levels",(function(){var t=new _primitives.Ref(10,0),e=new _test_utils.XRefMock([{ref:t,data:"quux"}]),i=new _primitives.Dict(e),o=new _primitives.Dict(e);i.set("Parent",o),i.set("foo","bar1"),o.set("foo","bar2"),expect((0,_util.getInheritableProperty)({dict:i,key:"foo"})).toEqual("bar1"),expect((0,_util.getInheritableProperty)({dict:i,key:"foo",getArray:!1,stopWhenFound:!1})).toEqual(["bar1","bar2"]),i.set("baz",["qux1",t]),o.set("baz",["qux2",t]),expect((0,_util.getInheritableProperty)({dict:i,key:"baz",getArray:!0,stopWhenFound:!1})).toEqual([["qux1","quux"],["qux2","quux"]])})),it("stops searching when the loop limit is reached",(function(){for(var t=new _primitives.Dict,e=t,i=null,o=0;o<150;o++)i=new _primitives.Dict,e.set("Parent",i),e=i;i.set("foo","bar"),expect((0,_util.getInheritableProperty)({dict:t,key:"foo"})).toEqual(void 0),t.set("foo","baz"),expect((0,_util.getInheritableProperty)({dict:t,key:"foo",getArray:!1,stopWhenFound:!1})).toEqual(["baz"])}))})),describe("isArrayBuffer",(function(){it("handles array buffer values",(function(){expect((0,_util.isArrayBuffer)(new ArrayBuffer(0))).toEqual(!0),expect((0,_util.isArrayBuffer)(new Uint8Array(0))).toEqual(!0)})),it("handles non-array buffer values",(function(){expect((0,_util.isArrayBuffer)("true")).toEqual(!1),expect((0,_util.isArrayBuffer)(1)).toEqual(!1),expect((0,_util.isArrayBuffer)(null)).toEqual(!1),expect((0,_util.isArrayBuffer)(void 0)).toEqual(!1)}))})),describe("isBool",(function(){it("handles boolean values",(function(){expect((0,_util.isBool)(!0)).toEqual(!0),expect((0,_util.isBool)(!1)).toEqual(!0)})),it("handles non-boolean values",(function(){expect((0,_util.isBool)("true")).toEqual(!1),expect((0,_util.isBool)("false")).toEqual(!1),expect((0,_util.isBool)(1)).toEqual(!1),expect((0,_util.isBool)(0)).toEqual(!1),expect((0,_util.isBool)(null)).toEqual(!1),expect((0,_util.isBool)(void 0)).toEqual(!1)}))})),describe("isEmptyObj",(function(){it("handles empty objects",(function(){expect((0,_util.isEmptyObj)({})).toEqual(!0)})),it("handles non-empty objects",(function(){expect((0,_util.isEmptyObj)({foo:"bar"})).toEqual(!1)}))})),describe("isNum",(function(){it("handles numeric values",(function(){expect((0,_util.isNum)(1)).toEqual(!0),expect((0,_util.isNum)(0)).toEqual(!0),expect((0,_util.isNum)(-1)).toEqual(!0),expect((0,_util.isNum)(1e18)).toEqual(!0),expect((0,_util.isNum)(12.34)).toEqual(!0)})),it("handles non-numeric values",(function(){expect((0,_util.isNum)("true")).toEqual(!1),expect((0,_util.isNum)(!0)).toEqual(!1),expect((0,_util.isNum)(null)).toEqual(!1),expect((0,_util.isNum)(void 0)).toEqual(!1)}))})),describe("isSpace",(function(){it("handles space characters",(function(){expect((0,_util.isSpace)(32)).toEqual(!0),expect((0,_util.isSpace)(9)).toEqual(!0),expect((0,_util.isSpace)(13)).toEqual(!0),expect((0,_util.isSpace)(10)).toEqual(!0)})),it("handles non-space characters",(function(){expect((0,_util.isSpace)(11)).toEqual(!1),expect((0,_util.isSpace)(null)).toEqual(!1),expect((0,_util.isSpace)(void 0)).toEqual(!1)}))})),describe("isString",(function(){it("handles string values",(function(){expect((0,_util.isString)("foo")).toEqual(!0),expect((0,_util.isString)("")).toEqual(!0)})),it("handles non-string values",(function(){expect((0,_util.isString)(!0)).toEqual(!1),expect((0,_util.isString)(1)).toEqual(!1),expect((0,_util.isString)(null)).toEqual(!1),expect((0,_util.isString)(void 0)).toEqual(!1)}))})),describe("log2",(function(){it("handles values smaller than/equal to zero",(function(){expect((0,_util.log2)(0)).toEqual(0),expect((0,_util.log2)(-1)).toEqual(0)})),it("handles values larger than zero",(function(){expect((0,_util.log2)(1)).toEqual(0),expect((0,_util.log2)(2)).toEqual(1),expect((0,_util.log2)(3)).toEqual(2),expect((0,_util.log2)(3.14)).toEqual(2)}))})),describe("stringToBytes",(function(){it("handles non-string arguments",(function(){expect((function(){(0,_util.stringToBytes)(null)})).toThrow(new Error("Invalid argument for stringToBytes"))})),it("handles string arguments",(function(){expect((0,_util.stringToBytes)("")).toEqual(new Uint8Array([])),expect((0,_util.stringToBytes)("foo")).toEqual(new Uint8Array([102,111,111]))}))})),describe("stringToPDFString",(function(){it("handles ISO Latin 1 strings",(function(){var t="\x8dstring\x8e";expect((0,_util.stringToPDFString)(t)).toEqual("\u201cstring\u201d")})),it("handles UTF-16BE strings",(function(){var t="\xfe\xff\0s\0t\0r\0i\0n\0g";expect((0,_util.stringToPDFString)(t)).toEqual("string")})),it("handles empty strings",(function(){var t="";expect((0,_util.stringToPDFString)(t)).toEqual("");var e="\xfe\xff";expect((0,_util.stringToPDFString)(e)).toEqual("")}))})),describe("removeNullCharacters",(function(){it("should not modify string without null characters",(function(){var t="string without null chars";expect((0,_util.removeNullCharacters)(t)).toEqual("string without null chars")})),it("should modify string with null characters",(function(){var t="string\0With\0Null\0Chars";expect((0,_util.removeNullCharacters)(t)).toEqual("stringWithNullChars")}))})),describe("ReadableStream",(function(){it("should return an Object",(function(){var t=new _util.ReadableStream;expect("undefined"===typeof t?"undefined":_typeof(t)).toEqual("object")})),it("should have property getReader",(function(){var t=new _util.ReadableStream;expect(_typeof(t.getReader)).toEqual("function")}))})),describe("URL",(function(){it("should return an Object",(function(){var t=new _util.URL("https://example.com");expect("undefined"===typeof t?"undefined":_typeof(t)).toEqual("object")})),it("should have property `href`",(function(){var t=new _util.URL("https://example.com");expect(_typeof(t.href)).toEqual("string")}))})),describe("isSameOrigin",(function(){it("handles invalid base URLs",(function(){expect((0,_util.isSameOrigin)("/foo","/bar")).toEqual(!1),expect((0,_util.isSameOrigin)("blob:foo","/bar")).toEqual(!1)})),it("correctly checks if the origin of both URLs matches",(function(){expect((0,_util.isSameOrigin)("https://www.mozilla.org/foo","https://www.mozilla.org/bar")).toEqual(!0),expect((0,_util.isSameOrigin)("https://www.mozilla.org/foo","https://www.example.com/bar")).toEqual(!1)}))})),describe("createValidAbsoluteUrl",(function(){it("handles invalid URLs",(function(){expect((0,_util.createValidAbsoluteUrl)(void 0,void 0)).toEqual(null),expect((0,_util.createValidAbsoluteUrl)(null,null)).toEqual(null),expect((0,_util.createValidAbsoluteUrl)("/foo","/bar")).toEqual(null)})),it("handles URLs that do not use a whitelisted protocol",(function(){expect((0,_util.createValidAbsoluteUrl)("magnet:?foo",null)).toEqual(null)})),it("correctly creates a valid URL for whitelisted protocols",(function(){expect((0,_util.createValidAbsoluteUrl)("http://www.mozilla.org/foo",null)).toEqual(new _util.URL("http://www.mozilla.org/foo")),expect((0,_util.createValidAbsoluteUrl)("/foo","http://www.mozilla.org")).toEqual(new _util.URL("http://www.mozilla.org/foo")),expect((0,_util.createValidAbsoluteUrl)("https://www.mozilla.org/foo",null)).toEqual(new _util.URL("https://www.mozilla.org/foo")),expect((0,_util.createValidAbsoluteUrl)("/foo","https://www.mozilla.org")).toEqual(new _util.URL("https://www.mozilla.org/foo")),expect((0,_util.createValidAbsoluteUrl)("ftp://www.mozilla.org/foo",null)).toEqual(new _util.URL("ftp://www.mozilla.org/foo")),expect((0,_util.createValidAbsoluteUrl)("/foo","ftp://www.mozilla.org")).toEqual(new _util.URL("ftp://www.mozilla.org/foo")),expect((0,_util.createValidAbsoluteUrl)("mailto:foo@bar.baz",null)).toEqual(new _util.URL("mailto:foo@bar.baz")),expect((0,_util.createValidAbsoluteUrl)("/foo","mailto:foo@bar.baz")).toEqual(null),expect((0,_util.createValidAbsoluteUrl)("tel:+0123456789",null)).toEqual(new _util.URL("tel:+0123456789")),expect((0,_util.createValidAbsoluteUrl)("/foo","tel:0123456789")).toEqual(null)}))}))}));