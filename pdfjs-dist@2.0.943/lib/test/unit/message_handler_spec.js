"use strict";var _typeof="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_util=require("../../shared/util"),_api=require("../../display/api"),_message_handler=require("../../shared/message_handler");describe("message_handler",(function(){function e(n){return Promise.resolve().then((function(){return n&&e(n-1)}))}describe("sendWithStream",(function(){it("should return a ReadableStream",(function(){var e=new _api.LoopbackPort,n=new _message_handler.MessageHandler("main","worker",e),t=n.sendWithStream("fakeHandler");expect("undefined"===typeof t?"undefined":_typeof(t)).toEqual("object"),expect(_typeof(t.getReader)).toEqual("function")})),it("should read using a reader",(function(n){var t="",r=new _api.LoopbackPort,a=new _message_handler.MessageHandler("main","worker",r),o=new _message_handler.MessageHandler("worker","main",r);o.on("fakeHandler",(function(n,r){return r.onPull=function(){t+="p"},r.onCancel=function(e){t+="c"},r.ready.then((function(){return r.enqueue("hi"),r.ready})).then((function(){r.close()})),e(5)}));var u=a.sendWithStream("fakeHandler",{},{highWaterMark:1,size:function(){return 1}}),i=u.getReader();e(10).then((function(){return expect(t).toEqual(""),i.read()})).then((function(n){return expect(t).toEqual("p"),expect(n.value).toEqual("hi"),expect(n.done).toEqual(!1),e(10)})).then((function(){return i.read()})).then((function(e){expect(e.value).toEqual(void 0),expect(e.done).toEqual(!0),n()}))})),it("should not read any data when cancelled",(function(n){var t="",r=new _api.LoopbackPort,a=new _message_handler.MessageHandler("worker","main",r);a.on("fakeHandler",(function(e,n){n.onPull=function(){t+="p"},n.onCancel=function(e){t+="c"},t+="0",n.ready.then((function(){return t+="1",n.enqueue([1,2,3,4],4),n.ready})).then((function(){return t+="2",n.enqueue([5,6,7,8],4),n.ready})).then((function(){t+="3",n.close()}),(function(){t+="4"}))}));var o=new _message_handler.MessageHandler("main","worker",r),u=o.sendWithStream("fakeHandler",{},{highWaterMark:4,size:function(e){return e.length}}),i=u.getReader();e(10).then((function(){return expect(t).toEqual("01"),i.read()})).then((function(n){return expect(n.value).toEqual([1,2,3,4]),expect(n.done).toEqual(!1),e(10)})).then((function(){return expect(t).toEqual("01p2"),i.cancel()})).then((function(){expect(t).toEqual("01p2c4"),n()}))})),it("should not read when errored",(function(n){var t="",r=new _api.LoopbackPort,a=new _message_handler.MessageHandler("worker","main",r);a.on("fakeHandler",(function(e,n){n.onPull=function(){t+="p"},n.onCancel=function(e){t+="c"},n.ready.then((function(){return n.enqueue([1,2,3,4],4),n.ready})).then((function(){t+="error",n.error("error")}))}));var o=new _message_handler.MessageHandler("main","worker",r),u=o.sendWithStream("fakeHandler",{},{highWaterMark:4,size:function(e){return e.length}}),i=u.getReader();e(10).then((function(){return expect(t).toEqual(""),i.read()})).then((function(e){return expect(e.value).toEqual([1,2,3,4]),expect(e.done).toEqual(!1),i.read()})).then((function(){}),(function(e){expect(e).toEqual("error"),n()}))})),it("should read data with blocking promise",(function(n){var t="",r=new _api.LoopbackPort,a=new _message_handler.MessageHandler("worker","main",r);a.on("fakeHandler",(function(e,n){n.onPull=function(){t+="p"},n.onCancel=function(e){t+="c"},t+="0",n.ready.then((function(){return t+="1",n.enqueue([1,2,3,4],4),n.ready})).then((function(){return t+="2",n.enqueue([5,6,7,8],4),n.ready})).then((function(){n.close()}))}));var o=new _message_handler.MessageHandler("main","worker",r),u=o.sendWithStream("fakeHandler",{},{highWaterMark:4,size:function(e){return e.length}}),i=u.getReader();e(10).then((function(){return expect(t).toEqual("01"),i.read()})).then((function(n){return expect(n.value).toEqual([1,2,3,4]),expect(n.done).toEqual(!1),e(10)})).then((function(){return expect(t).toEqual("01p2"),i.read()})).then((function(n){return expect(n.value).toEqual([5,6,7,8]),expect(n.done).toEqual(!1),e(10)})).then((function(){return expect(t).toEqual("01p2p"),i.read()})).then((function(e){expect(e.value).toEqual(void 0),expect(e.done).toEqual(!0),n()}))})),it("should read data with blocking promise and buffer whole data into stream",(function(n){var t="",r=new _api.LoopbackPort,a=new _message_handler.MessageHandler("worker","main",r);a.on("fakeHandler",(function(n,r){return r.onPull=function(){t+="p"},r.onCancel=function(e){t+="c"},t+="0",r.ready.then((function(){return t+="1",r.enqueue([1,2,3,4],4),r.ready})).then((function(){return t+="2",r.enqueue([5,6,7,8],4),r.ready})).then((function(){r.close()})),e(10)}));var o=new _message_handler.MessageHandler("main","worker",r),u=o.sendWithStream("fakeHandler",{},{highWaterMark:8,size:function(e){return e.length}}),i=u.getReader();e(10).then((function(){return expect(t).toEqual("012"),i.read()})).then((function(n){return expect(n.value).toEqual([1,2,3,4]),expect(n.done).toEqual(!1),e(10)})).then((function(){return expect(t).toEqual("012p"),i.read()})).then((function(n){return expect(n.value).toEqual([5,6,7,8]),expect(n.done).toEqual(!1),e(10)})).then((function(){return expect(t).toEqual("012p"),i.read()})).then((function(e){expect(e.value).toEqual(void 0),expect(e.done).toEqual(!0),n()}))})),it("should ignore any pull after close is called",(function(n){var t="",r=new _api.LoopbackPort,a=(0,_util.createPromiseCapability)(),o=new _message_handler.MessageHandler("worker","main",r);o.on("fakeHandler",(function(e,n){return n.onPull=function(){t+="p"},n.onCancel=function(e){t+="c"},t+="0",n.ready.then((function(){t+="1",n.enqueue([1,2,3,4],4)})),a.promise.then((function(){n.close()}))}));var u=new _message_handler.MessageHandler("main","worker",r),i=u.sendWithStream("fakeHandler",{},{highWaterMark:10,size:function(e){return e.length}}),c=i.getReader();e(10).then((function(){return expect(t).toEqual("01"),a.resolve(),a.promise.then((function(){return c.read()}))})).then((function(n){return expect(n.value).toEqual([1,2,3,4]),expect(n.done).toEqual(!1),e(10)})).then((function(){return expect(t).toEqual("01"),c.read()})).then((function(e){expect(e.value).toEqual(void 0),expect(e.done).toEqual(!0),n()}))}))}))}));