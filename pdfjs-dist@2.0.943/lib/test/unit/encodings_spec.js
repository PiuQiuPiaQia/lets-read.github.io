"use strict";var _typeof="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},_encodings=require("../../core/encodings");describe("encodings",(function(){describe("getEncoding",(function(){it("fetches a valid array for known encoding names",(function(){var n=["ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","SymbolSetEncoding","WinAnsiEncoding","ZapfDingbatsEncoding"],o=!0,t=!1,e=void 0;try{for(var r,i=n[Symbol.iterator]();!(o=(r=i.next()).done);o=!0){var c=r.value,a=(0,_encodings.getEncoding)(c);expect(Array.isArray(a)).toEqual(!0),expect(a.length).toEqual(256);var d=!0,f=!1,l=void 0;try{for(var y,u=a[Symbol.iterator]();!(d=(y=u.next()).done);d=!0){var g=y.value;expect("undefined"===typeof g?"undefined":_typeof(g)).toEqual("string")}}catch(s){f=!0,l=s}finally{try{!d&&u.return&&u.return()}finally{if(f)throw l}}}}catch(s){t=!0,e=s}finally{try{!o&&i.return&&i.return()}finally{if(t)throw e}}})),it("fetches `null` for unknown encoding names",(function(){expect((0,_encodings.getEncoding)("FooBarEncoding")).toEqual(null)}))}))}));