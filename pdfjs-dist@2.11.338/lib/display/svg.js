"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.SVGGraphics=void 0;var _util=require("../shared/util.js"),_display_utils=require("./display_utils.js"),_is_node=require("../shared/is_node.js");let SVGGraphics=class{constructor(){(0,_util.unreachable)("Not implemented: SVGGraphics")}};exports.SVGGraphics=SVGGraphics;{const t={fontStyle:"normal",fontWeight:"normal",fillColor:"#000000"},e="http://www.w3.org/XML/1998/namespace",i="http://www.w3.org/1999/xlink",s=["butt","round","square"],r=["miter","round","bevel"],n=function(){const t=new Uint8Array([137,80,78,71,13,10,26,10]),e=12,i=new Int32Array(256);for(let h=0;h<256;h++){let t=h;for(let e=0;e<8;e++)t=1&t?3988292384^t>>1&2147483647:t>>1&2147483647;i[h]=t}function s(t,e,s){let r=-1;for(let n=e;n<s;n++){const e=255&(r^t[n]),s=i[e];r=r>>>8^s}return-1^r}function r(t,e,i,r){let n=r;const l=e.length;i[n]=l>>24&255,i[n+1]=l>>16&255,i[n+2]=l>>8&255,i[n+3]=255&l,n+=4,i[n]=255&t.charCodeAt(0),i[n+1]=255&t.charCodeAt(1),i[n+2]=255&t.charCodeAt(2),i[n+3]=255&t.charCodeAt(3),n+=4,i.set(e,n),n+=e.length;const a=s(i,r+4,n);i[n]=a>>24&255,i[n+1]=a>>16&255,i[n+2]=a>>8&255,i[n+3]=255&a}function n(t,e,i){let s=1,r=0;for(let n=e;n<i;++n)s=(s+(255&t[n]))%65521,r=(r+s)%65521;return r<<16|s}function l(t){if(!_is_node.isNodeJS)return a(t);try{let e;e=parseInt(process.versions.node)>=8?t:Buffer.from(t);const i=require("zlib").deflateSync(e,{level:9});return i instanceof Uint8Array?i:new Uint8Array(i)}catch(e){(0,_util.warn)("Not compressing PNG because zlib.deflateSync is unavailable: "+e)}return a(t)}function a(t){let e=t.length;const i=65535,s=Math.ceil(e/i),r=new Uint8Array(2+e+5*s+4);let l=0;r[l++]=120,r[l++]=156;let a=0;while(e>i)r[l++]=0,r[l++]=255,r[l++]=255,r[l++]=0,r[l++]=0,r.set(t.subarray(a,a+i),l),l+=i,a+=i,e-=i;r[l++]=1,r[l++]=255&e,r[l++]=e>>8&255,r[l++]=255&~e,r[l++]=(65535&~e)>>8&255,r.set(t.subarray(a),l),l+=t.length-a;const o=n(t,0,t.length);return r[l++]=o>>24&255,r[l++]=o>>16&255,r[l++]=o>>8&255,r[l++]=255&o,r}function o(i,s,n,a){const o=i.width,h=i.height;let u,c,p;const d=i.data;switch(s){case _util.ImageKind.GRAYSCALE_1BPP:c=0,u=1,p=o+7>>3;break;case _util.ImageKind.RGB_24BPP:c=2,u=8,p=3*o;break;case _util.ImageKind.RGBA_32BPP:c=6,u=8,p=4*o;break;default:throw new Error("invalid format")}const f=new Uint8Array((1+p)*h);let S=0,g=0;for(let t=0;t<h;++t)f[S++]=0,f.set(d.subarray(g,g+p),S),g+=p,S+=p;if(s===_util.ImageKind.GRAYSCALE_1BPP&&a){S=0;for(let t=0;t<h;t++){S++;for(let t=0;t<p;t++)f[S++]^=255}}const m=new Uint8Array([o>>24&255,o>>16&255,o>>8&255,255&o,h>>24&255,h>>16&255,h>>8&255,255&h,u,c,0,0,0]),b=l(f),_=t.length+3*e+m.length+b.length,x=new Uint8Array(_);let A=0;return x.set(t,A),A+=t.length,r("IHDR",m,x,A),A+=e+m.length,r("IDATA",b,x,A),A+=e+b.length,r("IEND",new Uint8Array(0),x,A),(0,_util.createObjectURL)(x,"image/png",n)}return function(t,e,i){const s=void 0===t.kind?_util.ImageKind.GRAYSCALE_1BPP:t.kind;return o(t,s,e,i)}}();class l{constructor(){this.fontSizeScale=1,this.fontWeight=t.fontWeight,this.fontSize=0,this.textMatrix=_util.IDENTITY_MATRIX,this.fontMatrix=_util.FONT_IDENTITY_MATRIX,this.leading=0,this.textRenderingMode=_util.TextRenderingMode.FILL,this.textMatrixScale=1,this.x=0,this.y=0,this.lineX=0,this.lineY=0,this.charSpacing=0,this.wordSpacing=0,this.textHScale=1,this.textRise=0,this.fillColor=t.fillColor,this.strokeColor="#000000",this.fillAlpha=1,this.strokeAlpha=1,this.lineWidth=1,this.lineJoin="",this.lineCap="",this.miterLimit=0,this.dashArray=[],this.dashPhase=0,this.dependencies=[],this.activeClipUrl=null,this.clipGroup=null,this.maskId=""}clone(){return Object.create(this)}setCurrentPoint(t,e){this.x=t,this.y=e}}function opListToTree(t){let e=[];const i=[];for(const s of t)"save"!==s.fn?"restore"===s.fn?e=i.pop():e.push(s):(e.push({fnId:92,fn:"group",items:[]}),i.push(e),e=e[e.length-1].items);return e}function pf(t){if(Number.isInteger(t))return t.toString();const e=t.toFixed(10);let i=e.length-1;if("0"!==e[i])return e;do{i--}while("0"===e[i]);return e.substring(0,"."===e[i]?i:i+1)}function pm(t){if(0===t[4]&&0===t[5]){if(0===t[1]&&0===t[2])return 1===t[0]&&1===t[3]?"":`scale(${pf(t[0])} ${pf(t[3])})`;if(t[0]===t[3]&&t[1]===-t[2]){const e=180*Math.acos(t[0])/Math.PI;return`rotate(${pf(e)})`}}else if(1===t[0]&&0===t[1]&&0===t[2]&&1===t[3])return`translate(${pf(t[4])} ${pf(t[5])})`;return`matrix(${pf(t[0])} ${pf(t[1])} ${pf(t[2])} ${pf(t[3])} ${pf(t[4])} ${pf(t[5])})`}let a=0,o=0,h=0;exports.SVGGraphics=SVGGraphics=class{constructor(t,e,i=!1){this.svgFactory=new _display_utils.DOMSVGFactory,this.current=new l,this.transformMatrix=_util.IDENTITY_MATRIX,this.transformStack=[],this.extraStack=[],this.commonObjs=t,this.objs=e,this.pendingClip=null,this.pendingEOFill=!1,this.embedFonts=!1,this.embeddedFonts=Object.create(null),this.cssStyle=null,this.forceDataSchema=!!i,this._operatorIdMapping=[];for(const s in _util.OPS)this._operatorIdMapping[_util.OPS[s]]=s}save(){this.transformStack.push(this.transformMatrix);const t=this.current;this.extraStack.push(t),this.current=t.clone()}restore(){this.transformMatrix=this.transformStack.pop(),this.current=this.extraStack.pop(),this.pendingClip=null,this.tgrp=null}group(t){this.save(),this.executeOpTree(t),this.restore()}loadDependencies(t){const e=t.fnArray,i=t.argsArray;for(let s=0,r=e.length;s<r;s++)if(e[s]===_util.OPS.dependency)for(const t of i[s]){const e=t.startsWith("g_")?this.commonObjs:this.objs,i=new Promise((i=>{e.get(t,i)}));this.current.dependencies.push(i)}return Promise.all(this.current.dependencies)}transform(t,e,i,s,r,n){const l=[t,e,i,s,r,n];this.transformMatrix=_util.Util.transform(this.transformMatrix,l),this.tgrp=null}getSVG(t,e){this.viewport=e;const i=this._initialize(e);return this.loadDependencies(t).then((()=>(this.transformMatrix=_util.IDENTITY_MATRIX,this.executeOpTree(this.convertOpList(t)),i)))}convertOpList(t){const e=this._operatorIdMapping,i=t.argsArray,s=t.fnArray,r=[];for(let n=0,l=s.length;n<l;n++){const t=s[n];r.push({fnId:t,fn:e[t],args:i[n]})}return opListToTree(r)}executeOpTree(t){for(const e of t){const t=e.fn,i=e.fnId,s=e.args;switch(0|i){case _util.OPS.beginText:this.beginText();break;case _util.OPS.dependency:break;case _util.OPS.setLeading:this.setLeading(s);break;case _util.OPS.setLeadingMoveText:this.setLeadingMoveText(s[0],s[1]);break;case _util.OPS.setFont:this.setFont(s);break;case _util.OPS.showText:this.showText(s[0]);break;case _util.OPS.showSpacedText:this.showText(s[0]);break;case _util.OPS.endText:this.endText();break;case _util.OPS.moveText:this.moveText(s[0],s[1]);break;case _util.OPS.setCharSpacing:this.setCharSpacing(s[0]);break;case _util.OPS.setWordSpacing:this.setWordSpacing(s[0]);break;case _util.OPS.setHScale:this.setHScale(s[0]);break;case _util.OPS.setTextMatrix:this.setTextMatrix(s[0],s[1],s[2],s[3],s[4],s[5]);break;case _util.OPS.setTextRise:this.setTextRise(s[0]);break;case _util.OPS.setTextRenderingMode:this.setTextRenderingMode(s[0]);break;case _util.OPS.setLineWidth:this.setLineWidth(s[0]);break;case _util.OPS.setLineJoin:this.setLineJoin(s[0]);break;case _util.OPS.setLineCap:this.setLineCap(s[0]);break;case _util.OPS.setMiterLimit:this.setMiterLimit(s[0]);break;case _util.OPS.setFillRGBColor:this.setFillRGBColor(s[0],s[1],s[2]);break;case _util.OPS.setStrokeRGBColor:this.setStrokeRGBColor(s[0],s[1],s[2]);break;case _util.OPS.setStrokeColorN:this.setStrokeColorN(s);break;case _util.OPS.setFillColorN:this.setFillColorN(s);break;case _util.OPS.shadingFill:this.shadingFill(s[0]);break;case _util.OPS.setDash:this.setDash(s[0],s[1]);break;case _util.OPS.setRenderingIntent:this.setRenderingIntent(s[0]);break;case _util.OPS.setFlatness:this.setFlatness(s[0]);break;case _util.OPS.setGState:this.setGState(s[0]);break;case _util.OPS.fill:this.fill();break;case _util.OPS.eoFill:this.eoFill();break;case _util.OPS.stroke:this.stroke();break;case _util.OPS.fillStroke:this.fillStroke();break;case _util.OPS.eoFillStroke:this.eoFillStroke();break;case _util.OPS.clip:this.clip("nonzero");break;case _util.OPS.eoClip:this.clip("evenodd");break;case _util.OPS.paintSolidColorImageMask:this.paintSolidColorImageMask();break;case _util.OPS.paintImageXObject:this.paintImageXObject(s[0]);break;case _util.OPS.paintInlineImageXObject:this.paintInlineImageXObject(s[0]);break;case _util.OPS.paintImageMaskXObject:this.paintImageMaskXObject(s[0]);break;case _util.OPS.paintFormXObjectBegin:this.paintFormXObjectBegin(s[0],s[1]);break;case _util.OPS.paintFormXObjectEnd:this.paintFormXObjectEnd();break;case _util.OPS.closePath:this.closePath();break;case _util.OPS.closeStroke:this.closeStroke();break;case _util.OPS.closeFillStroke:this.closeFillStroke();break;case _util.OPS.closeEOFillStroke:this.closeEOFillStroke();break;case _util.OPS.nextLine:this.nextLine();break;case _util.OPS.transform:this.transform(s[0],s[1],s[2],s[3],s[4],s[5]);break;case _util.OPS.constructPath:this.constructPath(s[0],s[1]);break;case _util.OPS.endPath:this.endPath();break;case 92:this.group(e.items);break;default:(0,_util.warn)(`Unimplemented operator ${t}`);break}}}setWordSpacing(t){this.current.wordSpacing=t}setCharSpacing(t){this.current.charSpacing=t}nextLine(){this.moveText(0,this.current.leading)}setTextMatrix(t,e,i,s,r,n){const l=this.current;l.textMatrix=l.lineMatrix=[t,e,i,s,r,n],l.textMatrixScale=Math.hypot(t,e),l.x=l.lineX=0,l.y=l.lineY=0,l.xcoords=[],l.ycoords=[],l.tspan=this.svgFactory.createElement("svg:tspan"),l.tspan.setAttributeNS(null,"font-family",l.fontFamily),l.tspan.setAttributeNS(null,"font-size",`${pf(l.fontSize)}px`),l.tspan.setAttributeNS(null,"y",pf(-l.y)),l.txtElement=this.svgFactory.createElement("svg:text"),l.txtElement.appendChild(l.tspan)}beginText(){const t=this.current;t.x=t.lineX=0,t.y=t.lineY=0,t.textMatrix=_util.IDENTITY_MATRIX,t.lineMatrix=_util.IDENTITY_MATRIX,t.textMatrixScale=1,t.tspan=this.svgFactory.createElement("svg:tspan"),t.txtElement=this.svgFactory.createElement("svg:text"),t.txtgrp=this.svgFactory.createElement("svg:g"),t.xcoords=[],t.ycoords=[]}moveText(t,e){const i=this.current;i.x=i.lineX+=t,i.y=i.lineY+=e,i.xcoords=[],i.ycoords=[],i.tspan=this.svgFactory.createElement("svg:tspan"),i.tspan.setAttributeNS(null,"font-family",i.fontFamily),i.tspan.setAttributeNS(null,"font-size",`${pf(i.fontSize)}px`),i.tspan.setAttributeNS(null,"y",pf(-i.y))}showText(i){const s=this.current,r=s.font,n=s.fontSize;if(0===n)return;const l=s.fontSizeScale,a=s.charSpacing,o=s.wordSpacing,h=s.fontDirection,u=s.textHScale*h,c=r.vertical,p=c?1:-1,d=r.defaultVMetrics,f=n*s.fontMatrix[0];let S=0;for(const t of i){if(null===t){S+=h*o;continue}if((0,_util.isNum)(t)){S+=p*t*n/1e3;continue}const e=(t.isSpace?o:0)+a,i=t.fontChar;let u,g,m,b=t.width;if(c){let e;const i=t.vmetric||d;e=t.vmetric?i[1]:.5*b,e=-e*f;const s=i[2]*f;b=i?-i[0]:b,u=e/l,g=(S+s)/l}else u=S/l,g=0;(t.isInFont||r.missingFile)&&(s.xcoords.push(s.x+u),c&&s.ycoords.push(-s.y+g),s.tspan.textContent+=i),m=c?b*f-e*h:b*f+e*h,S+=m}s.tspan.setAttributeNS(null,"x",s.xcoords.map(pf).join(" ")),c?s.tspan.setAttributeNS(null,"y",s.ycoords.map(pf).join(" ")):s.tspan.setAttributeNS(null,"y",pf(-s.y)),c?s.y-=S:s.x+=S*u,s.tspan.setAttributeNS(null,"font-family",s.fontFamily),s.tspan.setAttributeNS(null,"font-size",`${pf(s.fontSize)}px`),s.fontStyle!==t.fontStyle&&s.tspan.setAttributeNS(null,"font-style",s.fontStyle),s.fontWeight!==t.fontWeight&&s.tspan.setAttributeNS(null,"font-weight",s.fontWeight);const g=s.textRenderingMode&_util.TextRenderingMode.FILL_STROKE_MASK;if(g===_util.TextRenderingMode.FILL||g===_util.TextRenderingMode.FILL_STROKE?(s.fillColor!==t.fillColor&&s.tspan.setAttributeNS(null,"fill",s.fillColor),s.fillAlpha<1&&s.tspan.setAttributeNS(null,"fill-opacity",s.fillAlpha)):s.textRenderingMode===_util.TextRenderingMode.ADD_TO_PATH?s.tspan.setAttributeNS(null,"fill","transparent"):s.tspan.setAttributeNS(null,"fill","none"),g===_util.TextRenderingMode.STROKE||g===_util.TextRenderingMode.FILL_STROKE){const t=1/(s.textMatrixScale||1);this._setStrokeAttributes(s.tspan,t)}let m=s.textMatrix;0!==s.textRise&&(m=m.slice(),m[5]+=s.textRise),s.txtElement.setAttributeNS(null,"transform",`${pm(m)} scale(${pf(u)}, -1)`),s.txtElement.setAttributeNS(e,"xml:space","preserve"),s.txtElement.appendChild(s.tspan),s.txtgrp.appendChild(s.txtElement),this._ensureTransformGroup().appendChild(s.txtElement)}setLeadingMoveText(t,e){this.setLeading(-e),this.moveText(t,e)}addFontStyle(t){if(!t.data)throw new Error('addFontStyle: No font data available, ensure that the "fontExtraProperties" API parameter is set.');this.cssStyle||(this.cssStyle=this.svgFactory.createElement("svg:style"),this.cssStyle.setAttributeNS(null,"type","text/css"),this.defs.appendChild(this.cssStyle));const e=(0,_util.createObjectURL)(t.data,t.mimetype,this.forceDataSchema);this.cssStyle.textContent+=`@font-face { font-family: "${t.loadedName}"; src: url(${e}); }\n`}setFont(t){const e=this.current,i=this.commonObjs.get(t[0]);let s=t[1];e.font=i,!this.embedFonts||i.missingFile||this.embeddedFonts[i.loadedName]||(this.addFontStyle(i),this.embeddedFonts[i.loadedName]=i),e.fontMatrix=i.fontMatrix||_util.FONT_IDENTITY_MATRIX;let r="normal";i.black?r="900":i.bold&&(r="bold");const n=i.italic?"italic":"normal";s<0?(s=-s,e.fontDirection=-1):e.fontDirection=1,e.fontSize=s,e.fontFamily=i.loadedName,e.fontWeight=r,e.fontStyle=n,e.tspan=this.svgFactory.createElement("svg:tspan"),e.tspan.setAttributeNS(null,"y",pf(-e.y)),e.xcoords=[],e.ycoords=[]}endText(){const t=this.current;t.textRenderingMode&_util.TextRenderingMode.ADD_TO_PATH_FLAG&&t.txtElement?.hasChildNodes()&&(t.element=t.txtElement,this.clip("nonzero"),this.endPath())}setLineWidth(t){t>0&&(this.current.lineWidth=t)}setLineCap(t){this.current.lineCap=s[t]}setLineJoin(t){this.current.lineJoin=r[t]}setMiterLimit(t){this.current.miterLimit=t}setStrokeAlpha(t){this.current.strokeAlpha=t}setStrokeRGBColor(t,e,i){this.current.strokeColor=_util.Util.makeHexColor(t,e,i)}setFillAlpha(t){this.current.fillAlpha=t}setFillRGBColor(t,e,i){this.current.fillColor=_util.Util.makeHexColor(t,e,i),this.current.tspan=this.svgFactory.createElement("svg:tspan"),this.current.xcoords=[],this.current.ycoords=[]}setStrokeColorN(t){this.current.strokeColor=this._makeColorN_Pattern(t)}setFillColorN(t){this.current.fillColor=this._makeColorN_Pattern(t)}shadingFill(t){const e=this.viewport.width,i=this.viewport.height,s=_util.Util.inverseTransform(this.transformMatrix),r=_util.Util.applyTransform([0,0],s),n=_util.Util.applyTransform([0,i],s),l=_util.Util.applyTransform([e,0],s),a=_util.Util.applyTransform([e,i],s),o=Math.min(r[0],n[0],l[0],a[0]),h=Math.min(r[1],n[1],l[1],a[1]),u=Math.max(r[0],n[0],l[0],a[0]),c=Math.max(r[1],n[1],l[1],a[1]),p=this.svgFactory.createElement("svg:rect");p.setAttributeNS(null,"x",o),p.setAttributeNS(null,"y",h),p.setAttributeNS(null,"width",u-o),p.setAttributeNS(null,"height",c-h),p.setAttributeNS(null,"fill",this._makeShadingPattern(t)),this.current.fillAlpha<1&&p.setAttributeNS(null,"fill-opacity",this.current.fillAlpha),this._ensureTransformGroup().appendChild(p)}_makeColorN_Pattern(t){return"TilingPattern"===t[0]?this._makeTilingPattern(t):this._makeShadingPattern(t)}_makeTilingPattern(t){const e=t[1],i=t[2],s=t[3]||_util.IDENTITY_MATRIX,[r,n,l,a]=t[4],o=t[5],u=t[6],c=t[7],p="shading"+h++,[d,f,S,g]=_util.Util.normalizeRect([..._util.Util.applyTransform([r,n],s),..._util.Util.applyTransform([l,a],s)]),[m,b]=_util.Util.singularValueDecompose2dScale(s),_=o*m,x=u*b,A=this.svgFactory.createElement("svg:pattern");A.setAttributeNS(null,"id",p),A.setAttributeNS(null,"patternUnits","userSpaceOnUse"),A.setAttributeNS(null,"width",_),A.setAttributeNS(null,"height",x),A.setAttributeNS(null,"x",`${d}`),A.setAttributeNS(null,"y",`${f}`);const k=this.svg,y=this.transformMatrix,N=this.current.fillColor,P=this.current.strokeColor,v=this.svgFactory.create(S-d,g-f);if(this.svg=v,this.transformMatrix=s,2===c){const t=_util.Util.makeHexColor(...e);this.current.fillColor=t,this.current.strokeColor=t}return this.executeOpTree(this.convertOpList(i)),this.svg=k,this.transformMatrix=y,this.current.fillColor=N,this.current.strokeColor=P,A.appendChild(v.childNodes[0]),this.defs.appendChild(A),`url(#${p})`}_makeShadingPattern(t){switch(t[0]){case"RadialAxial":const e="shading"+h++,i=t[3];let s;switch(t[1]){case"axial":const i=t[4],r=t[5];s=this.svgFactory.createElement("svg:linearGradient"),s.setAttributeNS(null,"id",e),s.setAttributeNS(null,"gradientUnits","userSpaceOnUse"),s.setAttributeNS(null,"x1",i[0]),s.setAttributeNS(null,"y1",i[1]),s.setAttributeNS(null,"x2",r[0]),s.setAttributeNS(null,"y2",r[1]);break;case"radial":const n=t[4],l=t[5],a=t[6],o=t[7];s=this.svgFactory.createElement("svg:radialGradient"),s.setAttributeNS(null,"id",e),s.setAttributeNS(null,"gradientUnits","userSpaceOnUse"),s.setAttributeNS(null,"cx",l[0]),s.setAttributeNS(null,"cy",l[1]),s.setAttributeNS(null,"r",o),s.setAttributeNS(null,"fx",n[0]),s.setAttributeNS(null,"fy",n[1]),s.setAttributeNS(null,"fr",a);break;default:throw new Error(`Unknown RadialAxial type: ${t[1]}`)}for(const t of i){const e=this.svgFactory.createElement("svg:stop");e.setAttributeNS(null,"offset",t[0]),e.setAttributeNS(null,"stop-color",t[1]),s.appendChild(e)}return this.defs.appendChild(s),`url(#${e})`;case"Mesh":return(0,_util.warn)("Unimplemented pattern Mesh"),null;case"Dummy":return"hotpink";default:throw new Error(`Unknown IR type: ${t[0]}`)}}setDash(t,e){this.current.dashArray=t,this.current.dashPhase=e}constructPath(t,e){const i=this.current;let s=i.x,r=i.y,n=[],l=0;for(const a of t)switch(0|a){case _util.OPS.rectangle:s=e[l++],r=e[l++];const t=e[l++],i=e[l++],a=s+t,o=r+i;n.push("M",pf(s),pf(r),"L",pf(a),pf(r),"L",pf(a),pf(o),"L",pf(s),pf(o),"Z");break;case _util.OPS.moveTo:s=e[l++],r=e[l++],n.push("M",pf(s),pf(r));break;case _util.OPS.lineTo:s=e[l++],r=e[l++],n.push("L",pf(s),pf(r));break;case _util.OPS.curveTo:s=e[l+4],r=e[l+5],n.push("C",pf(e[l]),pf(e[l+1]),pf(e[l+2]),pf(e[l+3]),pf(s),pf(r)),l+=6;break;case _util.OPS.curveTo2:n.push("C",pf(s),pf(r),pf(e[l]),pf(e[l+1]),pf(e[l+2]),pf(e[l+3])),s=e[l+2],r=e[l+3],l+=4;break;case _util.OPS.curveTo3:s=e[l+2],r=e[l+3],n.push("C",pf(e[l]),pf(e[l+1]),pf(s),pf(r),pf(s),pf(r)),l+=4;break;case _util.OPS.closePath:n.push("Z");break}n=n.join(" "),i.path&&t.length>0&&t[0]!==_util.OPS.rectangle&&t[0]!==_util.OPS.moveTo?n=i.path.getAttributeNS(null,"d")+n:(i.path=this.svgFactory.createElement("svg:path"),this._ensureTransformGroup().appendChild(i.path)),i.path.setAttributeNS(null,"d",n),i.path.setAttributeNS(null,"fill","none"),i.element=i.path,i.setCurrentPoint(s,r)}endPath(){const t=this.current;if(t.path=null,!this.pendingClip)return;if(!t.element)return void(this.pendingClip=null);const e="clippath"+a++,i=this.svgFactory.createElement("svg:clipPath");i.setAttributeNS(null,"id",e),i.setAttributeNS(null,"transform",pm(this.transformMatrix));const s=t.element.cloneNode(!0);if("evenodd"===this.pendingClip?s.setAttributeNS(null,"clip-rule","evenodd"):s.setAttributeNS(null,"clip-rule","nonzero"),this.pendingClip=null,i.appendChild(s),this.defs.appendChild(i),t.activeClipUrl){t.clipGroup=null;for(const t of this.extraStack)t.clipGroup=null;i.setAttributeNS(null,"clip-path",t.activeClipUrl)}t.activeClipUrl=`url(#${e})`,this.tgrp=null}clip(t){this.pendingClip=t}closePath(){const t=this.current;if(t.path){const e=`${t.path.getAttributeNS(null,"d")}Z`;t.path.setAttributeNS(null,"d",e)}}setLeading(t){this.current.leading=-t}setTextRise(t){this.current.textRise=t}setTextRenderingMode(t){this.current.textRenderingMode=t}setHScale(t){this.current.textHScale=t/100}setRenderingIntent(t){}setFlatness(t){}setGState(t){for(const[e,i]of t)switch(e){case"LW":this.setLineWidth(i);break;case"LC":this.setLineCap(i);break;case"LJ":this.setLineJoin(i);break;case"ML":this.setMiterLimit(i);break;case"D":this.setDash(i[0],i[1]);break;case"RI":this.setRenderingIntent(i);break;case"FL":this.setFlatness(i);break;case"Font":this.setFont(i);break;case"CA":this.setStrokeAlpha(i);break;case"ca":this.setFillAlpha(i);break;default:(0,_util.warn)(`Unimplemented graphic state operator ${e}`);break}}fill(){const t=this.current;t.element&&(t.element.setAttributeNS(null,"fill",t.fillColor),t.element.setAttributeNS(null,"fill-opacity",t.fillAlpha),this.endPath())}stroke(){const t=this.current;t.element&&(this._setStrokeAttributes(t.element),t.element.setAttributeNS(null,"fill","none"),this.endPath())}_setStrokeAttributes(t,e=1){const i=this.current;let s=i.dashArray;1!==e&&s.length>0&&(s=s.map((function(t){return e*t}))),t.setAttributeNS(null,"stroke",i.strokeColor),t.setAttributeNS(null,"stroke-opacity",i.strokeAlpha),t.setAttributeNS(null,"stroke-miterlimit",pf(i.miterLimit)),t.setAttributeNS(null,"stroke-linecap",i.lineCap),t.setAttributeNS(null,"stroke-linejoin",i.lineJoin),t.setAttributeNS(null,"stroke-width",pf(e*i.lineWidth)+"px"),t.setAttributeNS(null,"stroke-dasharray",s.map(pf).join(" ")),t.setAttributeNS(null,"stroke-dashoffset",pf(e*i.dashPhase)+"px")}eoFill(){this.current.element&&this.current.element.setAttributeNS(null,"fill-rule","evenodd"),this.fill()}fillStroke(){this.stroke(),this.fill()}eoFillStroke(){this.current.element&&this.current.element.setAttributeNS(null,"fill-rule","evenodd"),this.fillStroke()}closeStroke(){this.closePath(),this.stroke()}closeFillStroke(){this.closePath(),this.fillStroke()}closeEOFillStroke(){this.closePath(),this.eoFillStroke()}paintSolidColorImageMask(){const t=this.svgFactory.createElement("svg:rect");t.setAttributeNS(null,"x","0"),t.setAttributeNS(null,"y","0"),t.setAttributeNS(null,"width","1px"),t.setAttributeNS(null,"height","1px"),t.setAttributeNS(null,"fill",this.current.fillColor),this._ensureTransformGroup().appendChild(t)}paintImageXObject(t){const e=t.startsWith("g_")?this.commonObjs.get(t):this.objs.get(t);e?this.paintInlineImageXObject(e):(0,_util.warn)(`Dependent image with object ID ${t} is not ready yet`)}paintInlineImageXObject(t,e){const s=t.width,r=t.height,l=n(t,this.forceDataSchema,!!e),a=this.svgFactory.createElement("svg:rect");a.setAttributeNS(null,"x","0"),a.setAttributeNS(null,"y","0"),a.setAttributeNS(null,"width",pf(s)),a.setAttributeNS(null,"height",pf(r)),this.current.element=a,this.clip("nonzero");const o=this.svgFactory.createElement("svg:image");o.setAttributeNS(i,"xlink:href",l),o.setAttributeNS(null,"x","0"),o.setAttributeNS(null,"y",pf(-r)),o.setAttributeNS(null,"width",pf(s)+"px"),o.setAttributeNS(null,"height",pf(r)+"px"),o.setAttributeNS(null,"transform",`scale(${pf(1/s)} ${pf(-1/r)})`),e?e.appendChild(o):this._ensureTransformGroup().appendChild(o)}paintImageMaskXObject(t){const e=this.current,i=t.width,s=t.height,r=e.fillColor;e.maskId="mask"+o++;const n=this.svgFactory.createElement("svg:mask");n.setAttributeNS(null,"id",e.maskId);const l=this.svgFactory.createElement("svg:rect");l.setAttributeNS(null,"x","0"),l.setAttributeNS(null,"y","0"),l.setAttributeNS(null,"width",pf(i)),l.setAttributeNS(null,"height",pf(s)),l.setAttributeNS(null,"fill",r),l.setAttributeNS(null,"mask",`url(#${e.maskId})`),this.defs.appendChild(n),this._ensureTransformGroup().appendChild(l),this.paintInlineImageXObject(t,n)}paintFormXObjectBegin(t,e){if(Array.isArray(t)&&6===t.length&&this.transform(t[0],t[1],t[2],t[3],t[4],t[5]),e){const t=e[2]-e[0],i=e[3]-e[1],s=this.svgFactory.createElement("svg:rect");s.setAttributeNS(null,"x",e[0]),s.setAttributeNS(null,"y",e[1]),s.setAttributeNS(null,"width",pf(t)),s.setAttributeNS(null,"height",pf(i)),this.current.element=s,this.clip("nonzero"),this.endPath()}}paintFormXObjectEnd(){}_initialize(t){const e=this.svgFactory.create(t.width,t.height),i=this.svgFactory.createElement("svg:defs");e.appendChild(i),this.defs=i;const s=this.svgFactory.createElement("svg:g");return s.setAttributeNS(null,"transform",pm(t.transform)),e.appendChild(s),this.svg=s,e}_ensureClipGroup(){if(!this.current.clipGroup){const t=this.svgFactory.createElement("svg:g");t.setAttributeNS(null,"clip-path",this.current.activeClipUrl),this.svg.appendChild(t),this.current.clipGroup=t}return this.current.clipGroup}_ensureTransformGroup(){return this.tgrp||(this.tgrp=this.svgFactory.createElement("svg:g"),this.tgrp.setAttributeNS(null,"transform",pm(this.transformMatrix)),this.current.activeClipUrl?this._ensureClipGroup().appendChild(this.tgrp):this.svg.appendChild(this.tgrp)),this.tgrp}}}