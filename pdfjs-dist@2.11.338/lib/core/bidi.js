"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.bidi=bidi;var _util=require("../shared/util.js");const baseTypes=["BN","BN","BN","BN","BN","BN","BN","BN","BN","S","B","S","WS","B","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","B","B","B","S","WS","ON","ON","ET","ET","ET","ON","ON","ON","ON","ON","ES","CS","ES","CS","CS","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","CS","ON","ON","ON","ON","ON","ON","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","ON","ON","ON","ON","ON","ON","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","ON","ON","ON","ON","BN","BN","BN","BN","BN","BN","B","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","CS","ON","ET","ET","ET","ET","ON","ON","ON","ON","L","ON","ON","BN","ON","ON","ET","ET","EN","EN","ON","L","ON","ON","ON","EN","L","ON","ON","ON","ON","ON","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","ON","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","ON","L","L","L","L","L","L","L","L"],arabicTypes=["AN","AN","AN","AN","AN","AN","ON","ON","AL","ET","ET","AL","CS","AL","ON","ON","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AL","AL","","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AN","AN","AN","AN","AN","AN","AN","AN","AN","AN","ET","AN","AN","AL","AL","AL","NSM","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AN","ON","NSM","NSM","NSM","NSM","NSM","NSM","AL","AL","NSM","NSM","ON","NSM","NSM","NSM","NSM","AL","AL","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","AL","AL","AL","AL","AL","AL"];function isOdd(L){return 0!==(1&L)}function isEven(L){return 0===(1&L)}function findUnequal(L,N,A){let e,t;for(e=N,t=L.length;e<t;++e)if(L[e]!==A)return e;return e}function setValues(L,N,A,e){for(let t=N;t<A;++t)L[t]=e}function reverseValues(L,N,A){for(let e=N,t=A-1;e<t;++e,--t){const N=L[e];L[e]=L[t],L[t]=N}}function createBidiText(L,N,A=!1){let e="ltr";return A?e="ttb":N||(e="rtl"),{str:L,dir:e}}const chars=[],types=[];function bidi(L,N=-1,A=!1){let e=!0;const t=L.length;if(0===t||A)return createBidiText(L,e,A);chars.length=t,types.length=t;let s,r,S=0;for(s=0;s<t;++s){chars[s]=L.charAt(s);const N=L.charCodeAt(s);let A="L";N<=255?A=baseTypes[N]:1424<=N&&N<=1524?A="R":1536<=N&&N<=1791?(A=arabicTypes[255&N],A||(0,_util.warn)("Bidi: invalid Unicode character "+N.toString(16))):1792<=N&&N<=2220&&(A="AL"),"R"!==A&&"AL"!==A&&"AN"!==A||S++,types[s]=A}if(0===S)return e=!0,createBidiText(L,e);-1===N&&(S/t<.3?(e=!0,N=0):(e=!1,N=1));const B=[];for(s=0;s<t;++s)B[s]=N;const E=isOdd(N)?"R":"L",O=E,M=O;let i,n=O;for(s=0;s<t;++s)"NSM"===types[s]?types[s]=n:n=types[s];for(n=O,s=0;s<t;++s)i=types[s],"EN"===i?types[s]="AL"===n?"AN":"EN":"R"!==i&&"L"!==i&&"AL"!==i||(n=i);for(s=0;s<t;++s)i=types[s],"AL"===i&&(types[s]="R");for(s=1;s<t-1;++s)"ES"===types[s]&&"EN"===types[s-1]&&"EN"===types[s+1]&&(types[s]="EN"),"CS"!==types[s]||"EN"!==types[s-1]&&"AN"!==types[s-1]||types[s+1]!==types[s-1]||(types[s]=types[s-1]);for(s=0;s<t;++s)if("EN"===types[s]){for(let L=s-1;L>=0;--L){if("ET"!==types[L])break;types[L]="EN"}for(let L=s+1;L<t;++L){if("ET"!==types[L])break;types[L]="EN"}}for(s=0;s<t;++s)i=types[s],"WS"!==i&&"ES"!==i&&"ET"!==i&&"CS"!==i||(types[s]="ON");for(n=O,s=0;s<t;++s)i=types[s],"EN"===i?types[s]="L"===n?"L":"EN":"R"!==i&&"L"!==i||(n=i);for(s=0;s<t;++s)if("ON"===types[s]){const L=findUnequal(types,s+1,"ON");let N=O;s>0&&(N=types[s-1]);let A=M;L+1<t&&(A=types[L+1]),"L"!==N&&(N="R"),"L"!==A&&(A="R"),N===A&&setValues(types,s,L,N),s=L-1}for(s=0;s<t;++s)"ON"===types[s]&&(types[s]=E);for(s=0;s<t;++s)i=types[s],isEven(B[s])?"R"===i?B[s]+=1:"AN"!==i&&"EN"!==i||(B[s]+=2):"L"!==i&&"AN"!==i&&"EN"!==i||(B[s]+=1);let o,p=-1,y=99;for(s=0,r=B.length;s<r;++s)o=B[s],p<o&&(p=o),y>o&&isOdd(o)&&(y=o);for(o=p;o>=y;--o){let L=-1;for(s=0,r=B.length;s<r;++s)B[s]<o?L>=0&&(reverseValues(chars,L,s),L=-1):L<0&&(L=s);L>=0&&reverseValues(chars,L,B.length)}for(s=0,r=chars.length;s<r;++s){const L=chars[s];"<"!==L&&">"!==L||(chars[s]="")}return createBidiText(chars.join(""),e)}