"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Parser=exports.Linearization=exports.Lexer=void 0;var _util=require("../shared/util.js"),_primitives=require("./primitives.js"),_core_utils=require("./core_utils.js"),_ascii_85_stream=require("./ascii_85_stream.js"),_ascii_hex_stream=require("./ascii_hex_stream.js"),_ccitt_stream=require("./ccitt_stream.js"),_flate_stream=require("./flate_stream.js"),_jbig2_stream=require("./jbig2_stream.js"),_jpeg_stream=require("./jpeg_stream.js"),_jpx_stream=require("./jpx_stream.js"),_lzw_stream=require("./lzw_stream.js"),_stream=require("./stream.js"),_predictor_stream=require("./predictor_stream.js"),_run_length_stream=require("./run_length_stream.js");const MAX_LENGTH_TO_CACHE=1e3,MAX_ADLER32_LENGTH=5552;function computeAdler32(e){const t=e.length;let i=1,r=0;for(let s=0;s<t;++s)i+=255&e[s],r+=i;return r%65521<<16|i%65521}class Parser{constructor({lexer:e,xref:t,allowStreams:i=!1,recoveryMode:r=!1}){this.lexer=e,this.xref=t,this.allowStreams=i,this.recoveryMode=r,this.imageCache=Object.create(null),this.refill()}refill(){this.buf1=this.lexer.getObj(),this.buf2=this.lexer.getObj()}shift(){this.buf2 instanceof _primitives.Cmd&&"ID"===this.buf2.cmd?(this.buf1=this.buf2,this.buf2=null):(this.buf1=this.buf2,this.buf2=this.lexer.getObj())}tryShift(){try{return this.shift(),!0}catch(e){if(e instanceof _core_utils.MissingDataException)throw e;return!1}}getObj(e=null){const t=this.buf1;if(this.shift(),t instanceof _primitives.Cmd)switch(t.cmd){case"BI":return this.makeInlineImage(e);case"[":const i=[];while(!(0,_primitives.isCmd)(this.buf1,"]")&&this.buf1!==_primitives.EOF)i.push(this.getObj(e));if(this.buf1===_primitives.EOF){if(this.recoveryMode)return i;throw new _core_utils.ParserEOFException("End of file inside array.")}return this.shift(),i;case"<<":const r=new _primitives.Dict(this.xref);while(!(0,_primitives.isCmd)(this.buf1,">>")&&this.buf1!==_primitives.EOF){if(!(0,_primitives.isName)(this.buf1)){(0,_util.info)("Malformed dictionary: key must be a name object"),this.shift();continue}const t=this.buf1.name;if(this.shift(),this.buf1===_primitives.EOF)break;r.set(t,this.getObj(e))}if(this.buf1===_primitives.EOF){if(this.recoveryMode)return r;throw new _core_utils.ParserEOFException("End of file inside dictionary.")}return(0,_primitives.isCmd)(this.buf2,"stream")?this.allowStreams?this.makeStream(r,e):r:(this.shift(),r);default:return t}if(Number.isInteger(t)){if(Number.isInteger(this.buf1)&&(0,_primitives.isCmd)(this.buf2,"R")){const e=_primitives.Ref.get(t,this.buf1);return this.shift(),this.shift(),e}return t}return"string"===typeof t&&e?e.decryptString(t):t}findDefaultInlineStreamEnd(e){const t=69,i=73,r=32,s=10,a=13,n=0,h=this.lexer,o=e.pos,l=10;let c,m,u=0;while(-1!==(c=e.getByte()))if(0===u)u=c===t?1:0;else if(1===u)u=c===i?2:0;else if((0,_util.assert)(2===u,"findDefaultInlineStreamEnd - invalid state."),c===r||c===s||c===a){m=e.pos;const t=e.peekBytes(l);for(let e=0,i=t.length;e<i;e++)if(c=t[e],(c!==n||t[e+1]===n)&&c!==s&&c!==a&&(c<r||c>127)){u=0;break}if(2!==u)continue;if(h.knownCommands){const e=h.peekObj();e instanceof _primitives.Cmd&&!h.knownCommands[e.cmd]&&(u=0)}else(0,_util.warn)("findDefaultInlineStreamEnd - `lexer.knownCommands` is undefined.");if(2===u)break}else u=0;-1===c&&((0,_util.warn)("findDefaultInlineStreamEnd: Reached the end of the stream without finding a valid EI marker"),m&&((0,_util.warn)('... trying to recover by using the last "EI" occurrence.'),e.skip(-(e.pos-m))));let f=4;return e.skip(-f),c=e.peekByte(),e.skip(f),(0,_core_utils.isWhiteSpace)(c)||f--,e.pos-f-o}findDCTDecodeInlineStreamEnd(e){const t=e.pos;let i,r,s=!1;while(-1!==(i=e.getByte()))if(255===i){switch(e.getByte()){case 0:break;case 255:e.skip(-1);break;case 217:s=!0;break;case 192:case 193:case 194:case 195:case 197:case 198:case 199:case 201:case 202:case 203:case 205:case 206:case 207:case 196:case 204:case 218:case 219:case 220:case 221:case 222:case 223:case 224:case 225:case 226:case 227:case 228:case 229:case 230:case 231:case 232:case 233:case 234:case 235:case 236:case 237:case 238:case 239:case 254:r=e.getUint16(),r>2?e.skip(r-2):e.skip(-2);break}if(s)break}const a=e.pos-t;return-1===i?((0,_util.warn)("Inline DCTDecode image stream: EOI marker not found, searching for /EI/ instead."),e.skip(-a),this.findDefaultInlineStreamEnd(e)):(this.inlineStreamSkipEI(e),a)}findASCII85DecodeInlineStreamEnd(e){const t=126,i=62,r=e.pos;let s;while(-1!==(s=e.getByte()))if(s===t){const t=e.pos;s=e.peekByte();while((0,_core_utils.isWhiteSpace)(s))e.skip(),s=e.peekByte();if(s===i){e.skip();break}if(e.pos>t){const t=e.peekBytes(2);if(69===t[0]&&73===t[1])break}}const a=e.pos-r;return-1===s?((0,_util.warn)("Inline ASCII85Decode image stream: EOD marker not found, searching for /EI/ instead."),e.skip(-a),this.findDefaultInlineStreamEnd(e)):(this.inlineStreamSkipEI(e),a)}findASCIIHexDecodeInlineStreamEnd(e){const t=62,i=e.pos;let r;while(-1!==(r=e.getByte()))if(r===t)break;const s=e.pos-i;return-1===r?((0,_util.warn)("Inline ASCIIHexDecode image stream: EOD marker not found, searching for /EI/ instead."),e.skip(-s),this.findDefaultInlineStreamEnd(e)):(this.inlineStreamSkipEI(e),s)}inlineStreamSkipEI(e){const t=69,i=73;let r,s=0;while(-1!==(r=e.getByte()))if(0===s)s=r===t?1:0;else if(1===s)s=r===i?2:0;else if(2===s)break}makeInlineImage(e){const t=this.lexer,i=t.stream,r=new _primitives.Dict(this.xref);let s;while(!(0,_primitives.isCmd)(this.buf1,"ID")&&this.buf1!==_primitives.EOF){if(!(0,_primitives.isName)(this.buf1))throw new _util.FormatError("Dictionary key must be a name object");const t=this.buf1.name;if(this.shift(),this.buf1===_primitives.EOF)break;r.set(t,this.getObj(e))}-1!==t.beginInlineImagePos&&(s=i.pos-t.beginInlineImagePos);const a=r.get("Filter","F");let n;if((0,_primitives.isName)(a))n=a.name;else if(Array.isArray(a)){const e=this.xref.fetchIfRef(a[0]);(0,_primitives.isName)(e)&&(n=e.name)}const h=i.pos;let o;o="DCTDecode"===n||"DCT"===n?this.findDCTDecodeInlineStreamEnd(i):"ASCII85Decode"===n||"A85"===n?this.findASCII85DecodeInlineStreamEnd(i):"ASCIIHexDecode"===n||"AHx"===n?this.findASCIIHexDecodeInlineStreamEnd(i):this.findDefaultInlineStreamEnd(i);let l,c=i.makeSubStream(h,o,r);if(o<MAX_LENGTH_TO_CACHE&&s<MAX_ADLER32_LENGTH){const e=c.getBytes();c.reset();const r=i.pos;i.pos=t.beginInlineImagePos;const a=i.getBytes(s);i.pos=r,l=computeAdler32(e)+"_"+computeAdler32(a);const n=this.imageCache[l];if(void 0!==n)return this.buf2=_primitives.Cmd.get("EI"),this.shift(),n.reset(),n}return e&&(c=e.createStream(c,o)),c=this.filter(c,r,o),c.dict=r,void 0!==l&&(c.cacheKey=`inline_${o}_${l}`,this.imageCache[l]=c),this.buf2=_primitives.Cmd.get("EI"),this.shift(),c}_findStreamLength(e,t){const{stream:i}=this.lexer;i.pos=e;const r=2048,s=t.length;while(i.pos<i.end){const a=i.peekBytes(r),n=a.length-s;if(n<=0)break;let h=0;while(h<n){let r=0;while(r<s&&a[h+r]===t[r])r++;if(r>=s)return i.pos+=h,i.pos-e;h++}i.pos+=n}return-1}makeStream(e,t){const i=this.lexer;let r=i.stream;i.skipToNextLine();const s=r.pos-1;let a=e.get("Length");if(Number.isInteger(a)||((0,_util.info)(`Bad length "${a}" in stream`),a=0),r.pos=s+a,i.nextChar(),this.tryShift()&&(0,_primitives.isCmd)(this.buf2,"endstream"))this.shift();else{const e=new Uint8Array([101,110,100,115,116,114,101,97,109]);let t=this._findStreamLength(s,e);if(t<0){const i=1;for(let a=1;a<=i;a++){const i=e.length-a,n=e.slice(0,i),h=this._findStreamLength(s,n);if(h>=0){const e=r.peekBytes(i+1)[i];if(!(0,_core_utils.isWhiteSpace)(e))break;(0,_util.info)(`Found "${(0,_util.bytesToString)(n)}" when searching for endstream command.`),t=h;break}}if(t<0)throw new _util.FormatError("Missing endstream command.")}a=t,i.nextChar(),this.shift(),this.shift()}return this.shift(),r=r.makeSubStream(s,a,e),t&&(r=t.createStream(r,a)),r=this.filter(r,e,a),r.dict=e,r}filter(e,t,i){let r=t.get("Filter","F"),s=t.get("DecodeParms","DP");if((0,_primitives.isName)(r))return Array.isArray(s)&&(0,_util.warn)("/DecodeParms should not contain an Array, when /Filter contains a Name."),this.makeFilter(e,r.name,i,s);let a=i;if(Array.isArray(r)){const t=r,i=s;for(let n=0,h=t.length;n<h;++n){if(r=this.xref.fetchIfRef(t[n]),!(0,_primitives.isName)(r))throw new _util.FormatError(`Bad filter name "${r}"`);s=null,Array.isArray(i)&&n in i&&(s=this.xref.fetchIfRef(i[n])),e=this.makeFilter(e,r.name,a,s),a=null}}return e}makeFilter(e,t,i,r){if(0===i)return(0,_util.warn)(`Empty "${t}" stream.`),new _stream.NullStream;try{const s=this.xref.stats.streamTypes;if("FlateDecode"===t||"Fl"===t)return s[_util.StreamType.FLATE]=!0,r?new _predictor_stream.PredictorStream(new _flate_stream.FlateStream(e,i),i,r):new _flate_stream.FlateStream(e,i);if("LZWDecode"===t||"LZW"===t){s[_util.StreamType.LZW]=!0;let t=1;return r?(r.has("EarlyChange")&&(t=r.get("EarlyChange")),new _predictor_stream.PredictorStream(new _lzw_stream.LZWStream(e,i,t),i,r)):new _lzw_stream.LZWStream(e,i,t)}return"DCTDecode"===t||"DCT"===t?(s[_util.StreamType.DCT]=!0,new _jpeg_stream.JpegStream(e,i,r)):"JPXDecode"===t||"JPX"===t?(s[_util.StreamType.JPX]=!0,new _jpx_stream.JpxStream(e,i,r)):"ASCII85Decode"===t||"A85"===t?(s[_util.StreamType.A85]=!0,new _ascii_85_stream.Ascii85Stream(e,i)):"ASCIIHexDecode"===t||"AHx"===t?(s[_util.StreamType.AHX]=!0,new _ascii_hex_stream.AsciiHexStream(e,i)):"CCITTFaxDecode"===t||"CCF"===t?(s[_util.StreamType.CCF]=!0,new _ccitt_stream.CCITTFaxStream(e,i,r)):"RunLengthDecode"===t||"RL"===t?(s[_util.StreamType.RLX]=!0,new _run_length_stream.RunLengthStream(e,i)):"JBIG2Decode"===t?(s[_util.StreamType.JBIG]=!0,new _jbig2_stream.Jbig2Stream(e,i,r)):((0,_util.warn)(`Filter "${t}" is not supported.`),e)}catch(s){if(s instanceof _core_utils.MissingDataException)throw s;return(0,_util.warn)(`Invalid stream: "${s}"`),new _stream.NullStream}}}exports.Parser=Parser;const specialChars=[1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];function toHexDigit(e){return e>=48&&e<=57?15&e:e>=65&&e<=70||e>=97&&e<=102?9+(15&e):-1}class Lexer{constructor(e,t=null){this.stream=e,this.nextChar(),this.strBuf=[],this.knownCommands=t,this._hexStringNumWarn=0,this.beginInlineImagePos=-1}nextChar(){return this.currentChar=this.stream.getByte()}peekChar(){return this.stream.peekByte()}getNumber(){let e=this.currentChar,t=!1,i=0,r=0;if(45===e?(r=-1,e=this.nextChar(),45===e&&(e=this.nextChar())):43===e&&(r=1,e=this.nextChar()),10===e||13===e)do{e=this.nextChar()}while(10===e||13===e);if(46===e&&(i=10,e=this.nextChar()),e<48||e>57){if(10===i&&0===r&&((0,_core_utils.isWhiteSpace)(e)||-1===e))return(0,_util.warn)("Lexer.getNumber - treating a single decimal point as zero."),0;throw new _util.FormatError(`Invalid number: ${String.fromCharCode(e)} (charCode ${e})`)}r=r||1;let s=e-48,a=0,n=1;while((e=this.nextChar())>=0)if(e>=48&&e<=57){const r=e-48;t?a=10*a+r:(0!==i&&(i*=10),s=10*s+r)}else if(46===e){if(0!==i)break;i=1}else if(45===e)(0,_util.warn)("Badly formatted number: minus sign in the middle");else{if(69!==e&&101!==e)break;if(e=this.peekChar(),43===e||45===e)n=45===e?-1:1,this.nextChar();else if(e<48||e>57)break;t=!0}return 0!==i&&(s/=i),t&&(s*=10**(n*a)),r*s}getString(){let e=1,t=!1;const i=this.strBuf;i.length=0;let r=this.nextChar();while(1){let s=!1;switch(0|r){case-1:(0,_util.warn)("Unterminated string"),t=!0;break;case 40:++e,i.push("(");break;case 41:0===--e?(this.nextChar(),t=!0):i.push(")");break;case 92:switch(r=this.nextChar(),r){case-1:(0,_util.warn)("Unterminated string"),t=!0;break;case 110:i.push("\n");break;case 114:i.push("\r");break;case 116:i.push("\t");break;case 98:i.push("\b");break;case 102:i.push("\f");break;case 92:case 40:case 41:i.push(String.fromCharCode(r));break;case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:let e=15&r;r=this.nextChar(),s=!0,r>=48&&r<=55&&(e=(e<<3)+(15&r),r=this.nextChar(),r>=48&&r<=55&&(s=!1,e=(e<<3)+(15&r))),i.push(String.fromCharCode(e));break;case 13:10===this.peekChar()&&this.nextChar();break;case 10:break;default:i.push(String.fromCharCode(r));break}break;default:i.push(String.fromCharCode(r));break}if(t)break;s||(r=this.nextChar())}return i.join("")}getName(){let e,t;const i=this.strBuf;i.length=0;while((e=this.nextChar())>=0&&!specialChars[e])if(35===e){if(e=this.nextChar(),specialChars[e]){(0,_util.warn)("Lexer_getName: NUMBER SIGN (#) should be followed by a hexadecimal number."),i.push("#");break}const r=toHexDigit(e);if(-1!==r){t=e,e=this.nextChar();const s=toHexDigit(e);if(-1===s){if((0,_util.warn)(`Lexer_getName: Illegal digit (${String.fromCharCode(e)}) in hexadecimal number.`),i.push("#",String.fromCharCode(t)),specialChars[e])break;i.push(String.fromCharCode(e));continue}i.push(String.fromCharCode(r<<4|s))}else i.push("#",String.fromCharCode(e))}else i.push(String.fromCharCode(e));return i.length>127?(0,_util.warn)(`Name token is longer than allowed by the spec: ${i.length}`):0===i.length&&(0,_util.warn)("Name token is empty."),_primitives.Name.get(i.join(""))}_hexStringWarn(e){const t=5;this._hexStringNumWarn++!==t?this._hexStringNumWarn>t||(0,_util.warn)(`getHexString - ignoring invalid character: ${e}`):(0,_util.warn)("getHexString - ignoring additional invalid characters.")}getHexString(){const e=this.strBuf;e.length=0;let t,i,r=this.currentChar,s=!0;this._hexStringNumWarn=0;while(1){if(r<0){(0,_util.warn)("Unterminated hex string");break}if(62===r){this.nextChar();break}if(1!==specialChars[r]){if(s){if(t=toHexDigit(r),-1===t){this._hexStringWarn(r),r=this.nextChar();continue}}else{if(i=toHexDigit(r),-1===i){this._hexStringWarn(r),r=this.nextChar();continue}e.push(String.fromCharCode(t<<4|i))}s=!s,r=this.nextChar()}else r=this.nextChar()}return e.join("")}getObj(){let e=!1,t=this.currentChar;while(1){if(t<0)return _primitives.EOF;if(e)10!==t&&13!==t||(e=!1);else if(37===t)e=!0;else if(1!==specialChars[t])break;t=this.nextChar()}switch(0|t){case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 43:case 45:case 46:return this.getNumber();case 40:return this.getString();case 47:return this.getName();case 91:return this.nextChar(),_primitives.Cmd.get("[");case 93:return this.nextChar(),_primitives.Cmd.get("]");case 60:return t=this.nextChar(),60===t?(this.nextChar(),_primitives.Cmd.get("<<")):this.getHexString();case 62:return t=this.nextChar(),62===t?(this.nextChar(),_primitives.Cmd.get(">>")):_primitives.Cmd.get(">");case 123:return this.nextChar(),_primitives.Cmd.get("{");case 125:return this.nextChar(),_primitives.Cmd.get("}");case 41:throw this.nextChar(),new _util.FormatError(`Illegal character: ${t}`)}let i=String.fromCharCode(t);if(t<32||t>127){const e=this.peekChar();if(e>=32&&e<=127)return this.nextChar(),_primitives.Cmd.get(i)}const r=this.knownCommands;let s=r&&void 0!==r[i];while((t=this.nextChar())>=0&&!specialChars[t]){const e=i+String.fromCharCode(t);if(s&&void 0===r[e])break;if(128===i.length)throw new _util.FormatError(`Command token too long: ${i.length}`);i=e,s=r&&void 0!==r[i]}return"true"===i||"false"!==i&&("null"===i?null:("BI"===i&&(this.beginInlineImagePos=this.stream.pos),_primitives.Cmd.get(i)))}peekObj(){const e=this.stream.pos,t=this.currentChar,i=this.beginInlineImagePos;let r;try{r=this.getObj()}catch(s){if(s instanceof _core_utils.MissingDataException)throw s;(0,_util.warn)(`peekObj: ${s}`)}return this.stream.pos=e,this.currentChar=t,this.beginInlineImagePos=i,r}skipToNextLine(){let e=this.currentChar;while(e>=0){if(13===e){e=this.nextChar(),10===e&&this.nextChar();break}if(10===e){this.nextChar();break}e=this.nextChar()}}}exports.Lexer=Lexer;class Linearization{static create(e){function t(e,t,i=!1){const r=e.get(t);if(Number.isInteger(r)&&(i?r>=0:r>0))return r;throw new Error(`The "${t}" parameter in the linearization dictionary is invalid.`)}function i(e){const t=e.get("H");let i;if(Array.isArray(t)&&(2===(i=t.length)||4===i)){for(let e=0;e<i;e++){const i=t[e];if(!(Number.isInteger(i)&&i>0))throw new Error(`Hint (${e}) in the linearization dictionary is invalid.`)}return t}throw new Error("Hint array in the linearization dictionary is invalid.")}const r=new Parser({lexer:new Lexer(e),xref:null}),s=r.getObj(),a=r.getObj(),n=r.getObj(),h=r.getObj();let o,l;if(!(Number.isInteger(s)&&Number.isInteger(a)&&(0,_primitives.isCmd)(n,"obj")&&(0,_primitives.isDict)(h)&&(0,_util.isNum)(o=h.get("Linearized"))&&o>0))return null;if((l=t(h,"L"))!==e.length)throw new Error('The "L" parameter in the linearization dictionary does not equal the stream length.');return{length:l,hints:i(h),objectNumberFirst:t(h,"O"),endFirst:t(h,"E"),numPages:t(h,"N"),mainXRefEntriesOffset:t(h,"T"),pageFirst:h.has("P")?t(h,"P",!0):0}}}exports.Linearization=Linearization;