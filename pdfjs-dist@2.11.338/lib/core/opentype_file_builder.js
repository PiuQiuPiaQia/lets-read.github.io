"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.OpenTypeFileBuilder=void 0;var _core_utils=require("./core_utils.js"),_util=require("../shared/util.js");function writeInt16(e,t,r){e[t]=r>>8&255,e[t+1]=255&r}function writeInt32(e,t,r){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r}function writeData(e,t,r){if(r instanceof Uint8Array)e.set(r,t);else if("string"===typeof r)for(let n=0,i=r.length;n<i;n++)e[t++]=255&r.charCodeAt(n);else for(let n=0,i=r.length;n<i;n++)e[t++]=255&r[n]}const OTF_HEADER_SIZE=12,OTF_TABLE_ENTRY_SIZE=16;class OpenTypeFileBuilder{constructor(e){this.sfnt=e,this.tables=Object.create(null)}static getSearchParams(e,t){let r=1,n=0;while((r^e)>r)r<<=1,n++;const i=r*t;return{range:i,entry:n,rangeShift:t*e-i}}toArray(){let e=this.sfnt;const t=this.tables,r=Object.keys(t);r.sort();const n=r.length;let i,s,o,a,l,c=OTF_HEADER_SIZE+n*OTF_TABLE_ENTRY_SIZE;const h=[c];for(i=0;i<n;i++){a=t[r[i]];const e=(a.length+3&-4)>>>0;c+=e,h.push(c)}const u=new Uint8Array(c);for(i=0;i<n;i++)a=t[r[i]],writeData(u,h[i],a);"true"===e&&(e=(0,_util.string32)(65536)),u[0]=255&e.charCodeAt(0),u[1]=255&e.charCodeAt(1),u[2]=255&e.charCodeAt(2),u[3]=255&e.charCodeAt(3),writeInt16(u,4,n);const _=OpenTypeFileBuilder.getSearchParams(n,16);for(writeInt16(u,6,_.range),writeInt16(u,8,_.entry),writeInt16(u,10,_.rangeShift),c=OTF_HEADER_SIZE,i=0;i<n;i++){l=r[i],u[c]=255&l.charCodeAt(0),u[c+1]=255&l.charCodeAt(1),u[c+2]=255&l.charCodeAt(2),u[c+3]=255&l.charCodeAt(3);let e=0;for(s=h[i],o=h[i+1];s<o;s+=4){const t=(0,_core_utils.readUint32)(u,s);e=e+t>>>0}writeInt32(u,c+4,e),writeInt32(u,c+8,h[i]),writeInt32(u,c+12,t[l].length),c+=OTF_TABLE_ENTRY_SIZE}return u}addTable(e,t){if(e in this.tables)throw new Error("Table "+e+" already exists");this.tables[e]=t}}exports.OpenTypeFileBuilder=OpenTypeFileBuilder;