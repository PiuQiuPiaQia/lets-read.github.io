"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.StructTreeRoot=exports.StructTreePage=void 0;var _primitives=require("./primitives.js"),_util=require("../shared/util.js"),_name_number_tree=require("./name_number_tree.js");const MAX_DEPTH=40,StructElementType={PAGE_CONTENT:"PAGE_CONTENT",STREAM_CONTENT:"STREAM_CONTENT",OBJECT:"OBJECT",ELEMENT:"ELEMENT"};class StructTreeRoot{constructor(t){this.dict=t,this.roleMap=new Map}init(){this.readRoleMap()}readRoleMap(){const t=this.dict.get("RoleMap");(0,_primitives.isDict)(t)&&t.forEach(((t,e)=>{(0,_primitives.isName)(e)&&this.roleMap.set(t,e.name)}))}}exports.StructTreeRoot=StructTreeRoot;class StructElementNode{constructor(t,e){this.tree=t,this.dict=e,this.kids=[],this.parseKids()}get role(){const t=this.dict.get("S"),e=(0,_primitives.isName)(t)?t.name:"",{root:r}=this.tree;return r.roleMap.has(e)?r.roleMap.get(e):e}parseKids(){let t=null;const e=this.dict.getRaw("Pg");(0,_primitives.isRef)(e)&&(t=e.toString());const r=this.dict.get("K");if(Array.isArray(r))for(const i of r){const e=this.parseKid(t,i);e&&this.kids.push(e)}else{const e=this.parseKid(t,r);e&&this.kids.push(e)}}parseKid(t,e){if(Number.isInteger(e))return this.tree.pageDict.objId!==t?null:new StructElement({type:StructElementType.PAGE_CONTENT,mcid:e,pageObjId:t});let r=null;if((0,_primitives.isRef)(e)?r=this.dict.xref.fetch(e):(0,_primitives.isDict)(e)&&(r=e),!r)return null;const i=r.getRaw("Pg");(0,_primitives.isRef)(i)&&(t=i.toString());const s=(0,_primitives.isName)(r.get("Type"))?r.get("Type").name:null;return"MCR"===s?this.tree.pageDict.objId!==t?null:new StructElement({type:StructElementType.STREAM_CONTENT,refObjId:(0,_primitives.isRef)(r.getRaw("Stm"))?r.getRaw("Stm").toString():null,pageObjId:t,mcid:r.get("MCID")}):"OBJR"===s?this.tree.pageDict.objId!==t?null:new StructElement({type:StructElementType.OBJECT,refObjId:(0,_primitives.isRef)(r.getRaw("Obj"))?r.getRaw("Obj").toString():null,pageObjId:t}):new StructElement({type:StructElementType.ELEMENT,dict:r})}}class StructElement{constructor({type:t,dict:e=null,mcid:r=null,pageObjId:i=null,refObjId:s=null}){this.type=t,this.dict=e,this.mcid=r,this.pageObjId=i,this.refObjId=s,this.parentNode=null}}class StructTreePage{constructor(t,e){this.root=t,this.rootDict=t?t.dict:null,this.pageDict=e,this.nodes=[]}parse(){if(!this.root||!this.rootDict)return;const t=this.rootDict.get("ParentTree");if(!t)return;const e=this.pageDict.get("StructParents");if(!Number.isInteger(e))return;const r=new _name_number_tree.NumberTree(t,this.rootDict.xref),i=r.get(e);if(!Array.isArray(i))return;const s=new Map;for(const n of i)(0,_primitives.isRef)(n)&&this.addNode(this.rootDict.xref.fetch(n),s)}addNode(t,e,r=0){if(r>MAX_DEPTH)return(0,_util.warn)("StructTree MAX_DEPTH reached."),null;if(e.has(t))return e.get(t);const i=new StructElementNode(this,t);e.set(t,i);const s=t.get("P");if(!s||(0,_primitives.isName)(s.get("Type"),"StructTreeRoot"))return this.addTopLevelNode(t,i)||e.delete(t),i;const n=this.addNode(s,e,r+1);if(!n)return i;let o=!1;for(const c of n.kids)c.type===StructElementType.ELEMENT&&c.dict===t&&(c.parentNode=i,o=!0);return o||e.delete(t),i}addTopLevelNode(t,e){const r=this.rootDict.get("K");if(!r)return!1;if((0,_primitives.isDict)(r))return r.objId===t.objId&&(this.nodes[0]=e,!0);if(!Array.isArray(r))return!0;let i=!1;for(let s=0;s<r.length;s++){const n=r[s];n&&n.toString()===t.objId&&(this.nodes[s]=e,i=!0)}return i}get serializable(){function t(e,r,i=0){if(i>MAX_DEPTH)return void(0,_util.warn)("StructTree too deep to be fully serialized.");const s=Object.create(null);s.role=e.role,s.children=[],r.children.push(s);const n=e.dict.get("Alt");(0,_util.isString)(n)&&(s.alt=(0,_util.stringToPDFString)(n));for(const o of e.kids){const e=o.type===StructElementType.ELEMENT?o.parentNode:null;e?t(e,s,i+1):o.type===StructElementType.PAGE_CONTENT||o.type===StructElementType.STREAM_CONTENT?s.children.push({type:"content",id:`page${o.pageObjId}_mcid${o.mcid}`}):o.type===StructElementType.OBJECT&&s.children.push({type:"object",id:o.refObjId})}}const e=Object.create(null);e.children=[],e.role="Root";for(const r of this.nodes)r&&t(r,e);return e}}exports.StructTreePage=StructTreePage;