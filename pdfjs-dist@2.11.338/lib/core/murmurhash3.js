"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MurmurHash3_64=void 0;var _util=require("../shared/util.js");const SEED=3285377520,MASK_HIGH=4294901760,MASK_LOW=65535;class MurmurHash3_64{constructor(t){this.h1=t?4294967295&t:SEED,this.h2=t?4294967295&t:SEED}update(t){let r,e;if((0,_util.isString)(t)){r=new Uint8Array(2*t.length),e=0;for(let s=0,_=t.length;s<_;s++){const _=t.charCodeAt(s);_<=255?r[e++]=_:(r[e++]=_>>>8,r[e++]=255&_)}}else{if(!(0,_util.isArrayBuffer)(t))throw new Error("Wrong data format in MurmurHash3_64_update. Input must be a string or array.");r=t.slice(),e=r.byteLength}const s=e>>2,_=e-4*s,S=new Uint32Array(r.buffer,0,s);let H=0,i=0,M=this.h1,h=this.h2;const a=3432918353,A=461845907,u=a&MASK_LOW,K=A&MASK_LOW;for(let n=0;n<s;n++)1&n?(H=S[n],H=H*a&MASK_HIGH|H*u&MASK_LOW,H=H<<15|H>>>17,H=H*A&MASK_HIGH|H*K&MASK_LOW,M^=H,M=M<<13|M>>>19,M=5*M+3864292196):(i=S[n],i=i*a&MASK_HIGH|i*u&MASK_LOW,i=i<<15|i>>>17,i=i*A&MASK_HIGH|i*K&MASK_LOW,h^=i,h=h<<13|h>>>19,h=5*h+3864292196);switch(H=0,_){case 3:H^=r[4*s+2]<<16;case 2:H^=r[4*s+1]<<8;case 1:H^=r[4*s],H=H*a&MASK_HIGH|H*u&MASK_LOW,H=H<<15|H>>>17,H=H*A&MASK_HIGH|H*K&MASK_LOW,1&s?M^=H:h^=H}this.h1=M,this.h2=h}hexdigest(){let t=this.h1,r=this.h2;t^=r>>>1,t=3981806797*t&MASK_HIGH|36045*t&MASK_LOW,r=4283543511*r&MASK_HIGH|(2950163797*(r<<16|t>>>16)&MASK_HIGH)>>>16,t^=r>>>1,t=444984403*t&MASK_HIGH|60499*t&MASK_LOW,r=3301882366*r&MASK_HIGH|(3120437893*(r<<16|t>>>16)&MASK_HIGH)>>>16,t^=r>>>1;const e=(t>>>0).toString(16),s=(r>>>0).toString(16);return e.padStart(8,"0")+s.padStart(8,"0")}}exports.MurmurHash3_64=MurmurHash3_64;