"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Type1Font=void 0;var _cff_parser=require("./cff_parser.js"),_fonts_utils=require("./fonts_utils.js"),_core_utils=require("./core_utils.js"),_stream=require("./stream.js"),_type1_parser=require("./type1_parser.js"),_util=require("../shared/util.js");function findBlock(e,t,r){const s=e.length,n=t.length,a=s-n;let o=r,i=!1;while(o<a){let r=0;while(r<n&&e[o+r]===t[r])r++;if(r>=n){o+=r;while(o<s&&(0,_core_utils.isWhiteSpace)(e[o]))o++;i=!0;break}o++}return{found:i,length:o}}function getHeaderBlock(e,t){const r=[101,101,120,101,99],s=e.pos;let n,a,o;try{n=e.getBytes(t),a=n.length}catch(l){}if(a===t&&(o=findBlock(n,r,t-2*r.length),o.found&&o.length===t))return{stream:new _stream.Stream(n),length:t};(0,_util.warn)('Invalid "Length1" property in Type1 font -- trying to recover.'),e.pos=s;const i=2048;let c;while(1){const t=e.peekBytes(i);if(o=findBlock(t,r,0),0===o.length)break;if(e.pos+=o.length,o.found){c=e.pos-s;break}}return e.pos=s,c?{stream:new _stream.Stream(e.getBytes(c)),length:c}:((0,_util.warn)('Unable to recover "Length1" property in Type1 font -- using as is.'),{stream:new _stream.Stream(e.getBytes(t)),length:t})}function getEexecBlock(e,t){const r=e.getBytes();return{stream:new _stream.Stream(r),length:r.length}}class Type1Font{constructor(e,t,r){const s=6;let n=r.length1,a=r.length2,o=t.peekBytes(s);const i=128===o[0]&&1===o[1];i&&(t.skip(s),n=o[5]<<24|o[4]<<16|o[3]<<8|o[2]);const c=getHeaderBlock(t,n),l=new _type1_parser.Type1Parser(c.stream,!1,_fonts_utils.SEAC_ANALYSIS_ENABLED);l.extractFontHeader(r),i&&(o=t.getBytes(s),a=o[5]<<24|o[4]<<16|o[3]<<8|o[2]);const p=getEexecBlock(t,a),h=new _type1_parser.Type1Parser(p.stream,!0,_fonts_utils.SEAC_ANALYSIS_ENABLED),u=h.extractFontProgram(r);for(const d in u.properties)r[d]=u.properties[d];const g=u.charstrings,f=this.getType2Charstrings(g),_=this.getType2Subrs(u.subrs);this.charstrings=g,this.data=this.wrap(e,f,this.charstrings,_,r),this.seacs=this.getSeacs(u.charstrings)}get numGlyphs(){return this.charstrings.length+1}getCharset(){const e=[".notdef"],t=this.charstrings;for(let r=0;r<t.length;r++)e.push(t[r].glyphName);return e}getGlyphMapping(e){const t=this.charstrings;if(e.composite){const r=Object.create(null);for(let s=0,n=t.length;s<n;s++){const t=e.cMap.charCodeOf(s);r[t]=s+1}return r}const r=[".notdef"];let s,n;for(n=0;n<t.length;n++)r.push(t[n].glyphName);const a=e.builtInEncoding;if(a){s=Object.create(null);for(const e in a)n=r.indexOf(a[e]),n>=0&&(s[e]=n)}return(0,_fonts_utils.type1FontGlyphMapping)(e,s,r)}hasGlyphId(e){if(e<0||e>=this.numGlyphs)return!1;if(0===e)return!0;const t=this.charstrings[e-1];return t.charstring.length>0}getSeacs(e){const t=[];for(let r=0,s=e.length;r<s;r++){const s=e[r];s.seac&&(t[r+1]=s.seac)}return t}getType2Charstrings(e){const t=[];for(let r=0,s=e.length;r<s;r++)t.push(e[r].charstring);return t}getType2Subrs(e){let t=0;const r=e.length;t=r<1133?107:r<33769?1131:32768;const s=[];let n;for(n=0;n<t;n++)s.push([11]);for(n=0;n<r;n++)s.push(e[n]);return s}wrap(e,t,r,s,n){const a=new _cff_parser.CFF;a.header=new _cff_parser.CFFHeader(1,0,4,4),a.names=[e];const o=new _cff_parser.CFFTopDict;o.setByName("version",391),o.setByName("Notice",392),o.setByName("FullName",393),o.setByName("FamilyName",394),o.setByName("Weight",395),o.setByName("Encoding",null),o.setByName("FontMatrix",n.fontMatrix),o.setByName("FontBBox",n.bbox),o.setByName("charset",null),o.setByName("CharStrings",null),o.setByName("Private",null),a.topDict=o;const i=new _cff_parser.CFFStrings;i.add("Version 0.11"),i.add("See original notice"),i.add(e),i.add(e),i.add("Medium"),a.strings=i,a.globalSubrIndex=new _cff_parser.CFFIndex;const c=t.length,l=[".notdef"];let p,h;for(p=0;p<c;p++){const e=r[p].glyphName,t=_cff_parser.CFFStandardStrings.indexOf(e);-1===t&&i.add(e),l.push(e)}a.charset=new _cff_parser.CFFCharset(!1,0,l);const u=new _cff_parser.CFFIndex;for(u.add([139,14]),p=0;p<c;p++)u.add(t[p]);a.charStrings=u;const g=new _cff_parser.CFFPrivateDict;g.setByName("Subrs",null);const f=["BlueValues","OtherBlues","FamilyBlues","FamilyOtherBlues","StemSnapH","StemSnapV","BlueShift","BlueFuzz","BlueScale","LanguageGroup","ExpansionFactor","ForceBold","StdHW","StdVW"];for(p=0,h=f.length;p<h;p++){const e=f[p];if(!(e in n.privateData))continue;const t=n.privateData[e];if(Array.isArray(t))for(let r=t.length-1;r>0;r--)t[r]-=t[r-1];g.setByName(e,t)}a.topDict.privateDict=g;const _=new _cff_parser.CFFIndex;for(p=0,h=s.length;p<h;p++)_.add(s[p]);g.subrsIndex=_;const d=new _cff_parser.CFFCompiler(a);return d.compile()}}exports.Type1Font=Type1Font;