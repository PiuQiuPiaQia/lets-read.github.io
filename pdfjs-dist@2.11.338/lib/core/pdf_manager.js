"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NetworkPdfManager=exports.LocalPdfManager=void 0;var _util=require("../shared/util.js"),_chunked_stream=require("./chunked_stream.js"),_core_utils=require("./core_utils.js"),_document=require("./document.js"),_stream=require("./stream.js");function parseDocBaseUrl(e){if(e){const t=(0,_util.createValidAbsoluteUrl)(e);if(t)return t.href;(0,_util.warn)(`Invalid absolute docBaseUrl: "${e}".`)}return null}class BasePdfManager{constructor(){this.constructor===BasePdfManager&&(0,_util.unreachable)("Cannot initialize BasePdfManager.")}get docId(){return this._docId}get password(){return this._password}get docBaseUrl(){return this._docBaseUrl}onLoadedStream(){(0,_util.unreachable)("Abstract method `onLoadedStream` called")}ensureDoc(e,t){return this.ensure(this.pdfDocument,e,t)}ensureXRef(e,t){return this.ensure(this.pdfDocument.xref,e,t)}ensureCatalog(e,t){return this.ensure(this.pdfDocument.catalog,e,t)}getPage(e){return this.pdfDocument.getPage(e)}fontFallback(e,t){return this.pdfDocument.fontFallback(e,t)}loadXfaFonts(e,t){return this.pdfDocument.loadXfaFonts(e,t)}loadXfaImages(){return this.pdfDocument.loadXfaImages()}serializeXfaData(e){return this.pdfDocument.serializeXfaData(e)}cleanup(e=!1){return this.pdfDocument.cleanup(e)}async ensure(e,t,a){(0,_util.unreachable)("Abstract method `ensure` called")}requestRange(e,t){(0,_util.unreachable)("Abstract method `requestRange` called")}requestLoadedStream(){(0,_util.unreachable)("Abstract method `requestLoadedStream` called")}sendProgressiveData(e){(0,_util.unreachable)("Abstract method `sendProgressiveData` called")}updatePassword(e){this._password=e}terminate(e){(0,_util.unreachable)("Abstract method `terminate` called")}}class LocalPdfManager extends BasePdfManager{constructor(e,t,a,r,s,n){super(),this._docId=e,this._password=a,this._docBaseUrl=parseDocBaseUrl(n),this.evaluatorOptions=r,this.enableXfa=s;const o=new _stream.Stream(t);this.pdfDocument=new _document.PDFDocument(this,o),this._loadedStreamPromise=Promise.resolve(o)}async ensure(e,t,a){const r=e[t];return"function"===typeof r?r.apply(e,a):r}requestRange(e,t){return Promise.resolve()}requestLoadedStream(){}onLoadedStream(){return this._loadedStreamPromise}terminate(e){}}exports.LocalPdfManager=LocalPdfManager;class NetworkPdfManager extends BasePdfManager{constructor(e,t,a,r,s,n){super(),this._docId=e,this._password=a.password,this._docBaseUrl=parseDocBaseUrl(n),this.msgHandler=a.msgHandler,this.evaluatorOptions=r,this.enableXfa=s,this.streamManager=new _chunked_stream.ChunkedStreamManager(t,{msgHandler:a.msgHandler,length:a.length,disableAutoFetch:a.disableAutoFetch,rangeChunkSize:a.rangeChunkSize}),this.pdfDocument=new _document.PDFDocument(this,this.streamManager.getStream())}async ensure(e,t,a){try{const r=e[t];return"function"===typeof r?r.apply(e,a):r}catch(r){if(!(r instanceof _core_utils.MissingDataException))throw r;return await this.requestRange(r.begin,r.end),this.ensure(e,t,a)}}requestRange(e,t){return this.streamManager.requestRange(e,t)}requestLoadedStream(){this.streamManager.requestAllChunks()}sendProgressiveData(e){this.streamManager.onReceiveData({chunk:e})}onLoadedStream(){return this.streamManager.onLoadedStream()}terminate(e){this.streamManager.abort(e)}}exports.NetworkPdfManager=NetworkPdfManager;