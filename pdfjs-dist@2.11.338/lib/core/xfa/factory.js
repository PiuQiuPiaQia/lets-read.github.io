"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.XFAFactory=void 0;var _xfa_object=require("./xfa_object.js"),_bind=require("./bind.js"),_data=require("./data.js"),_fonts=require("./fonts.js"),_utils=require("./utils.js"),_util=require("../../shared/util.js"),_parser=require("./parser.js");class XFAFactory{constructor(t){try{this.root=(new _parser.XFAParser).parse(XFAFactory._createDocument(t));const e=new _bind.Binder(this.root);this.form=e.bind(),this.dataHandler=new _data.DataHandler(this.root,e.getData()),this.form[_xfa_object.$globalData].template=this.form}catch(e){(0,_util.warn)(`XFA - an error occurred during parsing and binding: ${e}`)}}isValid(){return this.root&&this.form}_createPages(){try{this.pages=this.form[_xfa_object.$toHTML](),this.dims=this.pages.children.map((t=>{const{width:e,height:r}=t.attributes.style;return[0,0,parseInt(e),parseInt(r)]}))}catch(t){(0,_util.warn)(`XFA - an error occurred during layout: ${t}`)}}getBoundingBox(t){return this.dims[t]}get numberPages(){return this.pages||this._createPages(),this.dims.length}setImages(t){this.form[_xfa_object.$globalData].images=t}setFonts(t){this.form[_xfa_object.$globalData].fontFinder=new _fonts.FontFinder(t);const e=[];for(let r of this.form[_xfa_object.$globalData].usedTypefaces){r=(0,_utils.stripQuotes)(r);const t=this.form[_xfa_object.$globalData].fontFinder.find(r);t||e.push(r)}return e.length>0?e:null}appendFonts(t,e){this.form[_xfa_object.$globalData].fontFinder.add(t,e)}getPages(){this.pages||this._createPages();const t=this.pages;return this.pages=null,t}serializeData(t){return this.dataHandler.serialize(t)}static _createDocument(t){return t["/xdp:xdp"]?Object.values(t).join(""):t["xdp:xdp"]}}exports.XFAFactory=XFAFactory;