"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.XmlObject=exports.XFAObjectArray=exports.XFAObject=exports.XFAAttribute=exports.StringObject=exports.OptionObject=exports.Option10=exports.Option01=exports.IntegerObject=exports.ContentObject=exports.$uid=exports.$toStyle=exports.$toString=exports.$toHTML=exports.$text=exports.$tabIndex=exports.$setValue=exports.$setSetAttributes=exports.$setId=exports.$searchNode=exports.$root=exports.$resolvePrototypes=exports.$removeChild=exports.$pushPara=exports.$pushGlyphs=exports.$popPara=exports.$onText=exports.$onChildCheck=exports.$onChild=exports.$nsAttributes=exports.$nodeName=exports.$namespaceId=exports.$isUsable=exports.$isTransparent=exports.$isThereMoreWidth=exports.$isSplittable=exports.$isNsAgnostic=exports.$isDescendent=exports.$isDataValue=exports.$isCDATAXml=exports.$isBindable=exports.$insertAt=exports.$indexOf=exports.$ids=exports.$hasSettableValue=exports.$globalData=exports.$getTemplateRoot=exports.$getSubformParent=exports.$getRealChildrenByNameIt=exports.$getParent=exports.$getNextPage=exports.$getExtra=exports.$getDataValue=exports.$getContainedChildren=exports.$getChildrenByNameIt=exports.$getChildrenByName=exports.$getChildrenByClass=exports.$getChildren=exports.$getAvailableSpace=exports.$getAttributes=exports.$getAttributeIt=exports.$flushHTML=exports.$finalize=exports.$extra=exports.$dump=exports.$data=exports.$content=exports.$consumed=exports.$clone=exports.$cleanup=exports.$cleanPage=exports.$clean=exports.$childrenToHTML=exports.$appendChild=exports.$addHTML=exports.$acceptWhitespace=void 0;var _utils=require("./utils.js"),_util=require("../../shared/util.js"),_core_utils=require("../core_utils.js"),_namespaces=require("./namespaces.js"),_som=require("./som.js");const $acceptWhitespace=Symbol();exports.$acceptWhitespace=$acceptWhitespace;const $addHTML=Symbol();exports.$addHTML=$addHTML;const $appendChild=Symbol();exports.$appendChild=$appendChild;const $childrenToHTML=Symbol();exports.$childrenToHTML=$childrenToHTML;const $clean=Symbol();exports.$clean=$clean;const $cleanPage=Symbol();exports.$cleanPage=$cleanPage;const $cleanup=Symbol();exports.$cleanup=$cleanup;const $clone=Symbol();exports.$clone=$clone;const $consumed=Symbol();exports.$consumed=$consumed;const $content=Symbol("content");exports.$content=$content;const $data=Symbol("data");exports.$data=$data;const $dump=Symbol();exports.$dump=$dump;const $extra=Symbol("extra");exports.$extra=$extra;const $finalize=Symbol();exports.$finalize=$finalize;const $flushHTML=Symbol();exports.$flushHTML=$flushHTML;const $getAttributeIt=Symbol();exports.$getAttributeIt=$getAttributeIt;const $getAttributes=Symbol();exports.$getAttributes=$getAttributes;const $getAvailableSpace=Symbol();exports.$getAvailableSpace=$getAvailableSpace;const $getChildrenByClass=Symbol();exports.$getChildrenByClass=$getChildrenByClass;const $getChildrenByName=Symbol();exports.$getChildrenByName=$getChildrenByName;const $getChildrenByNameIt=Symbol();exports.$getChildrenByNameIt=$getChildrenByNameIt;const $getDataValue=Symbol();exports.$getDataValue=$getDataValue;const $getExtra=Symbol();exports.$getExtra=$getExtra;const $getRealChildrenByNameIt=Symbol();exports.$getRealChildrenByNameIt=$getRealChildrenByNameIt;const $getChildren=Symbol();exports.$getChildren=$getChildren;const $getContainedChildren=Symbol();exports.$getContainedChildren=$getContainedChildren;const $getNextPage=Symbol();exports.$getNextPage=$getNextPage;const $getSubformParent=Symbol();exports.$getSubformParent=$getSubformParent;const $getParent=Symbol();exports.$getParent=$getParent;const $getTemplateRoot=Symbol();exports.$getTemplateRoot=$getTemplateRoot;const $globalData=Symbol();exports.$globalData=$globalData;const $hasSettableValue=Symbol();exports.$hasSettableValue=$hasSettableValue;const $ids=Symbol();exports.$ids=$ids;const $indexOf=Symbol();exports.$indexOf=$indexOf;const $insertAt=Symbol();exports.$insertAt=$insertAt;const $isCDATAXml=Symbol();exports.$isCDATAXml=$isCDATAXml;const $isBindable=Symbol();exports.$isBindable=$isBindable;const $isDataValue=Symbol();exports.$isDataValue=$isDataValue;const $isDescendent=Symbol();exports.$isDescendent=$isDescendent;const $isNsAgnostic=Symbol();exports.$isNsAgnostic=$isNsAgnostic;const $isSplittable=Symbol();exports.$isSplittable=$isSplittable;const $isThereMoreWidth=Symbol();exports.$isThereMoreWidth=$isThereMoreWidth;const $isTransparent=Symbol();exports.$isTransparent=$isTransparent;const $isUsable=Symbol();exports.$isUsable=$isUsable;const $lastAttribute=Symbol(),$namespaceId=Symbol("namespaceId");exports.$namespaceId=$namespaceId;const $nodeName=Symbol("nodeName");exports.$nodeName=$nodeName;const $nsAttributes=Symbol();exports.$nsAttributes=$nsAttributes;const $onChild=Symbol();exports.$onChild=$onChild;const $onChildCheck=Symbol();exports.$onChildCheck=$onChildCheck;const $onText=Symbol();exports.$onText=$onText;const $pushGlyphs=Symbol();exports.$pushGlyphs=$pushGlyphs;const $popPara=Symbol();exports.$popPara=$popPara;const $pushPara=Symbol();exports.$pushPara=$pushPara;const $removeChild=Symbol();exports.$removeChild=$removeChild;const $root=Symbol("root");exports.$root=$root;const $resolvePrototypes=Symbol();exports.$resolvePrototypes=$resolvePrototypes;const $searchNode=Symbol();exports.$searchNode=$searchNode;const $setId=Symbol();exports.$setId=$setId;const $setSetAttributes=Symbol();exports.$setSetAttributes=$setSetAttributes;const $setValue=Symbol();exports.$setValue=$setValue;const $tabIndex=Symbol();exports.$tabIndex=$tabIndex;const $text=Symbol();exports.$text=$text;const $toHTML=Symbol();exports.$toHTML=$toHTML;const $toString=Symbol();exports.$toString=$toString;const $toStyle=Symbol();exports.$toStyle=$toStyle;const $uid=Symbol("uid");exports.$uid=$uid;const _applyPrototype=Symbol(),_attributes=Symbol(),_attributeNames=Symbol(),_children=Symbol("_children"),_cloneAttribute=Symbol(),_dataValue=Symbol(),_defaultValue=Symbol(),_filteredChildrenGenerator=Symbol(),_getPrototype=Symbol(),_getUnsetAttributes=Symbol(),_hasChildren=Symbol(),_max=Symbol(),_options=Symbol(),_parent=Symbol("parent"),_resolvePrototypesHelper=Symbol(),_setAttributes=Symbol(),_validator=Symbol();let uid=0;const NS_DATASETS=_namespaces.NamespaceIds.datasets.id;class XFAObject{constructor(t,e,s=!1){this[$namespaceId]=t,this[$nodeName]=e,this[_hasChildren]=s,this[_parent]=null,this[_children]=[],this[$uid]=`${e}${uid++}`,this[$globalData]=null}[$onChild](t){if(!this[_hasChildren]||!this[$onChildCheck](t))return!1;const e=t[$nodeName],s=this[e];if(!(s instanceof XFAObjectArray))return null!==s&&this[$removeChild](s),this[e]=t,this[$appendChild](t),!0;if(s.push(t))return this[$appendChild](t),!0;let n="";return this.id?n=` (id: ${this.id})`:this.name&&(n=` (name: ${this.name} ${this.h.value})`),(0,_util.warn)(`XFA - node "${this[$nodeName]}"${n} has already enough "${e}"!`),!1}[$onChildCheck](t){return this.hasOwnProperty(t[$nodeName])&&t[$namespaceId]===this[$namespaceId]}[$isNsAgnostic](){return!1}[$acceptWhitespace](){return!1}[$isCDATAXml](){return!1}[$isBindable](){return!1}[$popPara](){this.para&&this[$getTemplateRoot]()[$extra].paraStack.pop()}[$pushPara](){this[$getTemplateRoot]()[$extra].paraStack.push(this.para)}[$setId](t){this.id&&this[$namespaceId]===_namespaces.NamespaceIds.template.id&&t.set(this.id,this)}[$getTemplateRoot](){return this[$globalData].template}[$isSplittable](){return!1}[$isThereMoreWidth](){return!1}[$appendChild](t){t[_parent]=this,this[_children].push(t),!t[$globalData]&&this[$globalData]&&(t[$globalData]=this[$globalData])}[$removeChild](t){const e=this[_children].indexOf(t);this[_children].splice(e,1)}[$hasSettableValue](){return this.hasOwnProperty("value")}[$setValue](t){}[$onText](t){}[$finalize](){}[$clean](t){delete this[_hasChildren],this[$cleanup]&&(t.clean(this[$cleanup]),delete this[$cleanup])}[$indexOf](t){return this[_children].indexOf(t)}[$insertAt](t,e){e[_parent]=this,this[_children].splice(t,0,e),!e[$globalData]&&this[$globalData]&&(e[$globalData]=this[$globalData])}[$isTransparent](){return!this.name}[$lastAttribute](){return""}[$text](){return 0===this[_children].length?this[$content]:this[_children].map((t=>t[$text]())).join("")}get[_attributeNames](){const t=Object.getPrototypeOf(this);if(!t._attributes){const e=t._attributes=new Set;for(const t of Object.getOwnPropertyNames(this)){if(null===this[t]||this[t]instanceof XFAObject||this[t]instanceof XFAObjectArray)break;e.add(t)}}return(0,_util.shadow)(this,_attributeNames,t._attributes)}[$isDescendent](t){let e=this;while(e){if(e===t)return!0;e=e[$getParent]()}return!1}[$getParent](){return this[_parent]}[$getSubformParent](){return this[$getParent]()}[$getChildren](t=null){return t?this[t]:this[_children]}[$dump](){const t=Object.create(null);this[$content]&&(t.$content=this[$content]);for(const e of Object.getOwnPropertyNames(this)){const s=this[e];null!==s&&(s instanceof XFAObject?t[e]=s[$dump]():s instanceof XFAObjectArray?s.isEmpty()||(t[e]=s.dump()):t[e]=s)}return t}[$toStyle](){return null}[$toHTML](){return _utils.HTMLResult.EMPTY}*[$getContainedChildren](){for(const t of this[$getChildren]())yield t}*[_filteredChildrenGenerator](t,e){for(const s of this[$getContainedChildren]())if(!t||e===t.has(s[$nodeName])){const t=this[$getAvailableSpace](),e=s[$toHTML](t);e.success||(this[$extra].failingNode=s),yield e}}[$flushHTML](){return null}[$addHTML](t,e){this[$extra].children.push(t)}[$getAvailableSpace](){}[$childrenToHTML]({filter:t=null,include:e=!0}){if(this[$extra].generator){const t=this[$getAvailableSpace](),e=this[$extra].failingNode[$toHTML](t);if(!e.success)return e;e.html&&this[$addHTML](e.html,e.bbox),delete this[$extra].failingNode}else this[$extra].generator=this[_filteredChildrenGenerator](t,e);while(1){const t=this[$extra].generator.next();if(t.done)break;const e=t.value;if(!e.success)return e;e.html&&this[$addHTML](e.html,e.bbox)}return this[$extra].generator=null,_utils.HTMLResult.EMPTY}[$setSetAttributes](t){this[_setAttributes]=new Set(Object.keys(t))}[_getUnsetAttributes](t){const e=this[_attributeNames],s=this[_setAttributes];return[...t].filter((t=>e.has(t)&&!s.has(t)))}[$resolvePrototypes](t,e=new Set){for(const s of this[_children])s[_resolvePrototypesHelper](t,e)}[_resolvePrototypesHelper](t,e){const s=this[_getPrototype](t,e);s?this[_applyPrototype](s,t,e):this[$resolvePrototypes](t,e)}[_getPrototype](t,e){const{use:s,usehref:n}=this;if(!s&&!n)return null;let o=null,r=null,i=null,a=s;if(n?(a=n,n.startsWith("#som(")&&n.endsWith(")")?r=n.slice("#som(".length,n.length-1):n.startsWith(".#som(")&&n.endsWith(")")?r=n.slice(".#som(".length,n.length-1):n.startsWith("#")?i=n.slice(1):n.startsWith(".#")&&(i=n.slice(2))):s.startsWith("#")?i=s.slice(1):r=s,this.use=this.usehref="",i?o=t.get(i):(o=(0,_som.searchNode)(t.get($root),this,r,!0,!1),o&&(o=o[0])),!o)return(0,_util.warn)(`XFA - Invalid prototype reference: ${a}.`),null;if(o[$nodeName]!==this[$nodeName])return(0,_util.warn)(`XFA - Incompatible prototype: ${o[$nodeName]} !== ${this[$nodeName]}.`),null;if(e.has(o))return(0,_util.warn)("XFA - Cycle detected in prototypes use."),null;e.add(o);const l=o[_getPrototype](t,e);return l&&o[_applyPrototype](l,t,e),o[$resolvePrototypes](t,e),e.delete(o),o}[_applyPrototype](t,e,s){if(s.has(t))return void(0,_util.warn)("XFA - Cycle detected in prototypes use.");!this[$content]&&t[$content]&&(this[$content]=t[$content]);const n=new Set(s);n.add(t);for(const o of this[_getUnsetAttributes](t[_setAttributes]))this[o]=t[o],this[_setAttributes]&&this[_setAttributes].add(o);for(const o of Object.getOwnPropertyNames(this)){if(this[_attributeNames].has(o))continue;const n=this[o],r=t[o];if(n instanceof XFAObjectArray){for(const t of n[_children])t[_resolvePrototypesHelper](e,s);for(let o=n[_children].length,i=r[_children].length;o<i;o++){const r=t[_children][o][$clone]();if(!n.push(r))break;r[_parent]=this,this[_children].push(r),r[_resolvePrototypesHelper](e,s)}}else if(null===n){if(null!==r){const t=r[$clone]();t[_parent]=this,this[o]=t,this[_children].push(t),t[_resolvePrototypesHelper](e,s)}}else n[$resolvePrototypes](e,s),r&&n[_applyPrototype](r,e,s)}}static[_cloneAttribute](t){return Array.isArray(t)?t.map((t=>XFAObject[_cloneAttribute](t))):"object"===typeof t&&null!==t?Object.assign({},t):t}[$clone](){const t=Object.create(Object.getPrototypeOf(this));for(const s of Object.getOwnPropertySymbols(this))try{t[s]=this[s]}catch(e){(0,_util.shadow)(t,s,this[s])}t[$uid]=`${t[$nodeName]}${uid++}`,t[_children]=[];for(const s of Object.getOwnPropertyNames(this)){if(this[_attributeNames].has(s)){t[s]=XFAObject[_cloneAttribute](this[s]);continue}const e=this[s];t[s]=e instanceof XFAObjectArray?new XFAObjectArray(e[_max]):null}for(const s of this[_children]){const e=s[$nodeName],n=s[$clone]();t[_children].push(n),n[_parent]=t,null===t[e]?t[e]=n:t[e][_children].push(n)}return t}[$getChildren](t=null){return t?this[_children].filter((e=>e[$nodeName]===t)):this[_children]}[$getChildrenByClass](t){return this[t]}[$getChildrenByName](t,e,s=!0){return Array.from(this[$getChildrenByNameIt](t,e,s))}*[$getChildrenByNameIt](t,e,s=!0){if("parent"!==t){for(const s of this[_children])s[$nodeName]===t&&(yield s),s.name===t&&(yield s),(e||s[$isTransparent]())&&(yield*s[$getChildrenByNameIt](t,e,!1));s&&this[_attributeNames].has(t)&&(yield new XFAAttribute(this,t,this[t]))}else yield this[_parent]}}exports.XFAObject=XFAObject;class XFAObjectArray{constructor(t=1/0){this[_max]=t,this[_children]=[]}push(t){const e=this[_children].length;return e<=this[_max]?(this[_children].push(t),!0):((0,_util.warn)(`XFA - node "${t[$nodeName]}" accepts no more than ${this[_max]} children`),!1)}isEmpty(){return 0===this[_children].length}dump(){return 1===this[_children].length?this[_children][0][$dump]():this[_children].map((t=>t[$dump]()))}[$clone](){const t=new XFAObjectArray(this[_max]);return t[_children]=this[_children].map((t=>t[$clone]())),t}get children(){return this[_children]}clear(){this[_children].length=0}}exports.XFAObjectArray=XFAObjectArray;class XFAAttribute{constructor(t,e,s){this[_parent]=t,this[$nodeName]=e,this[$content]=s,this[$consumed]=!1,this[$uid]="attribute"+uid++}[$getParent](){return this[_parent]}[$isDataValue](){return!0}[$getDataValue](){return this[$content].trim()}[$setValue](t){t=t.value||"",this[$content]=t.toString()}[$text](){return this[$content]}[$isDescendent](t){return this[_parent]===t||this[_parent][$isDescendent](t)}}exports.XFAAttribute=XFAAttribute;class XmlObject extends XFAObject{constructor(t,e,s={}){if(super(t,e),this[$content]="",this[_dataValue]=null,"#text"!==e){const t=new Map;this[_attributes]=t;for(const[e,n]of Object.entries(s))t.set(e,new XFAAttribute(this,e,n));if(s.hasOwnProperty($nsAttributes)){const t=s[$nsAttributes].xfa.dataNode;void 0!==t&&("dataGroup"===t?this[_dataValue]=!1:"dataValue"===t&&(this[_dataValue]=!0))}}this[$consumed]=!1}[$toString](t){const e=this[$nodeName];if("#text"===e)return void t.push((0,_core_utils.encodeToXmlString)(this[$content]));const s=this[$namespaceId]===NS_DATASETS?"xfa:":"";t.push(`<${s}${e}`);for(const[n,o]of this[_attributes].entries())t.push(` ${n}="${(0,_core_utils.encodeToXmlString)(o[$content])}"`);if(null!==this[_dataValue]&&(this[_dataValue]?t.push(' xfa:dataNode="dataValue"'):t.push(' xfa:dataNode="dataGroup"')),this[$content]||0!==this[_children].length){if(t.push(">"),this[$content])"string"===typeof this[$content]?t.push((0,_core_utils.encodeToXmlString)(this[$content])):this[$content][$toString](t);else for(const e of this[_children])e[$toString](t);t.push(`</${s}${e}>`)}else t.push("/>")}[$onChild](t){if(this[$content]){const t=new XmlObject(this[$namespaceId],"#text");this[$appendChild](t),t[$content]=this[$content],this[$content]=""}return this[$appendChild](t),!0}[$onText](t){this[$content]+=t}[$finalize](){if(this[$content]&&this[_children].length>0){const t=new XmlObject(this[$namespaceId],"#text");this[$appendChild](t),t[$content]=this[$content],delete this[$content]}}[$toHTML](){return"#text"===this[$nodeName]?_utils.HTMLResult.success({name:"#text",value:this[$content]}):_utils.HTMLResult.EMPTY}[$getChildren](t=null){return t?this[_children].filter((e=>e[$nodeName]===t)):this[_children]}[$getAttributes](){return this[_attributes]}[$getChildrenByClass](t){const e=this[_attributes].get(t);return void 0!==e?e:this[$getChildren](t)}*[$getChildrenByNameIt](t,e){const s=this[_attributes].get(t);s&&(yield s);for(const n of this[_children])n[$nodeName]===t&&(yield n),e&&(yield*n[$getChildrenByNameIt](t,e))}*[$getAttributeIt](t,e){const s=this[_attributes].get(t);!s||e&&s[$consumed]||(yield s);for(const n of this[_children])yield*n[$getAttributeIt](t,e)}*[$getRealChildrenByNameIt](t,e,s){for(const n of this[_children])n[$nodeName]!==t||s&&n[$consumed]||(yield n),e&&(yield*n[$getRealChildrenByNameIt](t,e,s))}[$isDataValue](){return null===this[_dataValue]?0===this[_children].length||this[_children][0][$namespaceId]===_namespaces.NamespaceIds.xhtml.id:this[_dataValue]}[$getDataValue](){return null===this[_dataValue]?0===this[_children].length?this[$content].trim():this[_children][0][$namespaceId]===_namespaces.NamespaceIds.xhtml.id?this[_children][0][$text]().trim():null:this[$content].trim()}[$setValue](t){t=t.value||"",this[$content]=t.toString()}[$dump](t=!1){const e=Object.create(null);t&&(e.$ns=this[$namespaceId]),this[$content]&&(e.$content=this[$content]),e.$name=this[$nodeName],e.children=[];for(const s of this[_children])e.children.push(s[$dump](t));e.attributes=Object.create(null);for(const[s,n]of this[_attributes])e.attributes[s]=n[$content];return e}}exports.XmlObject=XmlObject;class ContentObject extends XFAObject{constructor(t,e){super(t,e),this[$content]=""}[$onText](t){this[$content]+=t}[$finalize](){}}exports.ContentObject=ContentObject;class OptionObject extends ContentObject{constructor(t,e,s){super(t,e),this[_options]=s}[$finalize](){this[$content]=(0,_utils.getKeyword)({data:this[$content],defaultValue:this[_options][0],validate:t=>this[_options].includes(t)})}[$clean](t){super[$clean](t),delete this[_options]}}exports.OptionObject=OptionObject;class StringObject extends ContentObject{[$finalize](){this[$content]=this[$content].trim()}}exports.StringObject=StringObject;class IntegerObject extends ContentObject{constructor(t,e,s,n){super(t,e),this[_defaultValue]=s,this[_validator]=n}[$finalize](){this[$content]=(0,_utils.getInteger)({data:this[$content],defaultValue:this[_defaultValue],validate:this[_validator]})}[$clean](t){super[$clean](t),delete this[_defaultValue],delete this[_validator]}}exports.IntegerObject=IntegerObject;class Option01 extends IntegerObject{constructor(t,e){super(t,e,0,(t=>1===t))}}exports.Option01=Option01;class Option10 extends IntegerObject{constructor(t,e){super(t,e,1,(t=>0===t))}}exports.Option10=Option10;