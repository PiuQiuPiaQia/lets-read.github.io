"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Binder=void 0;var _xfa_object=require("./xfa_object.js"),_template=require("./template.js"),_som=require("./som.js"),_namespaces=require("./namespaces.js"),_util=require("../../shared/util.js");const NS_DATASETS=_namespaces.NamespaceIds.datasets.id;function createText(e){const t=new _template.Text({});return t[_xfa_object.$content]=e,t}class Binder{constructor(e){this.root=e,this.datasets=e.datasets,e.datasets&&e.datasets.data?this.data=e.datasets.data:this.data=new _xfa_object.XmlObject(_namespaces.NamespaceIds.datasets.id,"data"),this.emptyMerge=0===this.data[_xfa_object.$getChildren]().length,this.root.form=this.form=e.template[_xfa_object.$clone]()}_isConsumeData(){return!this.emptyMerge&&this._mergeMode}_isMatchTemplate(){return!this._isConsumeData()}bind(){return this._bindElement(this.form,this.data),this.form}getData(){return this.data}_bindValue(e,t,a){if(e[_xfa_object.$data]=t,e[_xfa_object.$hasSettableValue]())if(t[_xfa_object.$isDataValue]()){const a=t[_xfa_object.$getDataValue]();e[_xfa_object.$setValue](createText(a))}else if(e instanceof _template.Field&&e.ui&&e.ui.choiceList&&"multiSelect"===e.ui.choiceList.open){const a=t[_xfa_object.$getChildren]().map((e=>e[_xfa_object.$content].trim())).join("\n");e[_xfa_object.$setValue](createText(a))}else this._isConsumeData()&&(0,_util.warn)("XFA - Nodes haven't the same type.");else!t[_xfa_object.$isDataValue]()||this._isMatchTemplate()?this._bindElement(e,t):(0,_util.warn)("XFA - Nodes haven't the same type.")}_findDataByNameToConsume(e,t,a,n){if(!e)return null;let s,i;for(let o=0;o<3;o++){s=a[_xfa_object.$getRealChildrenByNameIt](e,!1,!0);while(1){if(i=s.next().value,!i)break;if(t===i[_xfa_object.$isDataValue]())return i}if(a[_xfa_object.$namespaceId]===_namespaces.NamespaceIds.datasets.id&&"data"===a[_xfa_object.$nodeName])break;a=a[_xfa_object.$getParent]()}return n?(s=this.data[_xfa_object.$getRealChildrenByNameIt](e,!0,!1),i=s.next().value,i||(s=this.data[_xfa_object.$getAttributeIt](e,!0),i=s.next().value,i&&i[_xfa_object.$isDataValue]()?i:null)):null}_setProperties(e,t){if(e.hasOwnProperty("setProperty"))for(const{ref:a,target:n,connection:s}of e.setProperty.children){if(s)continue;if(!a)continue;const i=(0,_som.searchNode)(this.root,t,a,!1,!1);if(!i){(0,_util.warn)(`XFA - Invalid reference: ${a}.`);continue}const[o]=i;if(!o[_xfa_object.$isDescendent](this.data)){(0,_util.warn)("XFA - Invalid node: must be a data node.");continue}const c=(0,_som.searchNode)(this.root,e,n,!1,!1);if(!c){(0,_util.warn)(`XFA - Invalid target: ${n}.`);continue}const[_]=c;if(!_[_xfa_object.$isDescendent](e)){(0,_util.warn)("XFA - Invalid target: must be a property or subproperty.");continue}const r=_[_xfa_object.$getParent]();if(_ instanceof _template.SetProperty||r instanceof _template.SetProperty){(0,_util.warn)("XFA - Invalid target: cannot be a setProperty or one of its properties.");continue}if(_ instanceof _template.BindItems||r instanceof _template.BindItems){(0,_util.warn)("XFA - Invalid target: cannot be a bindItems or one of its properties.");continue}const f=o[_xfa_object.$text](),l=_[_xfa_object.$nodeName];if(_ instanceof _xfa_object.XFAAttribute){const e=Object.create(null);e[l]=f;const t=Reflect.construct(Object.getPrototypeOf(r).constructor,[e]);r[l]=t[l]}else _.hasOwnProperty(_xfa_object.$content)?(_[_xfa_object.$data]=o,_[_xfa_object.$content]=f,_[_xfa_object.$finalize]()):(0,_util.warn)("XFA - Invalid node to use in setProperty")}}_bindItems(e,t){if(!e.hasOwnProperty("items")||!e.hasOwnProperty("bindItems")||e.bindItems.isEmpty())return;for(const s of e.items.children)e[_xfa_object.$removeChild](s);e.items.clear();const a=new _template.Items({}),n=new _template.Items({});e[_xfa_object.$appendChild](a),e.items.push(a),e[_xfa_object.$appendChild](n),e.items.push(n);for(const{ref:s,labelRef:i,valueRef:o,connection:c}of e.bindItems.children){if(c)continue;if(!s)continue;const e=(0,_som.searchNode)(this.root,t,s,!1,!1);if(e)for(const t of e){if(!t[_xfa_object.$isDescendent](this.datasets)){(0,_util.warn)(`XFA - Invalid ref (${s}): must be a datasets child.`);continue}const e=(0,_som.searchNode)(this.root,t,i,!0,!1);if(!e){(0,_util.warn)(`XFA - Invalid label: ${i}.`);continue}const[c]=e;if(!c[_xfa_object.$isDescendent](this.datasets)){(0,_util.warn)("XFA - Invalid label: must be a datasets child.");continue}const _=(0,_som.searchNode)(this.root,t,o,!0,!1);if(!_){(0,_util.warn)(`XFA - Invalid value: ${o}.`);continue}const[r]=_;if(!r[_xfa_object.$isDescendent](this.datasets)){(0,_util.warn)("XFA - Invalid value: must be a datasets child.");continue}const f=createText(c[_xfa_object.$text]()),l=createText(r[_xfa_object.$text]());a[_xfa_object.$appendChild](f),a.text.push(f),n[_xfa_object.$appendChild](l),n.text.push(l)}else(0,_util.warn)(`XFA - Invalid reference: ${s}.`)}}_bindOccurrences(e,t,a){let n;if(t.length>1&&(n=e[_xfa_object.$clone](),n[_xfa_object.$removeChild](n.occur),n.occur=null),this._bindValue(e,t[0],a),this._setProperties(e,t[0]),this._bindItems(e,t[0]),1===t.length)return;const s=e[_xfa_object.$getParent](),i=e[_xfa_object.$nodeName],o=s[_xfa_object.$indexOf](e);for(let c=1,_=t.length;c<_;c++){const e=t[c],_=n[_xfa_object.$clone]();s[i].push(_),s[_xfa_object.$insertAt](o+c,_),this._bindValue(_,e,a),this._setProperties(_,e),this._bindItems(_,e)}}_createOccurrences(e){if(!this.emptyMerge)return;const{occur:t}=e;if(!t||t.initial<=1)return;const a=e[_xfa_object.$getParent](),n=e[_xfa_object.$nodeName];if(!(a[n]instanceof _xfa_object.XFAObjectArray))return;let s;s=e.name?a[n].children.filter((t=>t.name===e.name)).length:a[n].children.length;const i=a[_xfa_object.$indexOf](e)+1,o=t.initial-s;if(o){const t=e[_xfa_object.$clone]();t[_xfa_object.$removeChild](t.occur),t.occur=null,a[n].push(t),a[_xfa_object.$insertAt](i,t);for(let e=1;e<o;e++){const s=t[_xfa_object.$clone]();a[n].push(s),a[_xfa_object.$insertAt](i+e,s)}}}_getOccurInfo(e){const{name:t,occur:a}=e;if(!a||!t)return[1,1];const n=-1===a.max?1/0:a.max;return[a.min,n]}_setAndBind(e,t){this._setProperties(e,t),this._bindItems(e,t),this._bindElement(e,t)}_bindElement(e,t){const a=[];this._createOccurrences(e);for(const n of e[_xfa_object.$getChildren]()){if(n[_xfa_object.$data])continue;if(void 0===this._mergeMode&&"subform"===n[_xfa_object.$nodeName]){this._mergeMode="consumeData"===n.mergeMode;const e=t[_xfa_object.$getChildren]();if(e.length>0)this._bindOccurrences(n,[e[0]],null);else if(this.emptyMerge){const e=t[_xfa_object.$namespaceId]===NS_DATASETS?-1:t[_xfa_object.$namespaceId],a=n[_xfa_object.$data]=new _xfa_object.XmlObject(e,n.name||"root");t[_xfa_object.$appendChild](a),this._bindElement(n,a)}continue}if(!n[_xfa_object.$isBindable]())continue;let e=!1,s=null,i=null,o=null;if(n.bind){switch(n.bind.match){case"none":this._setAndBind(n,t);continue;case"global":e=!0;break;case"dataRef":if(!n.bind.ref){(0,_util.warn)(`XFA - ref is empty in node ${n[_xfa_object.$nodeName]}.`),this._setAndBind(n,t);continue}i=n.bind.ref;break;default:break}n.bind.picture&&(s=n.bind.picture[_xfa_object.$content])}const[c,_]=this._getOccurInfo(n);if(i){if(o=(0,_som.searchNode)(this.root,t,i,!0,!1),null===o){if(o=(0,_som.createDataNode)(this.data,t,i),!o)continue;this._isConsumeData()&&(o[_xfa_object.$consumed]=!0),this._setAndBind(n,o);continue}this._isConsumeData()&&(o=o.filter((e=>!e[_xfa_object.$consumed]))),o.length>_?o=o.slice(0,_):0===o.length&&(o=null),o&&this._isConsumeData()&&o.forEach((e=>{e[_xfa_object.$consumed]=!0}))}else{if(!n.name){this._setAndBind(n,t);continue}if(this._isConsumeData()){const a=[];while(a.length<_){const s=this._findDataByNameToConsume(n.name,n[_xfa_object.$hasSettableValue](),t,e);if(!s)break;s[_xfa_object.$consumed]=!0,a.push(s)}o=a.length>0?a:null}else{if(o=t[_xfa_object.$getRealChildrenByNameIt](n.name,!1,this.emptyMerge).next().value,!o){const e=t[_xfa_object.$namespaceId]===NS_DATASETS?-1:t[_xfa_object.$namespaceId];o=n[_xfa_object.$data]=new _xfa_object.XmlObject(e,n.name),this.emptyMerge&&(o[_xfa_object.$consumed]=!0),t[_xfa_object.$appendChild](o),this._setAndBind(n,o);continue}this.emptyMerge&&(o[_xfa_object.$consumed]=!0),o=[o]}}o?this._bindOccurrences(n,o,s):c>0?this._setAndBind(n,t):a.push(n)}a.forEach((e=>e[_xfa_object.$getParent]()[_xfa_object.$removeChild](e)))}}exports.Binder=Binder;