"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ViewHistory=void 0;const DEFAULT_VIEW_HISTORY_CACHE_SIZE=20;class ViewHistory{constructor(i,t=DEFAULT_VIEW_HISTORY_CACHE_SIZE){this.fingerprint=i,this.cacheSize=t,this._initializedPromise=this._readFromStorage().then((i=>{const t=JSON.parse(i||"{}");let e=-1;if(Array.isArray(t.files)){while(t.files.length>=this.cacheSize)t.files.shift();for(let i=0,s=t.files.length;i<s;i++){const s=t.files[i];if(s.fingerprint===this.fingerprint){e=i;break}}}else t.files=[];-1===e&&(e=t.files.push({fingerprint:this.fingerprint})-1),this.file=t.files[e],this.database=t}))}async _writeToStorage(){const i=JSON.stringify(this.database);localStorage.setItem("pdfjs.history",i)}async _readFromStorage(){return localStorage.getItem("pdfjs.history")}async set(i,t){return await this._initializedPromise,this.file[i]=t,this._writeToStorage()}async setMultiple(i){await this._initializedPromise;for(const t in i)this.file[t]=i[t];return this._writeToStorage()}async get(i,t){await this._initializedPromise;const e=this.file[i];return void 0!==e?e:t}async getMultiple(i){await this._initializedPromise;const t=Object.create(null);for(const e in i){const s=this.file[e];t[e]=void 0!==s?s:i[e]}return t}}exports.ViewHistory=ViewHistory;