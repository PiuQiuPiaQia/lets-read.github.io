"use strict";var _util=require("../../shared/util.js"),_test_utils=require("./test_utils.js"),_api=require("../../display/api.js"),_display_utils=require("../../display/display_utils.js"),_ui_utils=require("../../web/ui_utils.js"),_image_utils=require("../../core/image_utils.js"),_worker_options=require("../../display/worker_options.js"),_is_node=require("../../shared/is_node.js"),_metadata=require("../../display/metadata.js");describe("api",(function(){const t="basicapi.pdf",e=105779,a=(0,_test_utils.buildGetDocumentParams)(t);let n;function o(t){const e=10;setTimeout((function(){t()}),e)}beforeAll((function(){n=new _api.DefaultCanvasFactory})),afterAll((function(){n=null})),describe("getDocument",(function(){it("creates pdf doc from URL-string",(async function(){const e=_test_utils.TEST_PDFS_PATH+t,a=(0,_api.getDocument)(e);expect(a instanceof _api.PDFDocumentLoadingTask).toEqual(!0);const n=await a.promise;expect(typeof e).toEqual("string"),expect(n instanceof _api.PDFDocumentProxy).toEqual(!0),expect(n.numPages).toEqual(3),await a.destroy()})),it("creates pdf doc from URL-object",(async function(){_is_node.isNodeJS&&pending("window.location is not supported in Node.js.");const e=new URL(_test_utils.TEST_PDFS_PATH+t,window.location),a=(0,_api.getDocument)(e);expect(a instanceof _api.PDFDocumentLoadingTask).toEqual(!0);const n=await a.promise;expect(e instanceof URL).toEqual(!0),expect(n instanceof _api.PDFDocumentProxy).toEqual(!0),expect(n.numPages).toEqual(3),await a.destroy()})),it("creates pdf doc from URL",(async function(){const t=(0,_api.getDocument)(a);expect(t instanceof _api.PDFDocumentLoadingTask).toEqual(!0);const e=(0,_util.createPromiseCapability)();t.onProgress=function(t){e.settled||e.resolve(t)};const n=await Promise.all([e.promise,t.promise]);expect(n[0].loaded/n[0].total>=0).toEqual(!0),expect(n[1]instanceof _api.PDFDocumentProxy).toEqual(!0),expect(t).toEqual(n[1].loadingTask),await t.destroy()})),it("creates pdf doc from URL and aborts before worker initialized",(async function(){const t=(0,_api.getDocument)(a);expect(t instanceof _api.PDFDocumentLoadingTask).toEqual(!0);const e=t.destroy();try{await t.promise,expect(!1).toEqual(!0)}catch(n){expect(!0).toEqual(!0),await e}})),it("creates pdf doc from URL and aborts loading after worker initialized",(async function(){const t=(0,_api.getDocument)(a);expect(t instanceof _api.PDFDocumentLoadingTask).toEqual(!0);const e=t._worker.promise.then((function(){return t.destroy()}));await e,expect(!0).toEqual(!0)})),it("creates pdf doc from typed array",(async function(){const a=await _test_utils.DefaultFileReaderFactory.fetch({path:_test_utils.TEST_PDFS_PATH+t});expect(a.length).toEqual(e);const n=(0,_api.getDocument)(a);expect(n instanceof _api.PDFDocumentLoadingTask).toEqual(!0);const o=(0,_util.createPromiseCapability)();n.onProgress=function(t){o.resolve(t)};const i=await Promise.all([n.promise,o.promise]);expect(i[0]instanceof _api.PDFDocumentProxy).toEqual(!0),expect(i[1].loaded/i[1].total).toEqual(1),await n.destroy()})),it("creates pdf doc from invalid PDF file",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("bug1020226.pdf"));expect(t instanceof _api.PDFDocumentLoadingTask).toEqual(!0);try{await t.promise,expect(!1).toEqual(!0)}catch(e){expect(e instanceof _util.InvalidPDFException).toEqual(!0),expect(e.message).toEqual("Invalid PDF structure.")}await t.destroy()})),it("creates pdf doc from non-existent URL",(async function(){_is_node.isNodeJS||pending("Fails intermittently on Linux in browsers.");const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("non-existent.pdf"));expect(t instanceof _api.PDFDocumentLoadingTask).toEqual(!0);try{await t.promise,expect(!1).toEqual(!0)}catch(e){expect(e instanceof _util.MissingPDFException).toEqual(!0)}await t.destroy()})),it("creates pdf doc from PDF file protected with user and owner password",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("pr6531_1.pdf"));expect(t instanceof _api.PDFDocumentLoadingTask).toEqual(!0);const e=(0,_util.createPromiseCapability)(),a=(0,_util.createPromiseCapability)();t.onPassword=function(t,n){return n!==_util.PasswordResponses.NEED_PASSWORD||e.settled?n!==_util.PasswordResponses.INCORRECT_PASSWORD||a.settled?void expect(!1).toEqual(!0):(a.resolve(),void t("asdfasdf")):(e.resolve(),void t("qwerty"))};const n=await Promise.all([e.promise,a.promise,t.promise]);expect(n[2]instanceof _api.PDFDocumentProxy).toEqual(!0),await t.destroy()})),it("creates pdf doc from PDF file protected with only a user password",(async function(){const t="pr6531_2.pdf",e=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)(t,{password:""}));expect(e instanceof _api.PDFDocumentLoadingTask).toEqual(!0);const a=e.promise.then((function(){return expect(!1).toEqual(!0),Promise.reject(new Error("loadingTask should be rejected"))}),(function(t){return expect(t instanceof _util.PasswordException).toEqual(!0),expect(t.code).toEqual(_util.PasswordResponses.NEED_PASSWORD),e.destroy()})),n=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)(t,{password:"qwerty"}));expect(n instanceof _api.PDFDocumentLoadingTask).toEqual(!0);const o=n.promise.then((function(){return expect(!1).toEqual(!0),Promise.reject(new Error("loadingTask should be rejected"))}),(function(t){return expect(t instanceof _util.PasswordException).toEqual(!0),expect(t.code).toEqual(_util.PasswordResponses.INCORRECT_PASSWORD),n.destroy()})),i=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)(t,{password:"asdfasdf"}));expect(i instanceof _api.PDFDocumentLoadingTask).toEqual(!0);const s=i.promise.then((function(t){return expect(t instanceof _api.PDFDocumentProxy).toEqual(!0),i.destroy()}));await Promise.all([a,o,s])})),it("creates pdf doc from password protected PDF file and aborts/throws in the onPassword callback (issue 7806)",(async function(){const t="issue3371.pdf",e=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)(t));expect(e instanceof _api.PDFDocumentLoadingTask).toEqual(!0);const a=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)(t,{password:"qwerty"}));let n;expect(a instanceof _api.PDFDocumentLoadingTask).toEqual(!0),e.onPassword=function(t,a){a!==_util.PasswordResponses.NEED_PASSWORD?expect(!1).toEqual(!0):n=e.destroy()};const o=e.promise.then((function(){return expect(!1).toEqual(!0),Promise.reject(new Error("loadingTask should be rejected"))}),(function(t){return expect(t instanceof _util.PasswordException).toEqual(!0),expect(t.code).toEqual(_util.PasswordResponses.NEED_PASSWORD),n}));a.onPassword=function(t,e){if(e===_util.PasswordResponses.INCORRECT_PASSWORD)throw new Error("Incorrect password");expect(!1).toEqual(!0)};const i=a.promise.then((function(){return expect(!1).toEqual(!0),Promise.reject(new Error("loadingTask should be rejected"))}),(function(t){return expect(t instanceof _util.PasswordException).toEqual(!0),expect(t.code).toEqual(_util.PasswordResponses.INCORRECT_PASSWORD),a.destroy()}));await Promise.all([o,i])})),it("creates pdf doc from empty typed array",(async function(){const t=(0,_api.getDocument)(new Uint8Array(0));expect(t instanceof _api.PDFDocumentLoadingTask).toEqual(!0);try{await t.promise,expect(!1).toEqual(!0)}catch(e){expect(e instanceof _util.InvalidPDFException).toEqual(!0),expect(e.message).toEqual("The PDF file is empty, i.e. its size is zero bytes.")}await t.destroy()})),it("checks that `docId`s are unique and increasing",(async function(){const t=(0,_api.getDocument)(a);expect(t instanceof _api.PDFDocumentLoadingTask).toEqual(!0),await t.promise;const e=t.docId,n=(0,_api.getDocument)(a);expect(n instanceof _api.PDFDocumentLoadingTask).toEqual(!0),await n.promise;const o=n.docId;expect(e).not.toEqual(o);const i=/^d(\d+)$/,s=i.exec(e)?.[1],c=i.exec(o)?.[1];expect(+s).toBeLessThan(+c),await Promise.all([t.destroy(),n.destroy()])}))})),describe("PDFWorker",(function(){it("worker created or destroyed",(async function(){_is_node.isNodeJS&&pending("Worker is not supported in Node.js.");const t=new _api.PDFWorker({name:"test1"});await t.promise,expect(t.name).toEqual("test1"),expect(!!t.port).toEqual(!0),expect(t.destroyed).toEqual(!1),expect(!!t._webWorker).toEqual(!0),expect(t.port===t._webWorker).toEqual(!0),t.destroy(),expect(!!t.port).toEqual(!1),expect(t.destroyed).toEqual(!0)})),it("worker created or destroyed by getDocument",(async function(){_is_node.isNodeJS&&pending("Worker is not supported in Node.js.");const t=(0,_api.getDocument)(a);let e;t.promise.then((function(){e=t._worker,expect(!!e).toEqual(!0)}));const n=t.promise.then((function(){return t.destroy()}));await n;const o=t._worker;expect(!!o).toEqual(!1),expect(e.destroyed).toEqual(!0)})),it("worker created and can be used in getDocument",(async function(){_is_node.isNodeJS&&pending("Worker is not supported in Node.js.");const e=new _api.PDFWorker({name:"test1"}),a=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)(t,{worker:e}));a.promise.then((function(){const t=a._worker;expect(!!t).toEqual(!1);const n=a._transport.messageHandler.comObj;expect(n===e.port).toEqual(!0)}));const n=a.promise.then((function(){return a.destroy()}));await n,expect(e.destroyed).toEqual(!1),e.destroy()})),it("creates more than one worker",(async function(){_is_node.isNodeJS&&pending("Worker is not supported in Node.js.");const t=new _api.PDFWorker({name:"test1"}),e=new _api.PDFWorker({name:"test2"}),a=new _api.PDFWorker({name:"test3"});await Promise.all([t.promise,e.promise,a.promise]),expect(t.port!==e.port&&t.port!==a.port&&e.port!==a.port).toEqual(!0),t.destroy(),e.destroy(),a.destroy()})),it("gets current workerSrc",(function(){_is_node.isNodeJS&&pending("Worker is not supported in Node.js.");const t=_api.PDFWorker.workerSrc;expect(typeof t).toEqual("string"),expect(t).toEqual(_worker_options.GlobalWorkerOptions.workerSrc)}))})),describe("PDFDocument",(function(){let t,n;beforeAll((async function(){t=(0,_api.getDocument)(a),n=await t.promise})),afterAll((async function(){await t.destroy()})),it("gets number of pages",(function(){expect(n.numPages).toEqual(3)})),it("gets fingerprints",(function(){expect(n.fingerprints).toEqual(["ea8b35919d6279a369e835bde778611b",null])})),it("gets fingerprints, from modified document",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("annotation-tx.pdf")),e=await t.promise;expect(e.fingerprints).toEqual(["3ebd77c320274649a68f10dbf3b9f882","e7087346aa4b4ae0911c1f1643b57345"]),await t.destroy()})),it("gets page",(async function(){const t=await n.getPage(1);expect(t instanceof _api.PDFPageProxy).toEqual(!0),expect(t.pageNumber).toEqual(1)})),it("gets non-existent page",(async function(){let t=n.getPage(100),e=n.getPage(2.5),a=n.getPage("1");t=t.then((function(){throw new Error("shall fail for out-of-range pageNumber parameter")}),(function(t){expect(t instanceof Error).toEqual(!0)})),e=e.then((function(){throw new Error("shall fail for non-integer pageNumber parameter")}),(function(t){expect(t instanceof Error).toEqual(!0)})),a=a.then((function(){throw new Error("shall fail for non-number pageNumber parameter")}),(function(t){expect(t instanceof Error).toEqual(!0)})),await Promise.all([t,e,a])})),it("gets page, from /Pages tree with circular reference",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("Pages-tree-refs.pdf")),e=t.promise.then((function(t){return t.getPage(1).then((function(t){expect(t instanceof _api.PDFPageProxy).toEqual(!0),expect(t.ref).toEqual({num:6,gen:0})}),(function(t){throw new Error("shall not fail for valid page")}))})),a=t.promise.then((function(t){return t.getPage(2).then((function(t){throw new Error("shall fail for invalid page")}),(function(t){expect(t instanceof Error).toEqual(!0),expect(t.message).toEqual("Pages tree contains circular reference.")}))}));await Promise.all([e,a]),await t.destroy()})),it("gets page index",(async function(){const t={num:17,gen:0},e=await n.getPageIndex(t);expect(e).toEqual(1)})),it("gets invalid page index",(async function(){const t={num:3,gen:0};try{await n.getPageIndex(t),expect(!1).toEqual(!0)}catch(e){expect(e instanceof Error).toEqual(!0)}})),it("gets destinations, from /Dests dictionary",(async function(){const t=await n.getDestinations();expect(t).toEqual({chapter1:[{gen:0,num:17},{name:"XYZ"},0,841.89,null]})})),it("gets a destination, from /Dests dictionary",(async function(){const t=await n.getDestination("chapter1");expect(t).toEqual([{gen:0,num:17},{name:"XYZ"},0,841.89,null])})),it("gets a non-existent destination, from /Dests dictionary",(async function(){const t=await n.getDestination("non-existent-named-destination");expect(t).toEqual(null)})),it("gets destinations, from /Names (NameTree) dictionary",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue6204.pdf")),e=await t.promise,a=await e.getDestinations();expect(a).toEqual({"Page.1":[{num:1,gen:0},{name:"XYZ"},0,375,null],"Page.2":[{num:6,gen:0},{name:"XYZ"},0,375,null]}),await t.destroy()})),it("gets a destination, from /Names (NameTree) dictionary",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue6204.pdf")),e=await t.promise,a=await e.getDestination("Page.1");expect(a).toEqual([{num:1,gen:0},{name:"XYZ"},0,375,null]),await t.destroy()})),it("gets a non-existent destination, from /Names (NameTree) dictionary",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue6204.pdf")),e=await t.promise,a=await e.getDestination("non-existent-named-destination");expect(a).toEqual(null),await t.destroy()})),it("gets a destination, from out-of-order /Names (NameTree) dictionary (issue 10272)",(async function(){_is_node.isNodeJS&&pending("Linked test-cases are not supported in Node.js.");const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue10272.pdf")),e=await t.promise,a=await e.getDestination("link_1");expect(a).toEqual([{num:17,gen:0},{name:"XYZ"},69,125,0]),await t.destroy()})),it("gets non-string destination",(async function(){let t=n.getDestination(4.3),e=n.getDestination(!0),a=n.getDestination([{num:17,gen:0},{name:"XYZ"},0,841.89,null]);t=t.then((function(){throw new Error("shall fail for non-string destination.")}),(function(t){expect(t instanceof Error).toEqual(!0)})),e=e.then((function(){throw new Error("shall fail for non-string destination.")}),(function(t){expect(t instanceof Error).toEqual(!0)})),a=a.then((function(){throw new Error("shall fail for non-string destination.")}),(function(t){expect(t instanceof Error).toEqual(!0)})),await Promise.all([t,e,a])})),it("gets non-existent page labels",(async function(){const t=await n.getPageLabels();expect(t).toEqual(null)})),it("gets page labels",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("bug793632.pdf")),e=t.promise.then((function(t){return t.getPageLabels()})),a=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue1453.pdf")),n=a.promise.then((function(t){return t.getPageLabels()})),o=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("rotation.pdf")),i=o.promise.then((function(t){return t.getPageLabels()})),s=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("bad-PageLabels.pdf")),c=s.promise.then((function(t){return t.getPageLabels()})),r=await Promise.all([e,n,i,c]);expect(r[0]).toEqual(["i","ii","iii","1"]),expect(r[1]).toEqual(["Front Page1"]),expect(r[2]).toEqual(["1","2"]),expect(r[3]).toEqual(["X3"]),await Promise.all([t.destroy(),a.destroy(),o.destroy(),s.destroy()])})),it("gets default page layout",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("tracemonkey.pdf")),e=await t.promise,a=await e.getPageLayout();expect(a).toEqual(""),await t.destroy()})),it("gets non-default page layout",(async function(){const t=await n.getPageLayout();expect(t).toEqual("SinglePage")})),it("gets default page mode",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("tracemonkey.pdf")),e=await t.promise,a=await e.getPageMode();expect(a).toEqual("UseNone"),await t.destroy()})),it("gets non-default page mode",(async function(){const t=await n.getPageMode();expect(t).toEqual("UseOutlines")})),it("gets default viewer preferences",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("tracemonkey.pdf")),e=await t.promise,a=await e.getViewerPreferences();expect(a).toEqual(null),await t.destroy()})),it("gets non-default viewer preferences",(async function(){const t=await n.getViewerPreferences();expect(t).toEqual({Direction:"L2R"})})),it("gets default open action",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("tracemonkey.pdf")),e=await t.promise,a=await e.getOpenAction();expect(a).toEqual(null),await t.destroy()})),it("gets non-default open action (with destination)",(async function(){const t=await n.getOpenAction();expect(t.dest).toEqual([{num:15,gen:0},{name:"FitH"},null]),expect(t.action).toBeUndefined()})),it("gets non-default open action (with Print action)",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("bug1001080.pdf")),e=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue11442_reduced.pdf")),a=t.promise.then((function(t){return t.getOpenAction()})).then((function(e){return expect(e.dest).toBeUndefined(),expect(e.action).toEqual("Print"),t.destroy()})),n=e.promise.then((function(t){return t.getOpenAction()})).then((function(t){return expect(t.dest).toBeUndefined(),expect(t.action).toEqual("Print"),e.destroy()}));await Promise.all([a,n])})),it("gets non-existent attachments",(async function(){const t=await n.getAttachments();expect(t).toEqual(null)})),it("gets attachments",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("attachment.pdf")),e=await t.promise,a=await e.getAttachments(),n=a["foo.txt"];expect(n.filename).toEqual("foo.txt"),expect(n.content).toEqual(new Uint8Array([98,97,114,32,98,97,122,32,10])),await t.destroy()})),it("gets javascript",(async function(){const t=await n.getJavaScript();expect(t).toEqual(null)})),it("gets javascript with printing instructions (JS action)",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue6106.pdf")),e=await t.promise,a=await e.getJavaScript();expect(a).toEqual(["this.print({bUI:true,bSilent:false,bShrinkToFit:true});"]),expect(a[0]).toMatch(_ui_utils.AutoPrintRegExp),await t.destroy()})),it("gets hasJSActions, in document without javaScript",(async function(){const t=await n.hasJSActions();expect(t).toEqual(!1)})),it("gets hasJSActions, in document with javaScript",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("doc_actions.pdf")),e=await t.promise,a=await e.hasJSActions();expect(a).toEqual(!0),await t.destroy()})),it("gets non-existent JSActions",(async function(){const t=await n.getJSActions();expect(t).toEqual(null)})),it("gets JSActions",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("doc_actions.pdf")),e=await t.promise,a=await e.getJSActions(),n=await e.getPage(1),o=await n.getJSActions(),i=await e.getPage(3),s=await i.getJSActions();expect(a).toEqual({DidPrint:['this.getField("Text2").value = "DidPrint";'],DidSave:['this.getField("Text2").value = "DidSave";'],WillClose:['this.getField("Text1").value = "WillClose";'],WillPrint:['this.getField("Text1").value = "WillPrint";'],WillSave:['this.getField("Text1").value = "WillSave";']}),expect(o).toEqual({PageOpen:['this.getField("Text1").value = "PageOpen 1";'],PageClose:['this.getField("Text2").value = "PageClose 1";']}),expect(s).toEqual({PageOpen:['this.getField("Text5").value = "PageOpen 3";'],PageClose:['this.getField("Text6").value = "PageClose 3";']}),await t.destroy()})),it("gets non-existent outline",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("tracemonkey.pdf")),e=await t.promise,a=await e.getOutline();expect(a).toEqual(null),await t.destroy()})),it("gets outline",(async function(){const t=await n.getOutline();expect(Array.isArray(t)).toEqual(!0),expect(t.length).toEqual(2);const e=t[1];expect(e.title).toEqual("Chapter 1"),expect(Array.isArray(e.dest)).toEqual(!0),expect(e.url).toEqual(null),expect(e.unsafeUrl).toBeUndefined(),expect(e.newWindow).toBeUndefined(),expect(e.bold).toEqual(!0),expect(e.italic).toEqual(!1),expect(e.color).toEqual(new Uint8ClampedArray([0,64,128])),expect(e.items.length).toEqual(1),expect(e.items[0].title).toEqual("Paragraph 1.1")})),it("gets outline containing a URL",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue3214.pdf")),e=await t.promise,a=await e.getOutline();expect(Array.isArray(a)).toEqual(!0),expect(a.length).toEqual(5);const n=a[2];expect(typeof n.title).toEqual("string"),expect(n.dest).toEqual(null),expect(n.url).toEqual("http://google.com/"),expect(n.unsafeUrl).toEqual("http://google.com"),expect(n.newWindow).toBeUndefined();const o=a[1];expect(o.bold).toEqual(!1),expect(o.italic).toEqual(!0),expect(o.color).toEqual(new Uint8ClampedArray([0,0,0])),await t.destroy()})),it("gets non-existent permissions",(async function(){const t=await n.getPermissions();expect(t).toEqual(null)})),it("gets permissions",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue9972-1.pdf")),e=t.promise.then((function(t){return t.getPermissions()})),a=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue9972-2.pdf")),n=a.promise.then((function(t){return t.getPermissions()})),o=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue9972-3.pdf")),i=o.promise.then((function(t){return t.getPermissions()})),s=Object.keys(_util.PermissionFlag).length,c=await Promise.all([e,n,i]);expect(c[0].length).toEqual(s-1),expect(c[0].includes(_util.PermissionFlag.MODIFY_CONTENTS)).toBeFalsy(),expect(c[1].length).toEqual(s-2),expect(c[1].includes(_util.PermissionFlag.PRINT)).toBeFalsy(),expect(c[1].includes(_util.PermissionFlag.PRINT_HIGH_QUALITY)).toBeFalsy(),expect(c[2].length).toEqual(s-1),expect(c[2].includes(_util.PermissionFlag.COPY)).toBeFalsy(),await Promise.all([t.destroy(),a.destroy(),o.destroy()])})),it("gets metadata",(async function(){const{info:t,metadata:a,contentDispositionFilename:o,contentLength:i}=await n.getMetadata();expect(t.Title).toEqual("Basic API Test"),expect(t.Custom).toEqual(void 0),expect(t.PDFFormatVersion).toEqual("1.7"),expect(t.IsLinearized).toEqual(!1),expect(t.IsAcroFormPresent).toEqual(!1),expect(t.IsXFAPresent).toEqual(!1),expect(t.IsCollectionPresent).toEqual(!1),expect(t.IsSignaturesPresent).toEqual(!1),expect(a instanceof _metadata.Metadata).toEqual(!0),expect(a.get("dc:title")).toEqual("Basic API Test"),expect(o).toEqual(null),expect(i).toEqual(e)})),it("gets metadata, with custom info dict entries",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("tracemonkey.pdf")),e=await t.promise,{info:a,metadata:n,contentDispositionFilename:o,contentLength:i}=await e.getMetadata();expect(a.Creator).toEqual("TeX"),expect(a.Producer).toEqual("pdfeTeX-1.21a"),expect(a.CreationDate).toEqual("D:20090401163925-07'00'");const s=a.Custom;expect("object"===typeof s&&null!==s).toEqual(!0),expect(s["PTEX.Fullbanner"]).toEqual("This is pdfeTeX, Version 3.141592-1.21a-2.2 (Web2C 7.5.4) kpathsea version 3.5.6"),expect(a.PDFFormatVersion).toEqual("1.4"),expect(a.IsLinearized).toEqual(!1),expect(a.IsAcroFormPresent).toEqual(!1),expect(a.IsXFAPresent).toEqual(!1),expect(a.IsCollectionPresent).toEqual(!1),expect(a.IsSignaturesPresent).toEqual(!1),expect(n).toEqual(null),expect(o).toEqual(null),expect(i).toEqual(1016315),await t.destroy()})),it("gets metadata, with missing PDF header (bug 1606566)",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("bug1606566.pdf")),e=await t.promise,{info:a,metadata:n,contentDispositionFilename:o,contentLength:i}=await e.getMetadata();expect(a.PDFFormatVersion).toEqual(null),expect(a.IsLinearized).toEqual(!1),expect(a.IsAcroFormPresent).toEqual(!1),expect(a.IsXFAPresent).toEqual(!1),expect(a.IsCollectionPresent).toEqual(!1),expect(a.IsSignaturesPresent).toEqual(!1),expect(n).toEqual(null),expect(o).toEqual(null),expect(i).toEqual(624),await t.destroy()})),it("gets markInfo",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("annotation-line.pdf")),e=await t.promise,a=await e.getMarkInfo();expect(a.Marked).toEqual(!0),expect(a.UserProperties).toEqual(!1),expect(a.Suspects).toEqual(!1)})),it("gets data",(async function(){const t=await n.getData();expect(t instanceof Uint8Array).toEqual(!0),expect(t.length).toEqual(e)})),it("gets download info",(async function(){const t=await n.getDownloadInfo();expect(t).toEqual({length:e})})),it("gets document stats",(async function(){const t=await n.getStats();expect(t).toEqual({streamTypes:{},fontTypes:{}})})),it("cleans up document resources",(async function(){await n.cleanup(),expect(!0).toEqual(!0)})),it("checks that fingerprints are unique",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue4436r.pdf")),e=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue4575.pdf")),a=await Promise.all([t.promise,e.promise]),n=a[0].fingerprints,o=a[1].fingerprints;expect(n).not.toEqual(o),expect(n).toEqual(["2f695a83d6e7553c24fc08b7ac69712d",null]),expect(o).toEqual(["04c7126b34a46b6d4d6e7a1eff7edcb6",null]),await Promise.all([t.destroy(),e.destroy()])})),it("write a value in an annotation, save the pdf and load it",(async function(){let t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("evaljs.pdf")),e=await t.promise;const a="Hello World";e.annotationStorage.setValue("55R",{value:a});const n=await e.saveDocument();await t.destroy(),t=(0,_api.getDocument)(n),e=await t.promise;const o=await e.getPage(1),i=await o.getAnnotations(),s=i.find((t=>"55R"===t.id));expect(!!s).toEqual(!0),expect(s.fieldValue).toEqual(a),await t.destroy()})),describe("Cross-origin",(function(){let t;function e(e,a,n){_is_node.isNodeJS&&pending("Cannot simulate cross-origin requests in Node.js");const o=(0,_test_utils.buildGetDocumentParams)(a,n),i=new URL(o.url);return"localhost"===i.hostname?i.hostname="127.0.0.1":"127.0.0.1"===o.url.hostname?i.hostname="localhost":pending("Can only run cross-origin test on localhost!"),o.url=i.href,t=(0,_api.getDocument)(o),t.promise.then((function(t){return t.destroy()})).then((function(){expect(e).toEqual(!0)}),(function(t){e&&expect(t).toEqual("There should not be any error"),expect(e).toEqual(!1)}))}function a(t,a){return e(!0,t,a)}function n(t,a){return e(!1,t,a)}afterEach((async function(){t&&!t.destroyed&&await t.destroy()})),it("server disallows cors",(async function(){await n("basicapi.pdf")})),it("server allows cors without credentials, default withCredentials",(async function(){await a("basicapi.pdf?cors=withoutCredentials")})),it("server allows cors without credentials, and withCredentials=false",(async function(){await a("basicapi.pdf?cors=withoutCredentials",{withCredentials:!1})})),it("server allows cors without credentials, but withCredentials=true",(async function(){await n("basicapi.pdf?cors=withoutCredentials",{withCredentials:!0})})),it("server allows cors with credentials, and withCredentials=true",(async function(){await a("basicapi.pdf?cors=withCredentials",{withCredentials:!0})})),it("server allows cors with credentials, and withCredentials=false",(async function(){await a("basicapi.pdf?cors=withCredentials",{withCredentials:!1})}))}))})),describe("Page",(function(){let e,i,s;beforeAll((async function(){e=(0,_api.getDocument)(a),i=await e.promise,s=await i.getPage(1)})),afterAll((async function(){await e.destroy()})),it("gets page number",(function(){expect(s.pageNumber).toEqual(1)})),it("gets rotate",(function(){expect(s.rotate).toEqual(0)})),it("gets ref",(function(){expect(s.ref).toEqual({num:15,gen:0})})),it("gets userUnit",(function(){expect(s.userUnit).toEqual(1)})),it("gets view",(function(){expect(s.view).toEqual([0,0,595.28,841.89])})),it("gets view, with empty/invalid bounding boxes",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("boundingBox_invalid.pdf")),e=await t.promise,a=e.numPages;expect(a).toEqual(3);const n=[];for(let c=0;c<a;c++)n[c]=e.getPage(c+1).then((t=>t.view));const[o,i,s]=await Promise.all(n);expect(o).toEqual([0,0,612,792]),expect(i).toEqual([0,0,800,600]),expect(s).toEqual([0,0,600,800]),await t.destroy()})),it("gets viewport",(function(){const t=s.getViewport({scale:1.5,rotation:90});expect(t.viewBox).toEqual(s.view),expect(t.scale).toEqual(1.5),expect(t.rotation).toEqual(90),expect(t.transform).toEqual([0,1.5,1.5,0,0,0]),expect(t.width).toEqual(1262.835),expect(t.height).toEqual(892.92)})),it('gets viewport with "offsetX/offsetY" arguments',(function(){const t=s.getViewport({scale:1,rotation:0,offsetX:100,offsetY:-100});expect(t.transform).toEqual([1,0,0,-1,100,741.89])})),it('gets viewport respecting "dontFlip" argument',(function(){const t=1,e=0,a=s.getViewport({scale:t,rotation:e}),n=s.getViewport({scale:t,rotation:e,dontFlip:!0});expect(n).not.toEqual(a),expect(n).toEqual(a.clone({dontFlip:!0})),expect(a.transform).toEqual([1,0,0,-1,0,841.89]),expect(n.transform).toEqual([1,0,-0,1,0,0])})),it("gets viewport with invalid rotation",(function(){expect((function(){s.getViewport({scale:1,rotation:45})})).toThrow(new Error("PageViewport: Invalid rotation, must be a multiple of 90 degrees."))})),it("gets annotations",(async function(){const t=s.getAnnotations().then((function(t){expect(t.length).toEqual(4)})),e=s.getAnnotations({intent:"any"}).then((function(t){expect(t.length).toEqual(4)})),a=s.getAnnotations({intent:"display"}).then((function(t){expect(t.length).toEqual(4)})),n=s.getAnnotations({intent:"print"}).then((function(t){expect(t.length).toEqual(4)}));await Promise.all([t,e,a,n])})),it("gets annotations containing relative URLs (bug 766086)",(async function(){const t="bug766086.pdf",e=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)(t)),a=e.promise.then((function(t){return t.getPage(1).then((function(t){return t.getAnnotations()}))})),n=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)(t,{docBaseUrl:"http://www.example.com/test/pdfs/qwerty.pdf"})),o=n.promise.then((function(t){return t.getPage(1).then((function(t){return t.getAnnotations()}))})),i=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)(t,{docBaseUrl:"qwerty.pdf"})),s=i.promise.then((function(t){return t.getPage(1).then((function(t){return t.getAnnotations()}))})),[c,r,u]=await Promise.all([a,o,s]);expect(c[0].url).toBeUndefined(),expect(c[0].unsafeUrl).toEqual("../../0021/002156/215675E.pdf#15"),expect(r[0].url).toEqual("http://www.example.com/0021/002156/215675E.pdf#15"),expect(r[0].unsafeUrl).toEqual("../../0021/002156/215675E.pdf#15"),expect(u[0].url).toBeUndefined(),expect(u[0].unsafeUrl).toEqual("../../0021/002156/215675E.pdf#15"),await Promise.all([e.destroy(),n.destroy(),i.destroy()])})),it("gets text content",(async function(){const t=s.getTextContent(),e=s.getTextContent({normalizeWhitespace:!0,disableCombineTextItems:!0}),a=await Promise.all([t,e]);expect(!!a[0].items).toEqual(!0),expect(a[0].items.length).toEqual(12),expect(!!a[0].styles).toEqual(!0),expect(!!a[1].items).toEqual(!0),expect(a[1].items.length).toEqual(7),expect(!!a[1].styles).toEqual(!0)})),it("gets text content, with correct properties (issue 8276)",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue8276_reduced.pdf")),e=await t.promise,a=await e.getPage(1),{items:n,styles:o}=await a.getTextContent();expect(n.length).toEqual(1);const i=n[0].fontName;expect(Object.keys(o)).toEqual([i]),expect(n[0]).toEqual({dir:"ltr",fontName:i,height:18,str:"Issue 8276",transform:[18,0,0,18,441.81,708.4499999999999],width:77.49,hasEOL:!1}),expect(o[i]).toEqual({fontFamily:"serif",ascent:NaN,descent:NaN,vertical:!1}),await t.destroy()})),it("gets empty structure tree",(async function(){const t=await s.getStructTree();expect(t).toEqual(null)})),it("gets simple structure tree",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("structure_simple.pdf")),e=await t.promise,a=await e.getPage(1),n=await a.getStructTree();expect(n).toEqual({role:"Root",children:[{role:"Document",children:[{role:"H1",children:[{role:"NonStruct",children:[{type:"content",id:"page2R_mcid0"}]}]},{role:"P",children:[{role:"NonStruct",children:[{type:"content",id:"page2R_mcid1"}]}]},{role:"H2",children:[{role:"NonStruct",children:[{type:"content",id:"page2R_mcid2"}]}]},{role:"P",children:[{role:"NonStruct",children:[{type:"content",id:"page2R_mcid3"}]}]}]}]}),await t.destroy()})),it("gets operator list",(async function(){const t=await s.getOperatorList();expect(t.fnArray.length).toBeGreaterThan(100),expect(t.argsArray.length).toBeGreaterThan(100),expect(t.lastChunk).toEqual(!0)})),it("gets operatorList with JPEG image (issue 4888)",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("cmykjpeg.pdf")),e=await t.promise,a=await e.getPage(1),n=await a.getOperatorList(),o=n.fnArray.indexOf(_util.OPS.paintImageXObject),i=n.argsArray[o],{data:s}=a.objs.get(i[0]);expect(s instanceof Uint8ClampedArray).toEqual(!0),expect(s.length).toEqual(9e4),await t.destroy()})),it("gets operatorList, from corrupt PDF file (issue 8702), with/without `stopAtErrors` set",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue8702.pdf",{stopAtErrors:!1})),e=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue8702.pdf",{stopAtErrors:!0})),a=t.promise.then((e=>e.getPage(1).then((e=>e.getOperatorList().then((e=>(expect(e.fnArray.length).toBeGreaterThan(100),expect(e.argsArray.length).toBeGreaterThan(100),expect(e.lastChunk).toEqual(!0),t.destroy()))))))),n=e.promise.then((t=>t.getPage(1).then((t=>t.getOperatorList().then((t=>(expect(t.fnArray.length).toEqual(0),expect(t.argsArray.length).toEqual(0),expect(t.lastChunk).toEqual(!0),e.destroy())))))));await Promise.all([a,n])})),it("gets operator list, containing Annotation-operatorLists",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("annotation-line.pdf")),e=await t.promise,a=await e.getPage(1),n=await a.getOperatorList();expect(n.fnArray.length).toBeGreaterThan(20),expect(n.argsArray.length).toBeGreaterThan(20),expect(n.lastChunk).toEqual(!0),expect(n.fnArray.includes(_util.OPS.beginAnnotation)).toEqual(!0),expect(n.fnArray.includes(_util.OPS.endAnnotation)).toEqual(!0),await t.destroy()})),it("gets operator list, with `annotationMode`-option",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("evaljs.pdf")),e=await t.promise,a=await e.getPage(2);e.annotationStorage.setValue("30R",{value:"test"}),e.annotationStorage.setValue("31R",{value:!0});const n=await a.getOperatorList({annotationMode:_util.AnnotationMode.DISABLE});expect(n.fnArray.length).toEqual(0),expect(n.argsArray.length).toEqual(0),expect(n.lastChunk).toEqual(!0);const o=await a.getOperatorList({annotationMode:_util.AnnotationMode.ENABLE});expect(o.fnArray.length).toBeGreaterThan(150),expect(o.argsArray.length).toBeGreaterThan(150),expect(o.lastChunk).toEqual(!0);const i=await a.getOperatorList({annotationMode:_util.AnnotationMode.ENABLE_FORMS});expect(i.fnArray.length).toBeGreaterThan(40),expect(i.argsArray.length).toBeGreaterThan(40),expect(i.lastChunk).toEqual(!0);const s=await a.getOperatorList({annotationMode:_util.AnnotationMode.ENABLE_STORAGE});expect(s.fnArray.length).toBeGreaterThan(170),expect(s.argsArray.length).toBeGreaterThan(170),expect(s.lastChunk).toEqual(!0),expect(n.fnArray.length).toBeLessThan(i.fnArray.length),expect(i.fnArray.length).toBeLessThan(o.fnArray.length),expect(o.fnArray.length).toBeLessThan(s.fnArray.length),await t.destroy()})),it("gets document stats after parsing page",(async function(){const t=await s.getOperatorList().then((function(){return i.getStats()})),e={};e[_util.StreamType.FLATE]=!0;const a={};a[_util.FontType.TYPE1STANDARD]=!0,a[_util.FontType.CIDFONTTYPE2]=!0,expect(t).toEqual({streamTypes:e,fontTypes:a})})),it("gets page stats after parsing page, without `pdfBug` set",(async function(){await s.getOperatorList(),expect(s.stats).toEqual(null)})),it("gets page stats after parsing page, with `pdfBug` set",(async function(){const e=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)(t,{pdfBug:!0})),a=await e.promise,n=await a.getPage(1);await n.getOperatorList();const o=n.stats;expect(o instanceof _display_utils.StatTimer).toEqual(!0),expect(o.times.length).toEqual(1);const[i]=o.times;expect(i.name).toEqual("Page Request"),expect(i.end-i.start).toBeGreaterThanOrEqual(0),await e.destroy()})),it("gets page stats after rendering page, with `pdfBug` set",(async function(){const e=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)(t,{pdfBug:!0})),a=await e.promise,o=await a.getPage(1),i=o.getViewport({scale:1}),s=n.create(i.width,i.height),c=o.render({canvasContext:s.context,canvasFactory:n,viewport:i});expect(c instanceof _api.RenderTask).toEqual(!0),await c.promise;const r=o.stats;expect(r instanceof _display_utils.StatTimer).toEqual(!0),expect(r.times.length).toEqual(3);const[u,l,p]=r.times;expect(u.name).toEqual("Page Request"),expect(u.end-u.start).toBeGreaterThanOrEqual(0),expect(l.name).toEqual("Rendering"),expect(l.end-l.start).toBeGreaterThan(0),expect(p.name).toEqual("Overall"),expect(p.end-p.start).toBeGreaterThan(0),n.destroy(s),await e.destroy()})),it("cancels rendering of page",(async function(){const t=s.getViewport({scale:1}),e=n.create(t.width,t.height),a=s.render({canvasContext:e.context,canvasFactory:n,viewport:t});expect(a instanceof _api.RenderTask).toEqual(!0),a.cancel();try{await a.promise,expect(!1).toEqual(!0)}catch(o){expect(o instanceof _display_utils.RenderingCancelledException).toEqual(!0),expect(o.message).toEqual("Rendering cancelled, page 1"),expect(o.type).toEqual("canvas")}n.destroy(e)})),it("re-render page, using the same canvas, after cancelling rendering",(async function(){const t=s.getViewport({scale:1}),e=n.create(t.width,t.height),a=s.render({canvasContext:e.context,canvasFactory:n,viewport:t});expect(a instanceof _api.RenderTask).toEqual(!0),a.cancel();try{await a.promise,expect(!1).toEqual(!0)}catch(i){expect(i instanceof _display_utils.RenderingCancelledException).toEqual(!0)}const o=s.render({canvasContext:e.context,canvasFactory:n,viewport:t});expect(o instanceof _api.RenderTask).toEqual(!0),await o.promise,n.destroy(e)})),it("multiple render() on the same canvas",(async function(){const t=i.getOptionalContentConfig(),e=s.getViewport({scale:1}),a=n.create(e.width,e.height),o=s.render({canvasContext:a.context,canvasFactory:n,viewport:e,optionalContentConfigPromise:t});expect(o instanceof _api.RenderTask).toEqual(!0);const c=s.render({canvasContext:a.context,canvasFactory:n,viewport:e,optionalContentConfigPromise:t});expect(c instanceof _api.RenderTask).toEqual(!0),await Promise.all([o.promise,c.promise.then((()=>{expect(!1).toEqual(!0)}),(t=>{expect(/multiple render\(\)/.test(t.message)).toEqual(!0)}))])})),it("cleans up document resources after rendering of page",(async function(){const e=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)(t)),a=await e.promise,o=await a.getPage(1),i=o.getViewport({scale:1}),s=n.create(i.width,i.height),c=o.render({canvasContext:s.context,canvasFactory:n,viewport:i});expect(c instanceof _api.RenderTask).toEqual(!0),await c.promise,await a.cleanup(),expect(!0).toEqual(!0),n.destroy(s),await e.destroy()})),it("cleans up document resources during rendering of page",(async function(){const t=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("tracemonkey.pdf")),e=await t.promise,a=await e.getPage(1),i=a.getViewport({scale:1}),s=n.create(i.width,i.height),c=a.render({canvasContext:s.context,canvasFactory:n,viewport:i});expect(c instanceof _api.RenderTask).toEqual(!0),c.onContinue=function(t){o(t)};try{await e.cleanup(),expect(!1).toEqual(!0)}catch(r){expect(r instanceof Error).toEqual(!0),expect(r.message).toEqual("startCleanup: Page 1 is currently rendering.")}await c.promise,n.destroy(s),await t.destroy()})),it("caches image resources at the document/page level as expected (issue 11878)",(async function(){const{NUM_PAGES_THRESHOLD:t}=_image_utils.GlobalImageCache,e=2550,a=3300,n=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("issue11878.pdf")),o=await n.promise;let i=null;for(let s=1;s<=o.numPages;s++){const c=await o.getPage(s),r=await c.getOperatorList(),{commonObjs:u,objs:l}=c,p=r.fnArray.indexOf(_util.OPS.paintImageXObject),[d,g,m]=r.argsArray[p];if(s<t?(expect(d).toEqual(`img_p${s-1}_1`),expect(l.has(d)).toEqual(!0),expect(u.has(d)).toEqual(!1)):(expect(d).toEqual(`g_${n.docId}_img_p${t-1}_1`),expect(l.has(d)).toEqual(!1),expect(u.has(d)).toEqual(!0)),expect(g).toEqual(e),expect(m).toEqual(a),1===s)i=l.get(d),expect(i.width).toEqual(e),expect(i.height).toEqual(a),expect(i.kind).toEqual(_util.ImageKind.RGB_24BPP),expect(i.data instanceof Uint8ClampedArray).toEqual(!0),expect(i.data.length).toEqual(25245e3);else{const e=s>=t?u:l,a=e.get(d);expect(a.width).toEqual(i.width),expect(a.height).toEqual(i.height),expect(a.kind).toEqual(i.kind),expect(a.data instanceof Uint8ClampedArray).toEqual(!0),expect(a.data.every(((t,e)=>t===i.data[e]))).toEqual(!0)}}await n.destroy(),i=null}))})),describe("Multiple `getDocument` instances",(function(){const t=(0,_test_utils.buildGetDocumentParams)("tracemonkey.pdf"),e=(0,_test_utils.buildGetDocumentParams)("TAMReview.pdf"),a=(0,_test_utils.buildGetDocumentParams)("issue6068.pdf"),o=[];async function i(t){const e=(0,_api.getDocument)(t);o.push(e);const a=await e.promise,i=await a.getPage(1),s=i.getViewport({scale:1.2}),c=n.create(s.width,s.height),r=i.render({canvasContext:c.context,canvasFactory:n,viewport:s});await r.promise;const u=c.canvas.toDataURL();return n.destroy(c),u}afterEach((async function(){const t=o.map((function(t){return t.destroy()}));await Promise.all(t)})),it("should correctly render PDFs in parallel",(async function(){let n,o,s;const c=i(t).then((function(t){return n=t,i(e)})).then((function(t){return o=t,i(a)})).then((function(n){return s=n,Promise.all([i(t),i(e),i(a)])})).then((function(t){return expect(t[0]).toEqual(n),expect(t[1]).toEqual(o),expect(t[2]).toEqual(s),!0}));await c}))})),describe("PDFDataRangeTransport",(function(){let t;beforeAll((function(){const e="tracemonkey.pdf";t=_test_utils.DefaultFileReaderFactory.fetch({path:_test_utils.TEST_PDFS_PATH+e})})),afterAll((function(){t=null})),it("should fetch document info and page using ranges",(async function(){const e=4e3;let a=0;const n=await t,i=n.subarray(0,e),s=new _api.PDFDataRangeTransport(n.length,i);s.requestDataRange=function(t,e){a++,o((function(){s.onDataProgress(4e3),s.onDataRange(t,n.subarray(t,e))}))};const c=(0,_api.getDocument)(s),r=await c.promise;expect(r.numPages).toEqual(14);const u=await r.getPage(10);expect(u.rotate).toEqual(0),expect(a).toBeGreaterThan(2),await c.destroy()})),it("should fetch document info and page using range and streaming",(async function(){const e=4e3;let a=0;const n=await t,i=n.subarray(0,e),s=new _api.PDFDataRangeTransport(n.length,i);s.requestDataRange=function(t,i){a++,1===a&&s.onDataProgressiveRead(n.subarray(e)),o((function(){s.onDataRange(t,n.subarray(t,i))}))};const c=(0,_api.getDocument)(s),r=await c.promise;expect(r.numPages).toEqual(14);const u=await r.getPage(10);expect(u.rotate).toEqual(0),expect(a).toEqual(1),await new Promise((t=>{o(t)})),await c.destroy()})),it("should fetch document info and page, without range, using complete initialData",(async function(){let e=0;const a=await t,n=new _api.PDFDataRangeTransport(a.length,a,!0);n.requestDataRange=function(t,a){e++};const o=(0,_api.getDocument)({disableRange:!0,range:n}),i=await o.promise;expect(i.numPages).toEqual(14);const s=await i.getPage(10);expect(s.rotate).toEqual(0),expect(e).toEqual(0),await o.destroy()}))}))}));