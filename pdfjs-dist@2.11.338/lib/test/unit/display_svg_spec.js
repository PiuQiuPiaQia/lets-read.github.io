"use strict";var _test_utils=require("./test_utils.js"),_api=require("../../display/api.js"),_is_node=require("../../shared/is_node.js"),_svg=require("../../display/svg.js");const XLINK_NS="http://www.w3.org/1999/xlink";function withZlib(e,t){if(e){if(!_is_node.isNodeJS)throw new Error("zlib test can only be run in Node.js");return t()}if(!_is_node.isNodeJS)return t();const i=require("zlib"),n=i.deflateSync;function o(){throw new Error("zlib.deflateSync is explicitly disabled for testing.")}function s(){i.deflateSync===o&&(i.deflateSync=n)}i.deflateSync=o;const r=t();return r.then(s,s),r}describe("SVGGraphics",(function(){let e,t;beforeAll((async function(){e=(0,_api.getDocument)((0,_test_utils.buildGetDocumentParams)("xobject-image.pdf"));const i=await e.promise;t=await i.getPage(1)})),afterAll((async function(){await e.destroy()})),describe("paintImageXObject",(function(){function e(){let e;return t.getOperatorList().then((function(i){const n=!0;return e=new _svg.SVGGraphics(t.commonObjs,t.objs,n),e.loadDependencies(i)})).then((function(){let t;const i={appendChild(e){t=e}},n="img_p0_1";if(_is_node.isNodeJS){const{setStubs:e}=require("../../examples/node/domstubs.js");e(global)}try{const t=e.objs.get(n);e.paintInlineImageXObject(t,i)}finally{if(_is_node.isNodeJS){const{unsetStubs:e}=require("../../examples/node/domstubs.js");e(global)}}return t}))}it('should fail require("zlib") unless in Node.js',(function(){function e(){require("zlib")}_is_node.isNodeJS?(expect(e.toString()).toMatch(/\srequire\(["']zlib["']\)/),expect(e).not.toThrow()):expect(e).toThrow()})),it("should produce a reasonably small svg:image",(async function(){_is_node.isNodeJS||pending("zlib.deflateSync is not supported in non-Node environments.");const t=await withZlib(!0,e);expect(t.nodeName).toBe("svg:image"),expect(t.getAttributeNS(null,"width")).toBe("200px"),expect(t.getAttributeNS(null,"height")).toBe("100px");const i=t.getAttributeNS(XLINK_NS,"href");expect(i).toMatch(/^data:image\/png;base64,/),expect(i.length).toBeLessThan(367)})),it("should be able to produce a svg:image without zlib",(async function(){const t=await withZlib(!1,e);expect(t.nodeName).toBe("svg:image"),expect(t.getAttributeNS(null,"width")).toBe("200px"),expect(t.getAttributeNS(null,"height")).toBe("100px");const i=t.getAttributeNS(XLINK_NS,"href");expect(i).toMatch(/^data:image\/png;base64,/),expect(i.length).toBe(80246)}))}))}));