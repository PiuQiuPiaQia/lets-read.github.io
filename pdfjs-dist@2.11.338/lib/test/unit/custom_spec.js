"use strict";var _api=require("../../display/api.js"),_test_utils=require("./test_utils.js");function getTopLeftPixel(e){const t=e.getImageData(0,0,1,1);return{r:t.data[0],g:t.data[1],b:t.data[2],a:t.data[3]}}describe("custom canvas rendering",(function(){const e=(0,_test_utils.buildGetDocumentParams)("transparent.pdf");let t,a,n;beforeAll((async function(){t=new _api.DefaultCanvasFactory,a=(0,_api.getDocument)(e);const o=await a.promise,s=await o.getPage(1);n=s})),afterAll((async function(){t=null,n=null,await a.destroy()})),it("renders to canvas with a default white background",(async function(){const e=n.getViewport({scale:1}),a=t.create(e.width,e.height),o=n.render({canvasContext:a.context,viewport:e});await o.promise,expect(getTopLeftPixel(a.context)).toEqual({r:255,g:255,b:255,a:255}),t.destroy(a)})),it("renders to canvas with a custom background",(async function(){const e=n.getViewport({scale:1}),a=t.create(e.width,e.height),o=n.render({canvasContext:a.context,viewport:e,background:"rgba(255,0,0,1.0)"});await o.promise,expect(getTopLeftPixel(a.context)).toEqual({r:255,g:0,b:0,a:255}),t.destroy(a)}))})),describe("custom ownerDocument",(function(){const e=globalThis.FontFace,t=e=>/g_d\d+_f1/.test(e.family),a=e=>/^@font-face {font-family:"g_d\d+_f1";src:/.test(e);function n(){const e=[],t=t=>{let a="undefined"!==typeof document&&document.createElement(t);return"style"===t&&(a={tagName:t,sheet:{cssRules:[],insertRule(e){this.cssRules.push(e)}}},Object.assign(a,{remove(){this.remove.called=!0}})),e.push(a),a},a={fonts:new Set,createElement:t,documentElement:{getElementsByTagName:()=>[{appendChild:()=>{}}]}},n=new _api.DefaultCanvasFactory({ownerDocument:a});return{elements:e,ownerDocument:a,CanvasFactory:n}}beforeEach((()=>{globalThis.FontFace=function(e){this.family=e}})),afterEach((()=>{globalThis.FontFace=e})),it("should use given document for loading fonts (with Font Loading API)",(async function(){const{ownerDocument:e,elements:a,CanvasFactory:o}=n(),s=(0,_test_utils.buildGetDocumentParams)("TrueType_without_cmap.pdf",{disableFontFace:!1,ownerDocument:e}),c=(0,_api.getDocument)(s),i=await c.promise,r=await i.getPage(1),u=r.getViewport({scale:1}),l=o.create(u.width,u.height);await r.render({canvasContext:l.context,viewport:u}).promise;const d=a.find((e=>"style"===e.tagName));expect(d).toBeFalsy(),expect(e.fonts.size).toBeGreaterThanOrEqual(1),expect(Array.from(e.fonts).find(t)).toBeTruthy(),await i.destroy(),await c.destroy(),o.destroy(l),expect(e.fonts.size).toBe(0)})),it("should use given document for loading fonts (with CSS rules)",(async function(){const{ownerDocument:e,elements:t,CanvasFactory:o}=n();e.fonts=null;const s=(0,_test_utils.buildGetDocumentParams)("TrueType_without_cmap.pdf",{disableFontFace:!1,ownerDocument:e}),c=(0,_api.getDocument)(s),i=await c.promise,r=await i.getPage(1),u=r.getViewport({scale:1}),l=o.create(u.width,u.height);await r.render({canvasContext:l.context,viewport:u}).promise;const d=t.find((e=>"style"===e.tagName));expect(d.sheet.cssRules.length).toBeGreaterThanOrEqual(1),expect(d.sheet.cssRules.find(a)).toBeTruthy(),await i.destroy(),await c.destroy(),o.destroy(l),expect(d.remove.called).toBe(!0)}))}));