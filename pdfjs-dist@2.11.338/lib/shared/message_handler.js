"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MessageHandler=void 0;var _util=require("./util.js");const CallbackKind={UNKNOWN:0,DATA:1,ERROR:2},StreamKind={UNKNOWN:0,CANCEL:1,CANCEL_COMPLETE:2,CLOSE:3,ENQUEUE:4,ERROR:5,PULL:6,PULL_COMPLETE:7,START_COMPLETE:8};function wrapReason(e){if(!(e instanceof Error||"object"===typeof e&&null!==e))return(0,_util.warn)('wrapReason: Expected "reason" to be a (possibly cloned) Error.'),e;switch(e.name){case"AbortException":return new _util.AbortException(e.message);case"MissingPDFException":return new _util.MissingPDFException(e.message);case"PasswordException":return new _util.PasswordException(e.message,e.code);case"UnexpectedResponseException":return new _util.UnexpectedResponseException(e.message,e.status);case"UnknownErrorException":return new _util.UnknownErrorException(e.message,e.details);default:return new _util.UnknownErrorException(e.message,e.toString())}}class MessageHandler{constructor(e,a,s){this.sourceName=e,this.targetName=a,this.comObj=s,this.callbackId=1,this.streamId=1,this.postMessageTransfers=!0,this.streamSinks=Object.create(null),this.streamControllers=Object.create(null),this.callbackCapabilities=Object.create(null),this.actionHandler=Object.create(null),this._onComObjOnMessage=e=>{const a=e.data;if(a.targetName!==this.sourceName)return;if(a.stream)return void this._processStreamMessage(a);if(a.callback){const e=a.callbackId,s=this.callbackCapabilities[e];if(!s)throw new Error(`Cannot resolve callback ${e}`);if(delete this.callbackCapabilities[e],a.callback===CallbackKind.DATA)s.resolve(a.data);else{if(a.callback!==CallbackKind.ERROR)throw new Error("Unexpected callback case");s.reject(wrapReason(a.reason))}return}const t=this.actionHandler[a.action];if(!t)throw new Error(`Unknown action from worker: ${a.action}`);if(a.callbackId){const e=this.sourceName,r=a.sourceName;new Promise((function(e){e(t(a.data))})).then((function(t){s.postMessage({sourceName:e,targetName:r,callback:CallbackKind.DATA,callbackId:a.callbackId,data:t})}),(function(t){s.postMessage({sourceName:e,targetName:r,callback:CallbackKind.ERROR,callbackId:a.callbackId,reason:wrapReason(t)})}))}else a.streamId?this._createStreamSink(a):t(a.data)},s.addEventListener("message",this._onComObjOnMessage)}on(e,a){const s=this.actionHandler;if(s[e])throw new Error(`There is already an actionName called "${e}"`);s[e]=a}send(e,a,s){this._postMessage({sourceName:this.sourceName,targetName:this.targetName,action:e,data:a},s)}sendWithPromise(e,a,s){const t=this.callbackId++,r=(0,_util.createPromiseCapability)();this.callbackCapabilities[t]=r;try{this._postMessage({sourceName:this.sourceName,targetName:this.targetName,action:e,callbackId:t,data:a},s)}catch(i){r.reject(i)}return r.promise}sendWithStream(e,a,s,t){const r=this.streamId++,i=this.sourceName,n=this.targetName,o=this.comObj;return new ReadableStream({start:s=>{const o=(0,_util.createPromiseCapability)();return this.streamControllers[r]={controller:s,startCall:o,pullCall:null,cancelCall:null,isClosed:!1},this._postMessage({sourceName:i,targetName:n,action:e,streamId:r,data:a,desiredSize:s.desiredSize},t),o.promise},pull:e=>{const a=(0,_util.createPromiseCapability)();return this.streamControllers[r].pullCall=a,o.postMessage({sourceName:i,targetName:n,stream:StreamKind.PULL,streamId:r,desiredSize:e.desiredSize}),a.promise},cancel:e=>{(0,_util.assert)(e instanceof Error,"cancel must have a valid reason");const a=(0,_util.createPromiseCapability)();return this.streamControllers[r].cancelCall=a,this.streamControllers[r].isClosed=!0,o.postMessage({sourceName:i,targetName:n,stream:StreamKind.CANCEL,streamId:r,reason:wrapReason(e)}),a.promise}},s)}_createStreamSink(e){const a=e.streamId,s=this.sourceName,t=e.sourceName,r=this.comObj,i=this,n=this.actionHandler[e.action],o={enqueue(e,r=1,n){if(this.isCancelled)return;const o=this.desiredSize;this.desiredSize-=r,o>0&&this.desiredSize<=0&&(this.sinkCapability=(0,_util.createPromiseCapability)(),this.ready=this.sinkCapability.promise),i._postMessage({sourceName:s,targetName:t,stream:StreamKind.ENQUEUE,streamId:a,chunk:e},n)},close(){this.isCancelled||(this.isCancelled=!0,r.postMessage({sourceName:s,targetName:t,stream:StreamKind.CLOSE,streamId:a}),delete i.streamSinks[a])},error(e){(0,_util.assert)(e instanceof Error,"error must have a valid reason"),this.isCancelled||(this.isCancelled=!0,r.postMessage({sourceName:s,targetName:t,stream:StreamKind.ERROR,streamId:a,reason:wrapReason(e)}))},sinkCapability:(0,_util.createPromiseCapability)(),onPull:null,onCancel:null,isCancelled:!1,desiredSize:e.desiredSize,ready:null};o.sinkCapability.resolve(),o.ready=o.sinkCapability.promise,this.streamSinks[a]=o,new Promise((function(a){a(n(e.data,o))})).then((function(){r.postMessage({sourceName:s,targetName:t,stream:StreamKind.START_COMPLETE,streamId:a,success:!0})}),(function(e){r.postMessage({sourceName:s,targetName:t,stream:StreamKind.START_COMPLETE,streamId:a,reason:wrapReason(e)})}))}_processStreamMessage(e){const a=e.streamId,s=this.sourceName,t=e.sourceName,r=this.comObj,i=this.streamControllers[a],n=this.streamSinks[a];switch(e.stream){case StreamKind.START_COMPLETE:e.success?i.startCall.resolve():i.startCall.reject(wrapReason(e.reason));break;case StreamKind.PULL_COMPLETE:e.success?i.pullCall.resolve():i.pullCall.reject(wrapReason(e.reason));break;case StreamKind.PULL:if(!n){r.postMessage({sourceName:s,targetName:t,stream:StreamKind.PULL_COMPLETE,streamId:a,success:!0});break}n.desiredSize<=0&&e.desiredSize>0&&n.sinkCapability.resolve(),n.desiredSize=e.desiredSize,new Promise((function(e){e(n.onPull&&n.onPull())})).then((function(){r.postMessage({sourceName:s,targetName:t,stream:StreamKind.PULL_COMPLETE,streamId:a,success:!0})}),(function(e){r.postMessage({sourceName:s,targetName:t,stream:StreamKind.PULL_COMPLETE,streamId:a,reason:wrapReason(e)})}));break;case StreamKind.ENQUEUE:if((0,_util.assert)(i,"enqueue should have stream controller"),i.isClosed)break;i.controller.enqueue(e.chunk);break;case StreamKind.CLOSE:if((0,_util.assert)(i,"close should have stream controller"),i.isClosed)break;i.isClosed=!0,i.controller.close(),this._deleteStreamController(i,a);break;case StreamKind.ERROR:(0,_util.assert)(i,"error should have stream controller"),i.controller.error(wrapReason(e.reason)),this._deleteStreamController(i,a);break;case StreamKind.CANCEL_COMPLETE:e.success?i.cancelCall.resolve():i.cancelCall.reject(wrapReason(e.reason)),this._deleteStreamController(i,a);break;case StreamKind.CANCEL:if(!n)break;new Promise((function(a){a(n.onCancel&&n.onCancel(wrapReason(e.reason)))})).then((function(){r.postMessage({sourceName:s,targetName:t,stream:StreamKind.CANCEL_COMPLETE,streamId:a,success:!0})}),(function(e){r.postMessage({sourceName:s,targetName:t,stream:StreamKind.CANCEL_COMPLETE,streamId:a,reason:wrapReason(e)})})),n.sinkCapability.reject(wrapReason(e.reason)),n.isCancelled=!0,delete this.streamSinks[a];break;default:throw new Error("Unexpected stream case")}}async _deleteStreamController(e,a){await Promise.allSettled([e.startCall&&e.startCall.promise,e.pullCall&&e.pullCall.promise,e.cancelCall&&e.cancelCall.promise]),delete this.streamControllers[a]}_postMessage(e,a){a&&this.postMessageTransfers?this.comObj.postMessage(e,a):this.comObj.postMessage(e)}destroy(){this.comObj.removeEventListener("message",this._onComObjOnMessage)}}exports.MessageHandler=MessageHandler;