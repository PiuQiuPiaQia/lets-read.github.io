"use strict";function xmlEncode(t){let e,s=0;t=String(t);while(s<t.length&&"&"!==(e=t[s])&&"<"!==e&&'"'!==e&&"\n"!==e&&"\r"!==e&&"\t"!==e)s++;if(s>=t.length)return t;let i=t.substring(0,s);while(s<t.length)switch(e=t[s++],e){case"&":i+="&amp;";break;case"<":i+="&lt;";break;case'"':i+="&quot;";break;case"\n":i+="&#xA;";break;case"\r":i+="&#xD;";break;case"\t":i+="&#x9;";break;default:i+=e;break}return i}function DOMElement(t){this.nodeName=t,this.childNodes=[],this.attributes={},this.textContent="","style"===t&&(this.sheet={cssRules:[],insertRule(t){this.cssRules.push(t)}})}function DOMElementSerializer(t){this._node=t,this._state=0,this._loopIndex=0,this._attributeKeys=null,this._childSerializer=null}DOMElement.prototype={getAttribute:function(t){return t in this.attributes?this.attributes[t]:null},getAttributeNS:function(t,e){if(e in this.attributes)return this.attributes[e];if(t){const t=":"+e;for(const e in this.attributes)if(e.slice(-t.length)===t)return this.attributes[e]}return null},setAttribute:function(t,e){this.attributes[t]=e||""},setAttributeNS:function(t,e,s){this.setAttribute(e,s)},appendChild:function(t){const e=this.childNodes;e.includes(t)||e.push(t)},hasChildNodes:function(){return 0!==this.childNodes.length},cloneNode:function(){const t=new DOMElement(this.nodeName);return t.childNodes=this.childNodes,t.attributes=this.attributes,t.textContent=this.textContent,t},toString:function(){const t=[],e=this.getSerializer();let s;while(null!==(s=e.getNext()))t.push(s);return t.join("")},getSerializer:function(){return new DOMElementSerializer(this)}},DOMElementSerializer.prototype={getNext:function(){const t=this._node;switch(this._state){case 0:return++this._state,"<"+t.nodeName;case 1:if(++this._state,"svg:svg"===t.nodeName)return' xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg"';case 2:++this._state,this._loopIndex=0,this._attributeKeys=Object.keys(t.attributes);case 3:if(this._loopIndex<this._attributeKeys.length){const e=this._attributeKeys[this._loopIndex++];return" "+e+'="'+xmlEncode(t.attributes[e])+'"'}return++this._state,">";case 4:if("svg:tspan"===t.nodeName||"svg:style"===t.nodeName)return this._state=6,xmlEncode(t.textContent);++this._state,this._loopIndex=0;case 5:while(1){const e=this._childSerializer&&this._childSerializer.getNext();if(null!==e)return e;const s=t.childNodes[this._loopIndex++];if(!s){this._childSerializer=null,++this._state;break}this._childSerializer=new DOMElementSerializer(s)}case 6:return++this._state,"</"+t.nodeName+">";case 7:return null;default:throw new Error("Unexpected serialization state: "+this._state)}}};const document={childNodes:[],get currentScript(){return{src:""}},get documentElement(){return this},createElementNS(t,e){const s=new DOMElement(e);return s},createElement(t){return this.createElementNS("",t)},getElementsByTagName(t){return"head"===t?[this.head||(this.head=new DOMElement("head"))]:[]}};function Image(){this._src=null,this.onload=null}Image.prototype={get src(){return this._src},set src(t){this._src=t,this.onload&&this.onload()}},exports.document=document,exports.Image=Image;const exported_symbols=Object.keys(exports);exports.setStubs=function(t){exported_symbols.forEach((function(e){console.assert(!(e in t),"property should not be set: "+e),t[e]=exports[e]}))},exports.unsetStubs=function(t){exported_symbols.forEach((function(e){console.assert(e in t,"property should be set: "+e),delete t[e]}))};